{
  "Java Tutorial": [
    {
      "Java HOME": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n  public static void main(String[] args) {\n    System.out.println(\"Hello World\");\n  }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_helloworld\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Learn Java": "<p>Java is a popular programming language.</p><p>Java is used to develop mobile apps, web apps, desktop apps, games and much \nmore.</p><a class=\"w3-btn w3-margin-bottom\" href=\"java_intro.asp\" style=\"font-size: 18px;padding-left:25px;padding-right:25px;font-family: 'Source Sans Pro', sans-serif;margin-top:6px;\">Start learning Java now \u00bb</a>",
        "Examples in Each Chapter": "<p>Our \"Try it Yourself\" editor makes it easy to learn Java. You can edit Java code and view the result \nin your browser.</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n  public static void main(String[] args) {\n    System.out.println(\"Hello World\");\n  }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_helloworld\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p><b>Click on the \"Run example\" button to see how it works.</b></p><div class=\"w3-panel w3-note\">\n<p>We recommend reading this tutorial, in the sequence listed in the left menu.</p>\n<p>Java is an object oriented language and some concepts may be new. Take breaks when needed, and go\nover the examples as many times as needed.</p>\n</div><hr/>",
        "Java Exercises": "<div>\n<form action=\"exercise.asp?filename=exercise_syntax1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing part of the code below to output \"Hello World\".</p>\n<div class=\"exerciseprecontainer ws-grey\">\n<pre class=\"language-java ws-grey\" style=\"overflow: auto;\"><code>public class MyClass {\n  public static void main(String[] args) {</code>\n    <input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/>.<input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>.<input maxlength=\"7\" name=\"ex3\" style=\"width: 75px;\"/><code>(\"Hello World\");\n  }\n}\n</code></pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_syntax1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing part of the code below to output \"Hello World\".</p>\n<div class=\"exerciseprecontainer ws-grey\">\n<pre class=\"language-java ws-grey\" style=\"overflow: auto;\"><code>public class MyClass {\n  public static void main(String[] args) {</code>\n    <input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/>.<input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>.<input maxlength=\"7\" name=\"ex3\" style=\"width: 75px;\"/><code>(\"Hello World\");\n  }\n}\n</code></pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_syntax1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Insert the missing part of the code below to output \"Hello World\".</p><div class=\"exerciseprecontainer ws-grey\">\n<pre class=\"language-java ws-grey\" style=\"overflow: auto;\"><code>public class MyClass {\n  public static void main(String[] args) {</code>\n    <input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/>.<input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>.<input maxlength=\"7\" name=\"ex3\" style=\"width: 75px;\"/><code>(\"Hello World\");\n  }\n}\n</code></pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_syntax1\" target=\"_blank\">Start the Exercise</a></p>",
        "Java Quiz": "<p>Test your Java skills with a quiz.</p><p><a class=\"w3-button w3-blue w3-round\" href=\"java_quiz.asp\">Start Java Quiz</a></p><hr/>",
        "Learn by Examples": "<p>Learn by examples! This tutorial supplements all explanations with clarifying examples.</p><p><a class=\"w3-button ws-grey ws-hover-black w3-round\" href=\"java_examples.asp\">See All Java Examples</a></p><hr/><style>\n#img_mylearning {\n  max-width:100%;\n}\n</style>",
        "My Learning": "<p>Track your progress with the free \"My Learning\" program here at W3Schools.</p><p>Log in to your account, and start earning points!</p><p>This is an optional feature. You can study W3Schools without using My Learning.</p><a class=\"ga-featured\" href=\"https://my-learning.w3schools.com/\" target=\"_blank\">\n<img id=\"img_mylearning\" loading=\"lazy\" src=\"/images/mylearning.png\" style=\"max-width:100%;\"/></a><br/><a class=\"ws-btn w3-margin-bottom\"\n href=\"https://profile.w3schools.com/log-in?redirect_url=https%3A%2F%2Fmy-learning.w3schools.com\"\n target=\"_blank\"\n style=\"font-size: 18px;padding-left:25px;padding-right:25px;\n font-family : 'Source Sans Pro', sans-serif;\n margin-top:6px;\"\n >\n Sign up\n</a><hr/>",
        "Java Reference": "<p><a href=\"java_ref_keywords.asp\">Java Keywords</a></p><p><a href=\"java_ref_string.asp\">Java String Methods</a></p><p><a href=\"java_ref_math.asp\">Java Math Methods</a></p><hr/>",
        "Download Java": "<p>Download Java from the official Java web site:\n<a href=\"https://www.oracle.com/technetwork/java/javase/overview/index.html\" target=\"_blank\">https://www.oracle.com</a></p><br/><hr>\n\n<h2>Java Exam - Get Your Diploma!</h2><style>  \n\n#w3_cert_badge {\n  position: absolute;\n  right: 5%;\n  width: 220px;\n  transform: rotate(10deg);\n  bottom: -20%;\n}\n\n#w3_cert_arrow {\n  position: absolute;\n  right: 220px;\n  width: 220px;\n  transform: rotate(10deg);\n  bottom: 0;\n  z-index: 1;\n}\n\n#getdiploma {\n  position: relative;\n  padding: 0 60px 50px 60px;\n  margin-bottom: 125px;\n  border-radius: 16px;\n  background-color: #282A35;\n  color: #FFC0C7;\n  font-family: 'Source Sans Pro', sans-serif;\n}\n\n#getdiploma h2 {\n  font-size:50px;\n  margin-top: 1em;\n  margin-bottom: 1em;\n  font-family: 'Source Sans Pro', sans-serif\n}\n\n#getdiploma p {\n  font-size: 42px;\n  margin-top: 1em;\n  margin-bottom: 1em;\n  font-family: 'Source Sans Pro', sans-serif\n}\n\n#getdiploma a {\n  border-radius: 50px;\n  mxargin-top: 50px;\n  font-size: 18px;\n  background-color: #04AA6D;\n  padding: 17px 55px\n}\n\n#getdiploma a:hover,\n#getdiploma a:active {\n  background-color: #059862 !important;\n}\n\n\n@media screen and (max-width: 1442px) {\n  #w3_cert_arrow {\n    right: 212px;\n    bottom: -15px;\n  }\n}\n\n\n@media screen and (max-width: 1202px) {\n  #w3_cert_arrow {\n    display: none;\n  }\n}\n\n@media screen and (max-width: 992px) {\n  #w3_cert_arrow {\n    display: block;\n  }\n}\n\n\n@media screen and (max-width: 800px) {\n  #w3_cert_arrow {\n    display: none;\n  }\n  #getdiploma h2 {\n    font-size: 44px;\n  }\n  #getdiploma p {\n    font-size: 30px;\n  }\n\n  #getdiploma a {\n    width: 100%;\n  }\n  #w3_cert_badge {\n    top: -16px;\n    right: -8px;\n    width: 100px;\n  }\n  #getdiploma  {\n    margin-bottom: 55px;\n  }\n}\n</style><div class=\"w3-panel\" id=\"getdiploma\">\n<h2>Kickstart your career</h2>\n<p>Get certified by completing <span id=\"hey\">the</span> <span id=\"coursetopic\"></span> course</p>\n<a class=\"w3-btn w3-margin-bottom ga-featured\" href=\"https://campus.w3schools.com/collections/course-catalog\" id=\"cert_firstpage\" target=\"_blank\">Get certified</a>\n<script>\nvar foldername;\nfunction getCourseFolder() {\n  var pathname = window.location.pathname;\n  if (pathname.substr(0,1) == \"/\") {pathname = pathname.substr(1);}\n  pos = pathname.indexOf(\"/\");\n  foldername = pathname.substr(0, pos);\n  foldername = foldername.toUpperCase();\n  certLink = \"\";\n  switch (foldername) {\n  case \"CPP\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/c-course-1?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    foldername = \"C++\";\n    break;\n  case \"JAVA\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/java-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"BOOTSTRAP4\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/bootstrap-4-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;  \n  case \"XML\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/xml-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"JQUERY\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/jquery-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"ACCESSIBILITY\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/accessibility-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"BOOTSTRAP\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/bootstrap-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"HTML\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/html-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"CSS\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/css-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"JS\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/javascript-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    foldername = \"JavaScript\";\n    break;\n  case \"REACT\":\n    subjectText = \"React.js\";\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/react-js-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"SQL\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/sql-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"PHP\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/php-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"CYBERSECURITY\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/cyber-security-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    foldername = \"Cyber Security\";\n    break;\n  case \"R\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/r-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"NUMPY\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/numpy-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"TYPESCRIPT\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/learn-typescript?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break; \n  case \"PANDAS\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/pandas-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"PYTHON\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/python-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"CS\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/c-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    foldername = \"C#\";\n    break;    \n  default:\n    certLink = \"https://campus.w3schools.com/collections/course-catalog?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n  }\n  document.getElementById(\"cert_firstpage\").href = certLink;\n  if (foldername == \"QUIZTEST\" || foldername == \"EXERCISES\") {\n    document.getElementById(\"hey\").innerText = \"a\";\n  }\n  if (foldername == \"QUIZTEST\" || foldername == \"EXERCISES\") foldername = \"\";\n  document.getElementById(\"coursetopic\").innerText = foldername;\n}\ngetCourseFolder();\n</script>\n<svg fill=\"none\" id=\"w3_cert_arrow\" viewbox=\"0 0 170 143\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M9.7747 42.7064C9.7747 42.7064 19.5575 77.2951 44.4558 84.8113C62.0225 90.1142 81.0061 80.1196 77.791 68.3309C76.0904 62.0955 69.0574 62.4735 65.5106 65.8444C59.1003 71.9368 67.8591 89.7423 77.9205 96.1324C112.816 118.295 161.943 84.5867 161.943 84.5867\" stroke=\"white\" stroke-linecap=\"round\" stroke-width=\"2\"></path>\n<path d=\"M159.804 93.8429L162.704 84.4917L152.715 80.8293\" stroke=\"white\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></path>\n</svg>\n<svg data-name=\"w3_cert_badge\" id=\"w3_cert_badge\" viewbox=\"0 0 300 300\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style>.cls-1{fill:#04aa6b;}.cls-2{font-size:23px;}.cls-2,.cls-3,.cls-4{fill:#fff;}.cls-2,.cls-3{font-family:RobotoMono-Medium, Roboto Mono;font-weight:500;}.cls-3{font-size:20.08px;}</style></defs><circle class=\"cls-1\" cx=\"150\" cy=\"150\" r=\"146.47\" transform=\"translate(-62.13 150) rotate(-45)\"></circle><text class=\"cls-2\" transform=\"translate(93.54 63.89) rotate(-29.5)\">w</text><text class=\"cls-2\" transform=\"translate(107.13 56.35) rotate(-20.8)\">3</text><text class=\"cls-2\" transform=\"matrix(0.98, -0.21, 0.21, 0.98, 121.68, 50.97)\">s</text><text class=\"cls-2\" transform=\"translate(136.89 47.84) rotate(-3.47)\">c</text><text class=\"cls-2\" transform=\"translate(152.39 47.03) rotate(5.12)\">h</text><text class=\"cls-2\" transform=\"translate(167.85 48.54) rotate(13.72)\">o</text><text class=\"cls-2\" transform=\"translate(182.89 52.35) rotate(22.34)\">o</text><text class=\"cls-2\" transform=\"matrix(0.86, 0.52, -0.52, 0.86, 197.18, 58.36)\">l</text><text class=\"cls-2\" transform=\"matrix(0.77, 0.64, -0.64, 0.77, 210.4, 66.46)\">s</text><text class=\"cls-3\" transform=\"translate(35.51 186.66) rotate(69.37)\"> </text><text class=\"cls-3\" transform=\"matrix(0.47, 0.88, -0.88, 0.47, 41.27, 201.28)\">C</text><text class=\"cls-3\" transform=\"matrix(0.58, 0.81, -0.81, 0.58, 48.91, 215.03)\">E</text><text class=\"cls-3\" transform=\"matrix(0.67, 0.74, -0.74, 0.67, 58.13, 227.36)\">R</text><text class=\"cls-3\" transform=\"translate(69.16 238.92) rotate(39.44)\">T</text><text class=\"cls-3\" transform=\"matrix(0.85, 0.53, -0.53, 0.85, 81.47, 248.73)\">I</text><text class=\"cls-3\" transform=\"translate(94.94 256.83) rotate(24.36)\">F</text><text class=\"cls-3\" transform=\"translate(109.34 263.09) rotate(16.83)\">I</text><text class=\"cls-3\" transform=\"translate(124.46 267.41) rotate(9.34)\">E</text><text class=\"cls-3\" transform=\"translate(139.99 269.73) rotate(1.88)\">D</text><text class=\"cls-3\" transform=\"translate(155.7 270.01) rotate(-5.58)\"> </text><text class=\"cls-3\" transform=\"translate(171.32 268.24) rotate(-13.06)\"> </text><text class=\"cls-2\" transform=\"translate(187.55 266.81) rotate(-21.04)\">.</text><text class=\"cls-3\" transform=\"translate(203.27 257.7) rotate(-29.24)\"> </text><text class=\"cls-3\" transform=\"translate(216.84 249.83) rotate(-36.75)\"> </text><text class=\"cls-3\" transform=\"translate(229.26 240.26) rotate(-44.15)\">2</text><text class=\"cls-3\" transform=\"translate(240.39 229.13) rotate(-51.62)\">0</text><text class=\"cls-3\" transform=\"translate(249.97 216.63) rotate(-59.17)\">2</text><text class=\"cls-3\" transform=\"matrix(0.4, -0.92, 0.92, 0.4, 257.81, 203.04)\">3</text><path class=\"cls-4\" d=\"M196.64,136.31s3.53,3.8,8.5,3.8c3.9,0,6.75-2.37,6.75-5.59,0-4-3.64-5.81-8-5.81h-2.59l-1.53-3.48,6.86-8.13a34.07,34.07,0,0,1,2.7-2.85s-1.11,0-3.33,0H194.79v-5.86H217.7v4.28l-9.19,10.61c5.18.74,10.24,4.43,10.24,10.92s-4.85,12.3-13.19,12.3a17.36,17.36,0,0,1-12.41-5Z\"></path><path class=\"cls-4\" d=\"M152,144.24l30.24,53.86,14.94-26.61L168.6,120.63H135.36l-13.78,24.53-13.77-24.53H77.93l43.5,77.46.15-.28.16.28Z\"></path></svg>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"/default.asp\">\u276e Home</a>\n<a class=\"w3-right w3-btn\" href=\"java_intro.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Kickstart your career": "<p>Get certified by completing <span id=\"hey\">the</span> <span id=\"coursetopic\"></span> course</p><a class=\"w3-btn w3-margin-bottom ga-featured\" href=\"https://campus.w3schools.com/collections/course-catalog\" id=\"cert_firstpage\" target=\"_blank\">Get certified</a><script>\nvar foldername;\nfunction getCourseFolder() {\n  var pathname = window.location.pathname;\n  if (pathname.substr(0,1) == \"/\") {pathname = pathname.substr(1);}\n  pos = pathname.indexOf(\"/\");\n  foldername = pathname.substr(0, pos);\n  foldername = foldername.toUpperCase();\n  certLink = \"\";\n  switch (foldername) {\n  case \"CPP\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/c-course-1?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    foldername = \"C++\";\n    break;\n  case \"JAVA\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/java-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"BOOTSTRAP4\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/bootstrap-4-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;  \n  case \"XML\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/xml-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"JQUERY\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/jquery-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"ACCESSIBILITY\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/accessibility-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"BOOTSTRAP\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/bootstrap-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"HTML\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/html-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"CSS\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/css-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"JS\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/javascript-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    foldername = \"JavaScript\";\n    break;\n  case \"REACT\":\n    subjectText = \"React.js\";\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/react-js-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"SQL\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/sql-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"PHP\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/php-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"CYBERSECURITY\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/cyber-security-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    foldername = \"Cyber Security\";\n    break;\n  case \"R\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/r-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"NUMPY\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/numpy-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"TYPESCRIPT\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/learn-typescript?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break; \n  case \"PANDAS\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/pandas-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"PYTHON\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/python-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    break;\n  case \"CS\":\n    certLink = \"https://campus.w3schools.com/collections/course-catalog/products/c-course?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n    foldername = \"C#\";\n    break;    \n  default:\n    certLink = \"https://campus.w3schools.com/collections/course-catalog?utm_source=classic&utm_medium=tutorials&utm_campaign=first-page-ad\";\n  }\n  document.getElementById(\"cert_firstpage\").href = certLink;\n  if (foldername == \"QUIZTEST\" || foldername == \"EXERCISES\") {\n    document.getElementById(\"hey\").innerText = \"a\";\n  }\n  if (foldername == \"QUIZTEST\" || foldername == \"EXERCISES\") foldername = \"\";\n  document.getElementById(\"coursetopic\").innerText = foldername;\n}\ngetCourseFolder();\n</script><svg fill=\"none\" id=\"w3_cert_arrow\" viewbox=\"0 0 170 143\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M9.7747 42.7064C9.7747 42.7064 19.5575 77.2951 44.4558 84.8113C62.0225 90.1142 81.0061 80.1196 77.791 68.3309C76.0904 62.0955 69.0574 62.4735 65.5106 65.8444C59.1003 71.9368 67.8591 89.7423 77.9205 96.1324C112.816 118.295 161.943 84.5867 161.943 84.5867\" stroke=\"white\" stroke-linecap=\"round\" stroke-width=\"2\"></path>\n<path d=\"M159.804 93.8429L162.704 84.4917L152.715 80.8293\" stroke=\"white\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"></path>\n</svg><svg data-name=\"w3_cert_badge\" id=\"w3_cert_badge\" viewbox=\"0 0 300 300\" xmlns=\"http://www.w3.org/2000/svg\"><defs><style>.cls-1{fill:#04aa6b;}.cls-2{font-size:23px;}.cls-2,.cls-3,.cls-4{fill:#fff;}.cls-2,.cls-3{font-family:RobotoMono-Medium, Roboto Mono;font-weight:500;}.cls-3{font-size:20.08px;}</style></defs><circle class=\"cls-1\" cx=\"150\" cy=\"150\" r=\"146.47\" transform=\"translate(-62.13 150) rotate(-45)\"></circle><text class=\"cls-2\" transform=\"translate(93.54 63.89) rotate(-29.5)\">w</text><text class=\"cls-2\" transform=\"translate(107.13 56.35) rotate(-20.8)\">3</text><text class=\"cls-2\" transform=\"matrix(0.98, -0.21, 0.21, 0.98, 121.68, 50.97)\">s</text><text class=\"cls-2\" transform=\"translate(136.89 47.84) rotate(-3.47)\">c</text><text class=\"cls-2\" transform=\"translate(152.39 47.03) rotate(5.12)\">h</text><text class=\"cls-2\" transform=\"translate(167.85 48.54) rotate(13.72)\">o</text><text class=\"cls-2\" transform=\"translate(182.89 52.35) rotate(22.34)\">o</text><text class=\"cls-2\" transform=\"matrix(0.86, 0.52, -0.52, 0.86, 197.18, 58.36)\">l</text><text class=\"cls-2\" transform=\"matrix(0.77, 0.64, -0.64, 0.77, 210.4, 66.46)\">s</text><text class=\"cls-3\" transform=\"translate(35.51 186.66) rotate(69.37)\"> </text><text class=\"cls-3\" transform=\"matrix(0.47, 0.88, -0.88, 0.47, 41.27, 201.28)\">C</text><text class=\"cls-3\" transform=\"matrix(0.58, 0.81, -0.81, 0.58, 48.91, 215.03)\">E</text><text class=\"cls-3\" transform=\"matrix(0.67, 0.74, -0.74, 0.67, 58.13, 227.36)\">R</text><text class=\"cls-3\" transform=\"translate(69.16 238.92) rotate(39.44)\">T</text><text class=\"cls-3\" transform=\"matrix(0.85, 0.53, -0.53, 0.85, 81.47, 248.73)\">I</text><text class=\"cls-3\" transform=\"translate(94.94 256.83) rotate(24.36)\">F</text><text class=\"cls-3\" transform=\"translate(109.34 263.09) rotate(16.83)\">I</text><text class=\"cls-3\" transform=\"translate(124.46 267.41) rotate(9.34)\">E</text><text class=\"cls-3\" transform=\"translate(139.99 269.73) rotate(1.88)\">D</text><text class=\"cls-3\" transform=\"translate(155.7 270.01) rotate(-5.58)\"> </text><text class=\"cls-3\" transform=\"translate(171.32 268.24) rotate(-13.06)\"> </text><text class=\"cls-2\" transform=\"translate(187.55 266.81) rotate(-21.04)\">.</text><text class=\"cls-3\" transform=\"translate(203.27 257.7) rotate(-29.24)\"> </text><text class=\"cls-3\" transform=\"translate(216.84 249.83) rotate(-36.75)\"> </text><text class=\"cls-3\" transform=\"translate(229.26 240.26) rotate(-44.15)\">2</text><text class=\"cls-3\" transform=\"translate(240.39 229.13) rotate(-51.62)\">0</text><text class=\"cls-3\" transform=\"translate(249.97 216.63) rotate(-59.17)\">2</text><text class=\"cls-3\" transform=\"matrix(0.4, -0.92, 0.92, 0.4, 257.81, 203.04)\">3</text><path class=\"cls-4\" d=\"M196.64,136.31s3.53,3.8,8.5,3.8c3.9,0,6.75-2.37,6.75-5.59,0-4-3.64-5.81-8-5.81h-2.59l-1.53-3.48,6.86-8.13a34.07,34.07,0,0,1,2.7-2.85s-1.11,0-3.33,0H194.79v-5.86H217.7v4.28l-9.19,10.61c5.18.74,10.24,4.43,10.24,10.92s-4.85,12.3-13.19,12.3a17.36,17.36,0,0,1-12.41-5Z\"></path><path class=\"cls-4\" d=\"M152,144.24l30.24,53.86,14.94-26.61L168.6,120.63H135.36l-13.78,24.53-13.77-24.53H77.93l43.5,77.46.15-.28.16.28Z\"></path></svg>"
      },
      "url": "default.asp"
    },
    {
      "Java Intro": {
        "examples": [],
        "What is Java?": "<p>Java is a popular programming language, created in 1995.</p><p>It is owned by Oracle, and more than <strong>3 billion</strong> devices run Java.</p><p>It is used for:</p><ul>\n<li>Mobile applications (specially Android apps)</li>\n<li>Desktop applications</li>\n<li>Web applications</li>\n<li>Web servers and application servers</li>\n<li>Games</li>\n<li>Database connection</li>\n<li>And much, much more!</li>\n</ul><hr/>",
        "Why Use Java?": "<ul>\n<li>Java works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc.)</li>\n<li>It is one of the most popular programming language in the world</li>\n<li>It has a large demand in the current job market</li>\n<li>It is easy to learn and simple to use</li>\n<li>It is open-source and free</li>\n<li>It is secure, fast and powerful</li>\n<li>It has a huge community support (tens of millions of developers)</li>\n<li>Java is an object oriented language which gives a clear structure to programs and allows code to be reused, lowering development costs</li>\n<li>As Java is close to <a href=\"/cpp/default.asp\">C++</a> and <a href=\"/cs/default.asp\">C#</a>, it makes it easy for programmers to switch to Java or vice versa</li>\n</ul><hr/>",
        "Get Started": "<p>It is not necessary to have any prior programming experience.</p><a class=\"ws-btn ws-grey ws-hover-black\" href=\"java_getstarted.asp\">Get Started \u00bb</a><hr/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"default.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_getstarted.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_intro.asp"
    },
    {
      "Java Get Started": {
        "examples": [
          "<div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java -version\n</div>\n</div>",
          "<div class=\"w3-example w3-padding-16\">\n<div class=\"notranslate w3-black w3-padding\">\n<code>\njava version \"11.0.1\" 2018-10-16 LTS<br/>\nJava(TM) SE Runtime Environment 18.9 (build 11.0.1+13-LTS)<br/>\nJava HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.1+13-LTS, mixed mode)\n</code>\n</div>\n</div>",
          "<div class=\"w3-example\">\n<p>Main.java</p>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(\"Hello World\");\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_helloworld\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;javac Main.java\n</div>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java Main\n</div>\n</div>",
          "<div class=\"w3-example w3-padding-16\">\n<div class=\"notranslate w3-black w3-padding\">\n<code class=\"notranslate\">\nHello World\n</code>\n</div>\n<a class=\"w3-btn w3-margin-top\" href=\"tryjava.asp?filename=demo_helloworld\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>"
        ],
        "Java Install": "<p>Some PCs might have Java already installed.</p><p>To check if you have Java installed on a Windows PC, search in the start bar for Java or type the following in Command Prompt (cmd.exe):</p><div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java -version\n</div>\n</div><p>If Java is installed, you will see something like this (depending on version):</p><div class=\"w3-example w3-padding-16\">\n<div class=\"notranslate w3-black w3-padding\">\n<code>\njava version \"11.0.1\" 2018-10-16 LTS<br/>\nJava(TM) SE Runtime Environment 18.9 (build 11.0.1+13-LTS)<br/>\nJava HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.1+13-LTS, mixed mode)\n</code>\n</div>\n</div><p>If you do not have Java installed on your computer, you can download it for free at <a href=\"https://www.oracle.com/technetwork/java/javase/overview/index.html\" target=\"_blank\">oracle.com</a>.</p><p><strong>Note:</strong> In this tutorial, we will write Java code in a text editor. However, it is possible to write Java in an Integrated Development Environment, such as IntelliJ IDEA, Netbeans or Eclipse, which are particularly useful when managing larger collections of Java files.</p><hr/>",
        "Setup for Windows": "<p>To install Java on Windows:</p><ol>\n<li>Go to \"System Properties\" (Can be found on Control Panel &gt; \nSystem and Security &gt; System &gt; Advanced System Settings)</li>\n<li>Click on the \"Environment variables\" button under the \"Advanced\" tab</li>\n<li>Then, select the \"Path\" variable in System variables and click on the \"Edit\" \nbutton</li>\n<li>Click on the \"New\" button and add the path where Java is installed, \n  followed by <strong>\\bin</strong>. By default, Java is installed in C:\\Program \n  Files\\Java\\jdk-11.0.1 (If nothing else was specified when you installed it). \n  In that case, You will have to add a new path with: <strong>C:\\Program \n  Files\\Java\\jdk-11.0.1\\bin </strong><br/>\n  Then, click \"OK\", and save the settings</li>\n<li>At last, open Command Prompt (cmd.exe) and type <strong>java -version</strong> to see if Java is \n  running on your machine</li>\n</ol><button onclick=\"myAccFunction1('DemoAcc')\" class=\"w3-btn w3-block w3-dark-grey w3-left-align xx w3-border-bottom\">Show how to install Java step-by-step with images &raquo;</button>\n<div id=\"DemoAcc\" class=\"w3-light-grey w3-padding-16 w3-container\">\n<h2 style=\"margin-top:0\">Step 1</h2>\n<img src=\"system.png\" class=\"w3-image\">\n</div><button class=\"w3-btn w3-block w3-left-align xx w3-border-bottom\" onclick=\"myAccFunction('DemoAcc')\">Show how to install Java step-by-step with images \u00bb</button><div class=\"w3-hide ws-grey w3-padding-16 w3-container\" id=\"DemoAcc\">\n<h2 style=\"margin-top:0\">Step 1</h2>\n<img class=\"w3-image\" src=\"system.png\"/>\n</div><button class=\"w3-btn w3-block w3-left-align xx w3-border-bottom\" onclick=\"myAccFunction('DemoAcc2')\">Step 2 \u00bb</button><div class=\"w3-hide ws-grey w3-padding-16 w3-container\" id=\"DemoAcc2\">\n<h2 style=\"margin-top:0\">Step 2</h2>\n<img class=\"w3-image\" src=\"system1.png\"/>\n</div><button class=\"w3-btn w3-block w3-left-align xx w3-border-bottom\" onclick=\"myAccFunction('DemoAcc3')\">Step 3 \u00bb</button><div class=\"w3-hide ws-grey w3-padding-16 w3-container\" id=\"DemoAcc3\">\n<h2 style=\"margin-top:0\">Step 3</h2>\n<img class=\"w3-image\" src=\"path2.png\"/>\n</div><button class=\"w3-btn w3-block w3-left-align xx w3-border-bottom\" onclick=\"myAccFunction('DemoAcc4')\">Step 4 \u00bb</button><div class=\"w3-hide ws-grey w3-padding-16 w3-container\" id=\"DemoAcc4\">\n<h2 style=\"margin-top:0\">Step 4</h2>\n<img class=\"w3-image\" src=\"path3.png\"/>\n</div><button class=\"w3-btn w3-block w3-left-align xx w3-border-bottom\" onclick=\"myAccFunction('DemoAcc5')\">Step 5 \u00bb</button><div class=\"w3-hide w3-light-grey w3-padding-16 w3-container\" id=\"DemoAcc5\">\n<h2 style=\"margin-top:0\">Step 5</h2>\n<p>Write the following in the command line (cmd.exe):</p>\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java -version\n</div>\n<p>If Java was successfully installed, you will see something like this (depending on version):</p>\n<div class=\"w3-code notranslate w3-black\">\njava version \"11.0.1\" 2018-10-16 LTS<br/>\nJava(TM) SE Runtime Environment 18.9 (build 11.0.1+13-LTS)<br/>\nJava HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.1+13-LTS, mixed mode)\n</div>\n</div><script>\nfunction myAccFunction1(id) {\n    var x = document.getElementById(id);\n    if (x.className.indexOf(\"w3-hide\") == -1) {\n        x.className += \" w3-hide\";\n        x.previousElementSibling.className = \n  x.previousElementSibling.className.replace(\"ws-black\", \"\");\n   } else { \n        x.className = x.className.replace(\" w3-hide\", \"\");\n         x.previousElementSibling.className += \" ws-black\";\n    }\n}\n</script><script>\nfunction myAccFunction(id) {\n    var x = document.getElementById(id);\n    if (x.className.indexOf(\"w3-show\") == -1) {\n        x.className += \" w3-show\";\n         x.previousElementSibling.className += \" ws-black\";\n   } else { \n        x.className = x.className.replace(\" w3-show\", \"\");\n          x.previousElementSibling.className = \n  x.previousElementSibling.className.replace(\"ws-black\", \"\");\n  }\n}\n</script><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Step 1": "<img class=\"w3-image\" src=\"system.png\"/>",
        "Step 2": "<img class=\"w3-image\" src=\"system1.png\"/>",
        "Step 3": "<img class=\"w3-image\" src=\"path2.png\"/>",
        "Step 4": "<img class=\"w3-image\" src=\"path3.png\"/>",
        "Step 5": "<p>Write the following in the command line (cmd.exe):</p><div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java -version\n</div><p>If Java was successfully installed, you will see something like this (depending on version):</p><div class=\"w3-code notranslate w3-black\">\njava version \"11.0.1\" 2018-10-16 LTS<br/>\nJava(TM) SE Runtime Environment 18.9 (build 11.0.1+13-LTS)<br/>\nJava HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.1+13-LTS, mixed mode)\n</div>",
        "Java Quickstart": "<p>In Java, every application begins with a class name, and that class must match the filename.</p><p>Let's create our first Java file, called Main.java, which can be done in any text editor \n(like Notepad).</p><p>The file should contain a \"Hello World\" message, which is written with the \nfollowing code:</p><div class=\"w3-example\">\n<p>Main.java</p>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(\"Hello World\");\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_helloworld\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>Don't worry if you don't understand the code above - we will discuss it in detail in later chapters. \nFor now, focus on <strong>how</strong> to run the code above.</p><p>Save the code in Notepad as \"Main.java\". Open Command Prompt (cmd.exe), navigate to the directory where you saved your file, and type \"javac \nMain.java\":</p><div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;javac Main.java\n</div>\n</div><p>This will compile your code. If there are no errors in the code, the command prompt will take you to the next line. \nNow, type \"java Main\" to run the file:</p><div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java Main\n</div>\n</div><p>The output should read:</p><div class=\"w3-example w3-padding-16\">\n<div class=\"notranslate w3-black w3-padding\">\n<code class=\"notranslate\">\nHello World\n</code>\n</div>\n<a class=\"w3-btn w3-margin-top\" href=\"tryjava.asp?filename=demo_helloworld\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><p><strong>Congratulations!</strong> You have written and executed your first Java program.</p><hr/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_intro.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_syntax.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_getstarted.asp"
    },
    {
      "Java Syntax": {
        "examples": [
          "<div class=\"w3-example\">\n<p>Main.java</p>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(\"Hello World\");\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_helloworld\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div>",
          "<div class=\"w3-example w3-padding-16\">\n<div class=\"notranslate w3-black w3-padding\">\n<code class=\"notranslate\">\nHello World\n</code>\n</div>\n</div>",
          "<div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code>public static void <strong>main</strong>(String[] args)\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code>public static void main(String[] args) {\n\u00a0 <strong>System.out.println(\"Hello World\");</strong>\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_helloworld\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div>"
        ],
        "Java Syntax": "<p>In the previous chapter, we created a Java file called <code class=\"w3-codespan\">Main.java</code>, and we used the following code to print \"Hello World\" to the screen:</p><div class=\"w3-example\">\n<p>Main.java</p>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(\"Hello World\");\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_helloworld\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div><h3>Example explained</h3><p>Every line of code that runs in Java must be inside a <code class=\"w3-codespan\">class</code>.\nIn our example, we named the class <strong>Main</strong>. A class should always start with \nan uppercase first letter.</p><p><strong>Note:</strong> Java is case-sensitive: \"MyClass\" and \"myclass\" has \ndifferent meaning.</p><p>The name of the java file <strong>must match</strong> the class name.\nWhen saving the file, save it using the class name and add \".java\" to the end of \nthe filename. To run the example above on your computer, make sure that Java is \nproperly installed: Go to the <a href=\"java_getstarted.asp\">Get Started Chapter</a> for how to install Java. The output should be:</p><div class=\"w3-example w3-padding-16\">\n<div class=\"notranslate w3-black w3-padding\">\n<code class=\"notranslate\">\nHello World\n</code>\n</div>\n</div><hr/>",
        "The main Method": "<p>The <code class=\"w3-codespan\">main()</code> method is required and you will \nsee it in every Java \nprogram:</p><div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code>public static void <strong>main</strong>(String[] args)\n</code></pre>\n</div><p>Any code inside the <code class=\"w3-codespan\">main()</code> method will be executed. \nDon't worry about the keywords before and after main. You will get to know \nthem bit by bit while reading this tutorial.</p><p>For now, just remember that every Java program has a <code class=\"w3-codespan\">class</code> name which \nmust match the filename, and that every program must contain the \n<code class=\"w3-codespan\">main()</code> method.</p><p>We will use them in almost all of our examples, and you will get to know them bit by bit while reading this tutorial.</p>\n<p>However, if you want to get to know them right away:</p>\n<ul>\n<li><code class=\"w3-codespan\">public</code> - anyone can access it</li>\n<li><code class=\"w3-codespan\">static</code> - method can be run without creating an \nobject of the class containing the main method</li>\n<li><code class=\"w3-codespan\">void</code> - method doesn't return any value</li>\n<li><code class=\"w3-codespan\">main</code> - the name of the method</li>\n<li>The main method's parameters are declared inside the parentheses (String[] args). You will learn more about these in a later chapter.</li>\n</ul><hr/>",
        "System.out.println()": "<p>Inside the <code class=\"w3-codespan\">main()</code> method, we can use the <code class=\"w3-codespan\">println()</code> \nmethod to print a line of text to the screen:</p><div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code>public static void main(String[] args) {\n\u00a0 <strong>System.out.println(\"Hello World\");</strong>\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_helloworld\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div><div class=\"w3-note w3-panel\">\n<p><strong>Note:</strong> The curly braces <code class=\"w3-codespan\">{}</code> marks the beginning and the end of a block of code.</p>\n<p><code class=\"w3-codespan\">System</code> is a built-in Java class that contains useful members, such as <code class=\"w3-codespan\">out</code>, \n  which is short for \"output\". The <code class=\"w3-codespan\">println()</code> method, short for \n  \"print line\", is used to print a value to the screen (or a file).</p>\n<p>Don't worry too much about <code class=\"w3-codespan\">System</code>, <code class=\"w3-codespan\">out</code> and <code class=\"w3-codespan\">println()</code>. Just know that you need them \ntogether to print stuff to the screen.</p>\n<p>You should also note that each code statement must end with a semicolon (<code class=\"w3-codespan\">;</code>).</p></div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_syntax1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing part of the code below to output \"Hello World\".</p>\n<div class=\"exerciseprecontainer\">\n<pre class=\"language-java\" style=\"overflow: auto;\"><code>public class MyClass {\n  public static void main(String[] args) {</code>\n    <input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/>.<input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>.<input maxlength=\"7\" name=\"ex3\" style=\"width: 75px;\"/><code>(\"Hello World\");\n  }\n}\n</code></pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_syntax1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_getstarted.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_output.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing part of the code below to output \"Hello World\".</p>\n<div class=\"exerciseprecontainer\">\n<pre class=\"language-java\" style=\"overflow: auto;\"><code>public class MyClass {\n  public static void main(String[] args) {</code>\n    <input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/>.<input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>.<input maxlength=\"7\" name=\"ex3\" style=\"width: 75px;\"/><code>(\"Hello World\");\n  }\n}\n</code></pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_syntax1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Insert the missing part of the code below to output \"Hello World\".</p><div class=\"exerciseprecontainer\">\n<pre class=\"language-java\" style=\"overflow: auto;\"><code>public class MyClass {\n  public static void main(String[] args) {</code>\n    <input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/>.<input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>.<input maxlength=\"7\" name=\"ex3\" style=\"width: 75px;\"/><code>(\"Hello World\");\n  }\n}\n</code></pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_syntax1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_syntax.asp"
    },
    {
      "Java Output": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(\"Hello World!\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_output\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(\"Hello World!\");\nSystem.out.println(\"I am learning Java.\");\nSystem.out.println(\"It is awesome!\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_output_many\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(\"This sentence will work!\");</code></pre>\n<pre class=\"language-java w3-white w3-border-red\"><code>System.out.println(This sentence will produce an error);</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_output_quotes_err\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.print(\"Hello World! \");\nSystem.out.print(\"I will print on the same line.\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_output_print\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div>"
        ],
        "Print Text": "<p>You learned from the previous chapter that you can use the <code class=\"w3-codespan\">println()</code> method to output values or print text in Java:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(\"Hello World!\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_output\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div><p>You can add as many <code class=\"w3-codespan\">println()</code> methods as you want. Note that it will add a new line for each method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(\"Hello World!\");\nSystem.out.println(\"I am learning Java.\");\nSystem.out.println(\"It is awesome!\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_output_many\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div><hr/>",
        "Double Quotes": "<p>When you are working with text, it must be wrapped inside double quotations marks <code class=\"w3-codespan\">\"\"</code>.</p><p>If you forget the double quotes, an error occurs:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(\"This sentence will work!\");</code></pre>\n<pre class=\"language-java w3-white w3-border-red\"><code>System.out.println(This sentence will produce an error);</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_output_quotes_err\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div><hr/>",
        "The Print() Method": "<p>There is also a <code class=\"w3-codespan\">print()</code> method, which is similar to <code class=\"w3-codespan\">println()</code>.</p><p>The only difference is that it does not insert a new line at the end of the output:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.print(\"Hello World! \");\nSystem.out.print(\"I will print on the same line.\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_output_print\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div><p>Note that we add an extra space (after \"Hello World!\" in the example above), \nfor better readability.</p><div class=\"w3-note w3-panel\">\n<p>In this tutorial, we will only use <code class=\"w3-codespan\">println()</code> as it makes it easier to read the output of code.</p>\n</div><hr/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_syntax.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_output_numbers.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_output.asp"
    },
    {
      "Java Comments": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// This is a comment\nSystem.out.println(\"Hello World\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_single_comment\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(\"Hello World\"); // This is a comment\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_single_comment_end\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>/* The code below will print the words Hello World\nto the screen, and it is amazing */\nSystem.out.println(\"Hello World\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_multi_comment\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div>"
        ],
        "Java Comments": "<p>Comments can be used to explain Java code, and to make it more readable. It can also be used to \nprevent execution when testing alternative code.</p><hr/>",
        "Single-line Comments": "<p>Single-line comments start with two forward slashes (<code class=\"w3-codespan\">//</code>).</p><p>Any text between <code class=\"w3-codespan\">//</code> and the end of the line \nis ignored by Java (will not be executed).</p><p>This example uses a single-line comment before a line of code:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// This is a comment\nSystem.out.println(\"Hello World\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_single_comment\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div><p>This example uses a single-line comment at the end of a line of code:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(\"Hello World\"); // This is a comment\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_single_comment_end\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Java Multi-line Comments": "<p>Multi-line comments start with <code class=\"w3-codespan\">/*</code> and ends with <code class=\"w3-codespan\">*/</code>.</p><p>Any text between <code class=\"w3-codespan\">/*</code> and <code class=\"w3-codespan\">*/</code> will be ignored by Java.</p><p>This example uses a multi-line comment (a comment block) to explain the code:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>/* The code below will print the words Hello World\nto the screen, and it is amazing */\nSystem.out.println(\"Hello World\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_multi_comment\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div><div class=\"w3-note w3-panel\">\n<h4>Single or multi-line comments?</h4>\n<p>It is up to you which you want to use. Normally, we use <code class=\"w3-codespan\">//</code> for short comments, and <code class=\"w3-codespan\">/* */</code> for longer.</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_syntax2\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing part to create two types of comments.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"2\" name=\"ex1\" style=\"width: 25px;\"/> This is a single-line comment\n<input maxlength=\"2\" name=\"ex2\" style=\"width: 25px;\"/> This is a multi-line comment <input maxlength=\"2\" name=\"ex3\" style=\"width: 25px;\"/>\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_syntax2\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_output_numbers.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_variables.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing part to create two types of comments.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"2\" name=\"ex1\" style=\"width: 25px;\"/> This is a single-line comment\n<input maxlength=\"2\" name=\"ex2\" style=\"width: 25px;\"/> This is a multi-line comment <input maxlength=\"2\" name=\"ex3\" style=\"width: 25px;\"/>\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_syntax2\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Insert the missing part to create two types of comments.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"2\" name=\"ex1\" style=\"width: 25px;\"/> This is a single-line comment\n<input maxlength=\"2\" name=\"ex2\" style=\"width: 25px;\"/> This is a multi-line comment <input maxlength=\"2\" name=\"ex3\" style=\"width: 25px;\"/>\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_syntax2\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_comments.asp"
    },
    {
      "Java Variables": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\" style=\"font-style: italic\"><code>type variableName = value;\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a variable called <strong>name</strong> of type <code class=\"w3-codespan\">String</code> and assign it the value \"<strong>John</strong>\":</p>\n<pre class=\"language-java w3-white\"><code>String name = \"John\";\nSystem.out.println(name);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_variables\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a variable called <strong>myNum</strong> of type <code class=\"w3-codespan\">int</code> and assign it the value <strong>15</strong>:</p>\n<pre class=\"language-java w3-white\"><code>int myNum = 15;\nSystem.out.println(myNum);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_variables_int\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int myNum;\nmyNum = 15;\nSystem.out.println(myNum);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_variables_int2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Change the value of <code class=\"w3-codespan\">myNum</code> from <code class=\"w3-codespan\">15</code> to <code class=\"w3-codespan\">20</code>:</p>\n<pre class=\"language-java w3-white\"><code>int myNum = 15;\nmyNum = 20;  // myNum is now 20\nSystem.out.println(myNum);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_variables_ow\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example w3-pale-red\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white w3-border-red\"><code>final int myNum = 15;\nmyNum = 20;  // will generate an error: cannot assign a value to a final variable\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_variables_final\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int myNum = 5;\nfloat myFloatNum = 5.99f;\nchar myLetter = 'D';\nboolean myBool = true;\nString myText = \"Hello\";\n</code></pre>\n</div>"
        ],
        "Java Variables": "Now that you know how to print text and number values, you should know how to store them, and to use them when you need to.Now that you know how to print text and number values, you should know how to store and use them whenever needed.<p>Variables are containers for storing data values. </p><p>In Java, there are different <strong>types</strong> of variables, for example:</p><ul>\n<li><code class=\"w3-codespan\">String</code> - stores text, such as \"Hello\". String values are \n surrounded by double quotes</li>\n<li><code class=\"w3-codespan\">int</code> - stores integers (whole numbers), without decimals, such as 123 or -123</li>\n<li><code class=\"w3-codespan\">float</code> - stores floating point numbers, with decimals, such as 19.99 or -19.99</li>\n<li><code class=\"w3-codespan\">char</code> - stores single characters, such as \n 'a' or 'B'. Char values are surrounded by single quotes</li>\n<li><code class=\"w3-codespan\">boolean</code> - stores values with two states: \n true or false</li>\n</ul><hr/>",
        "Declaring (Creating) Variables": "<p>To create a variable, you must specify the type and assign it a value:</p><div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\" style=\"font-style: italic\"><code>type variableName = value;\n</code></pre>\n</div><p>Where <em>type</em> is one of Java's types (such as <code class=\"w3-codespan\">int</code> or <code class=\"w3-codespan\">String</code>), and \n<em>variableName</em> is the name of the variable (such as <strong>x</strong> or\n<strong>name</strong>). The <b>equal sign</b> is used to assign values to the variable.</p><p>To create a variable that should store text, look at the following example:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a variable called <strong>name</strong> of type <code class=\"w3-codespan\">String</code> and assign it the value \"<strong>John</strong>\":</p>\n<pre class=\"language-java w3-white\"><code>String name = \"John\";\nSystem.out.println(name);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_variables\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>To create a variable that should store a number, look at the following example:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a variable called <strong>myNum</strong> of type <code class=\"w3-codespan\">int</code> and assign it the value <strong>15</strong>:</p>\n<pre class=\"language-java w3-white\"><code>int myNum = 15;\nSystem.out.println(myNum);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_variables_int\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>You can also declare a variable without assigning the value, and assign the value later:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int myNum;\nmyNum = 15;\nSystem.out.println(myNum);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_variables_int2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>Note that if you assign a new value to an existing variable, it will overwrite the previous value:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Change the value of <code class=\"w3-codespan\">myNum</code> from <code class=\"w3-codespan\">15</code> to <code class=\"w3-codespan\">20</code>:</p>\n<pre class=\"language-java w3-white\"><code>int myNum = 15;\nmyNum = 20;  // myNum is now 20\nSystem.out.println(myNum);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_variables_ow\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Final Variables": "<p>If you don't want others (or yourself) to overwrite existing values, use the <code class=\"w3-codespan\">final</code> keyword (this will declare the variable as \"final\" or \"constant\", which means unchangeable and read-only):</p><div class=\"w3-example w3-pale-red\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white w3-border-red\"><code>final int myNum = 15;\nmyNum = 20;  // will generate an error: cannot assign a value to a final variable\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_variables_final\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Other Types": "<p>A demonstration of how to declare variables of other types:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int myNum = 5;\nfloat myFloatNum = 5.99f;\nchar myLetter = 'D';\nboolean myBool = true;\nString myText = \"Hello\";\n</code></pre>\n</div><div class=\"w3-note w3-panel\">\n<p>You will learn more about <a href=\"java_data_types.asp\">data types</a> in the next section.</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_variables1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Create a variable named <code class=\"w3-codespan\">carName</code> and assign the value <code class=\"w3-codespan\">Volvo</code> to it.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/> <input maxlength=\"7\" name=\"ex2\" style=\"width: 74px;\"/> = <input maxlength=\"7\" name=\"ex3\" style=\"width: 74px;\"/>;\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_variables1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_comments.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_variables_print.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Create a variable named <code class=\"w3-codespan\">carName</code> and assign the value <code class=\"w3-codespan\">Volvo</code> to it.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/> <input maxlength=\"7\" name=\"ex2\" style=\"width: 74px;\"/> = <input maxlength=\"7\" name=\"ex3\" style=\"width: 74px;\"/>;\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_variables1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Create a variable named <code class=\"w3-codespan\">carName</code> and assign the value <code class=\"w3-codespan\">Volvo</code> to it.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/> <input maxlength=\"7\" name=\"ex2\" style=\"width: 74px;\"/> = <input maxlength=\"7\" name=\"ex3\" style=\"width: 74px;\"/>;\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_variables1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_variables.asp"
    },
    {
      "Java Data Types": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int myNum = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Integer (whole number)\nfloat myFloatNum = 5.99f;\u00a0\u00a0\u00a0 // Floating point number\nchar myLetter = 'D';\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Character\nboolean myBool = true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Boolean\nString myText = \"Hello\";\u00a0\u00a0\u00a0\u00a0 // String\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_data_types\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Data Types": "<p>As explained in the previous chapter, a <a href=\"java_variables.asp\">variable</a> in Java must be a specified data type:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int myNum = 5;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Integer (whole number)\nfloat myFloatNum = 5.99f;\u00a0\u00a0\u00a0 // Floating point number\nchar myLetter = 'D';\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Character\nboolean myBool = true;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Boolean\nString myText = \"Hello\";\u00a0\u00a0\u00a0\u00a0 // String\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_data_types\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>Data types are divided into two groups:</p><ul>\n<li>Primitive data types - includes <code class=\"w3-codespan\">byte</code>, <code class=\"w3-codespan\">short</code>, <code class=\"w3-codespan\">int</code>, <code class=\"w3-codespan\">long</code>, \n <code class=\"w3-codespan\">float</code>, <code class=\"w3-codespan\">double</code>, <code class=\"w3-codespan\">boolean</code> and <code class=\"w3-codespan\">char</code></li>\n<li>Non-primitive data types - such as <code class=\"w3-codespan\"><a href=\"java_strings.asp\">String</a></code>, <a href=\"java_arrays.asp\">Arrays</a> and  <a href=\"java_classes.asp\">Classes</a> (you will learn more about these in a later chapter)</li>\n</ul><hr/>",
        "Primitive Data Types": "<p>A primitive data type specifies the size and type of variable values, and it has no \nadditional methods.</p><p>There are eight primitive data types in Java:</p><div class=\"w3-responsive\">\n<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:20%\">Data Type</th>\n<th style=\"width:17%\">Size</th>\n<th style=\"width:63%\">Description</th>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">byte</code></td>\n<td>1 byte</td>\n<td>Stores whole numbers from -128 to 127</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">short</code></td>\n<td>2 bytes</td>\n<td>Stores whole numbers from -32,768 to 32,767</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">int</code></td>\n<td>4 bytes</td>\n<td>Stores whole numbers from -2,147,483,648 to 2,147,483,647</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">long</code></td>\n<td>8 bytes</td>\n<td>Stores whole numbers from -9,223,372,036,854,775,808 to \n9,223,372,036,854,775,807</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">float</code></td>\n<td>4 bytes</td>\n<td>Stores fractional numbers. Sufficient for \nstoring 6 to 7 decimal digits</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">double</code></td>\n<td>8 bytes</td>\n<td>Stores fractional numbers. Sufficient for \nstoring 15 decimal digits</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">boolean</code></td>\n<td>1 bit</td>\n<td>Stores true or false values</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">char</code></td>\n<td>2 bytes</td>\n<td>Stores a single character/letter or ASCII values</td>\n</tr>\n</tbody>\n</table>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_data_types1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Add the correct data type for the following variables:</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"3\" name=\"ex1\" style=\"width: 34px;\"/> myNum = 9;\n<input maxlength=\"5\" name=\"ex2\" style=\"width: 54px;\"/> myFloatNum = 8.99f;\n<input maxlength=\"4\" name=\"ex3\" style=\"width: 44px;\"/> myLetter = 'A';\n<input maxlength=\"7\" name=\"ex4\" style=\"width: 74px;\"/> myBool = false;\n<input maxlength=\"6\" name=\"ex5\" style=\"width: 64px;\"/> myText = \"Hello World\";\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_data_types1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_variables_identifiers.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_data_types_numbers.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Add the correct data type for the following variables:</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"3\" name=\"ex1\" style=\"width: 34px;\"/> myNum = 9;\n<input maxlength=\"5\" name=\"ex2\" style=\"width: 54px;\"/> myFloatNum = 8.99f;\n<input maxlength=\"4\" name=\"ex3\" style=\"width: 44px;\"/> myLetter = 'A';\n<input maxlength=\"7\" name=\"ex4\" style=\"width: 74px;\"/> myBool = false;\n<input maxlength=\"6\" name=\"ex5\" style=\"width: 64px;\"/> myText = \"Hello World\";\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_data_types1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Add the correct data type for the following variables:</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"3\" name=\"ex1\" style=\"width: 34px;\"/> myNum = 9;\n<input maxlength=\"5\" name=\"ex2\" style=\"width: 54px;\"/> myFloatNum = 8.99f;\n<input maxlength=\"4\" name=\"ex3\" style=\"width: 44px;\"/> myLetter = 'A';\n<input maxlength=\"7\" name=\"ex4\" style=\"width: 74px;\"/> myBool = false;\n<input maxlength=\"6\" name=\"ex5\" style=\"width: 64px;\"/> myText = \"Hello World\";\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_data_types1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_data_types.asp"
    },
    {
      "Java Type Casting": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 int myInt = 9;\n\u00a0\u00a0\u00a0 double myDouble = myInt; // Automatic casting: int to double\n\n\u00a0\u00a0\u00a0 System.out.println(myInt);\u00a0\u00a0\u00a0\u00a0\u00a0 // Outputs 9\n\u00a0\u00a0\u00a0 System.out.println(myDouble);\u00a0\u00a0 // Outputs 9.0\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_casting_wide\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 double myDouble = 9.78d;\n\u00a0\u00a0\u00a0 int myInt = (int) myDouble; // Manual casting: double to int\n\n\u00a0\u00a0\u00a0 System.out.println(myDouble);\u00a0\u00a0 // Outputs 9.78\n\u00a0\u00a0\u00a0 System.out.println(myInt);\u00a0\u00a0\u00a0\u00a0\u00a0 // Outputs 9\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_casting_narrow\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Type Casting": "<p>In programming, there are times you have to convert one data type to another. This is known as \"type casting\".</p><p>Type casting is when you assign a value of one primitive data type to another type.</p><p>In Java, there are two types of casting:</p><ul>\n<li><strong>Widening Casting</strong> (automatically) - converting a smaller type \nto a larger type size<br/>\n<code class=\"w3-codespan\">byte</code> -&gt; <code class=\"w3-codespan\">short</code> -&gt; <code class=\"w3-codespan\">char</code> -&gt; <code class=\"w3-codespan\">int</code> -&gt; <code class=\"w3-codespan\">long</code> -&gt; <code class=\"w3-codespan\">float</code> -&gt; <code class=\"w3-codespan\">double</code><br/><br/>\n<li><strong>Narrowing Casting</strong> (manually) - converting a larger type \nto a smaller size type<br/>\n<code class=\"w3-codespan\">double</code> -&gt; <code class=\"w3-codespan\">float</code> -&gt; <code class=\"w3-codespan\">long</code> -&gt; <code class=\"w3-codespan\">int</code> -&gt; <code class=\"w3-codespan\">char</code> -&gt; <code class=\"w3-codespan\">short</code> -&gt; <code class=\"w3-codespan\">byte</code>\n</li></li></ul><hr/>",
        "Widening Casting": "<p>Widening casting is done automatically when passing a smaller size type to a \nlarger size type:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 int myInt = 9;\n\u00a0\u00a0\u00a0 double myDouble = myInt; // Automatic casting: int to double\n\n\u00a0\u00a0\u00a0 System.out.println(myInt);\u00a0\u00a0\u00a0\u00a0\u00a0 // Outputs 9\n\u00a0\u00a0\u00a0 System.out.println(myDouble);\u00a0\u00a0 // Outputs 9.0\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_casting_wide\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Narrowing Casting": "<p>Narrowing casting must be done manually by placing the type in parentheses \nin front of the value:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 double myDouble = 9.78d;\n\u00a0\u00a0\u00a0 int myInt = (int) myDouble; // Manual casting: double to int\n\n\u00a0\u00a0\u00a0 System.out.println(myDouble);\u00a0\u00a0 // Outputs 9.78\n\u00a0\u00a0\u00a0 System.out.println(myInt);\u00a0\u00a0\u00a0\u00a0\u00a0 // Outputs 9\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_casting_narrow\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_data_types_non-prim.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_operators.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_type_casting.asp"
    },
    {
      "Java Operators": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 100 + 50;\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_oper\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int sum1 = 100 + 50;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // 150 (100 + 50)\nint sum2 = sum1 + 250;\u00a0\u00a0\u00a0\u00a0\u00a0 // 400 (150 + 250)\nint sum3 = sum2 + sum2;\u00a0\u00a0\u00a0\u00a0 // 800 (400 + 400)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_oper2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 10;\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_oper_assignment1\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 10;\nx += 5;\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_oper_assignment2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 5;\nint y = 3;\nSystem.out.println(x &gt; y); // returns true, because 5 is higher than 3\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_oper_comparison\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Operators": "<p>Operators are used to perform operations on variables and values.</p><p>In the example below, we use the\n<code class=\"w3-codespan\">+</code> <strong>operator</strong> to add together two values:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 100 + 50;\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_oper\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>Although the <code class=\"w3-codespan\">+</code> operator is often used to add together two values, like in the example above, it can also be used to add together a variable and a value, or a variable and another variable:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int sum1 = 100 + 50;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // 150 (100 + 50)\nint sum2 = sum1 + 250;\u00a0\u00a0\u00a0\u00a0\u00a0 // 400 (150 + 250)\nint sum3 = sum2 + sum2;\u00a0\u00a0\u00a0\u00a0 // 800 (400 + 400)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_oper2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>Java divides the operators into the following groups:</p><ul>\n<li>Arithmetic operators</li>\n<li>Assignment operators</li>\n<li>Comparison operators</li>\n<li>Logical operators</li>\n<li>Bitwise operators</li>\n</ul><hr/>",
        "Arithmetic Operators": "<p>Arithmetic operators are used to perform common mathematical operations.</p><div class=\"w3-responsive\">\n<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:15%\">Operator</th>\n<th style=\"width:18%\">Name</th>\n<th style=\"width:40%\">Description</th>\n<th style=\"width:17%;\">Example</th>\n<th style=\"width:10%\">Try it</th>\n</tr>\n<tr>\n<td>+</td>\n<td>Addition</td>\n<td>Adds together two values</td>\n<td>x + y</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_add\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>-</td>\n<td>Subtraction</td>\n<td>Subtracts one value from another</td>\n<td>x - y</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_sub\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>*</td>\n<td>Multiplication</td>\n<td>Multiplies two values</td>\n<td>x * y</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_mult\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>/</td>\n<td>Division</td>\n<td>Divides one value by another</td>\n<td>x / y</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_div\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>%</td>\n<td>Modulus</td>\n<td>Returns the division remainder</td>\n<td>x % y</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_mod\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>++</td>\n<td>Increment</td>\n<td>Increases the value of a variable by 1</td>\n<td>++x</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_inc\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>--</td>\n<td>Decrement</td>\n<td>Decreases the value of a variable by 1</td>\n<td>--x</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_dec\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</tbody>\n</table>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"div-gpt-ad-1493883843099-0\" style=\"display: inline-block\">\n<script>\n    uic_r_g();\n    </script>\n</div>\n</div><hr/>",
        "Java Assignment Operators": "<p>Assignment operators are used to assign values to variables.</p><p>In the example below, we use the <strong>assignment</strong> operator (<code class=\"w3-codespan\">=</code>) \nto assign the value <strong>10</strong> to a variable called <strong>x</strong>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 10;\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_oper_assignment1\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>The <strong>addition assignment</strong> operator (<code class=\"w3-codespan\">+=</code>) adds a value to a variable:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 10;\nx += 5;\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_oper_assignment2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>A list of all assignment operators:</p><table class=\"ws-table-all notranslate\">\n<tr>\n<th style=\"width:30%\">Operator</th>\n<th style=\"width:30%\">Example</th>\n<th style=\"width:30%\">Same As</th>\n<th style=\"width:10%;\">Try it</th>\n</tr>\n<tr>\n<td>=</td>\n<td>x = 5</td>\n<td>x = 5</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_ass1\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>+=</td>\n<td>x += 3</td>\n<td>x = x + 3</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_ass2\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>-=</td>\n<td>x -= 3</td>\n<td>x = x - 3</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_ass3\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>*=</td>\n<td>x *= 3</td>\n<td>x = x * 3</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_ass4\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>/=</td>\n<td>x /= 3</td>\n<td>x = x / 3</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_ass5\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>%=</td>\n<td>x %= 3</td>\n<td>x = x % 3</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_ass6\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>&amp;=</td>\n<td>x &amp;= 3</td>\n<td>x = x &amp; 3</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_ass7\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>|=</td>\n<td>x |= 3</td>\n<td>x = x | 3</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_ass8\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>^=</td>\n<td>x ^= 3</td>\n<td>x = x ^ 3</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_ass9\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>&gt;&gt;=</td>\n<td>x &gt;&gt;= 3</td>\n<td>x = x &gt;&gt; 3</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_ass10\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>&lt;&lt;=</td>\n<td>x &lt;&lt;= 3</td>\n<td>x = x &lt;&lt; 3</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_ass11\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</table><hr/>",
        "Java Comparison Operators": "<p>Comparison operators are used to compare two values (or variables). This is important in programming, because it helps us to find answers and make decisions.</p><p>The return value of a comparison is either <code class=\"w3-codespan\">true</code> or <code class=\"w3-codespan\">false</code>. These values are known as \n<em>Boolean values</em>, and you will learn more about them in the <a href=\"java_booleans.asp\">Booleans</a> and <a href=\"java_conditions.asp\">If..Else</a> chapter.</p><p>In the following example, we use the <strong>greater than</strong> operator (<code class=\"w3-codespan\">&gt;</code>) to find out if 5 is greater than 3:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 5;\nint y = 3;\nSystem.out.println(x &gt; y); // returns true, because 5 is higher than 3\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_oper_comparison\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><table class=\"ws-table-all notranslate\">\n<tr>\n<th style=\"width:25%\">Operator</th>\n<th style=\"width:35%\">Name</th>\n<th style=\"width:30%\">Example</th>\n<th style=\"width:10%\">Try it</th>\n</tr>\n<tr>\n<td>==</td>\n<td>Equal to</td>\n<td>x == y</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_compare1\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>!=</td>\n<td>Not equal</td>\n<td>x != y</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_compare2\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>Greater than</td>\n<td>x &gt; y</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_compare3\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>Less than</td>\n<td>x &lt; y</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_compare4\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>&gt;=</td>\n<td>Greater than or equal to</td>\n<td>x &gt;= y</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_compare5\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>&lt;=</td>\n<td>Less than or equal to</td>\n<td>x &lt;= y</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_compare6\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</table><hr/>",
        "Java Logical Operators": "<p>You can also test for <code class=\"w3-codespan\">true</code> or <code class=\"w3-codespan\">false</code> \nvalues with logical operators.</p><p>Logical operators are used to determine the logic between variables or \nvalues:</p><div class=\"w3-responsive\" style=\"margin-top:-16px;margin-bottom:-16px\">\n<table class=\"ws-table-all notranslate\">\n<tr>\n<th style=\"width:15%\">Operator</th>\n<th style=\"width:20%\">Name</th>\n<th style=\"width:35%\">Description</th>\n<th style=\"width:20%\">Example</th>\n<th style=\"width:10%\">Try it</th>\n</tr>\n<tr>\n<td>&amp;&amp;\u00a0</td>\n<td>Logical and</td>\n<td>Returns true if both statements are true</td>\n<td>x &lt; 5 &amp;&amp;\u00a0 x &lt; 10</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_logical1\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>||\u00a0</td>\n<td>Logical or</td>\n<td>Returns true if one of the statements is true</td>\n<td>x &lt; 5 || x &lt; 4</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_logical2\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>!</td>\n<td>Logical not</td>\n<td>Reverse the result, returns false if the result is true</td>\n<td>!(x &lt; 5 &amp;&amp; x &lt; 10)</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_oper_logical3\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</table>\n</div><h2>Java Bitwise Operators</h2>\n<p>Bitwise operators are used to perform binary logic with the bits of an integer or long\ninteger.</p>\n<div class=\"w3-responsive\" style=\"margin-top:-16px;margin-bottom:-16px\">\n<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:12%\">Operator</th>\n<th style=\"width:40%\">Description</th>\n<th>Example</th>\n<th>Same as</th>\n<th>Result</th>\n<th>Decimal</th>\n</tr>\n<tr>\n<td>&amp;</td>\n<td>AND - Sets each bit to 1 if both bits are 1</td>\n<td>5 &amp; 1</td>\n<td>0101 &amp; 0001</td>\n<td>0001</td>\n<td>&nbsp;1</td>\n</tr>\n<tr>\n<td>|</td>\n<td>OR - Sets each bit to 1 if any of the two bits is 1</td>\n<td>5 | 1</td>\n<td>0101 | 0001</td>\n<td>0101</td>\n<td>&nbsp;5</td>\n</tr>\n<tr>\n<td>~</td>\n<td>NOT - Inverts all the bits</td>\n<td>~ 5</td>\n<td>&nbsp;~0101</td>\n<td>1010</td>\n<td>&nbsp;10</td>\n</tr>\n<tr>\n<td>^</td>\n<td>XOR - Sets each bit to 1 if only one of the two bits is 1</td>\n<td>5 ^ 1</td>\n<td>0101 ^ 0001</td>\n<td>0100</td>\n<td>&nbsp;4</td>\n</tr>\n<tr>\n<td>&lt;&lt;</td>\n<td>Zero-fill left shift - Shift left by pushing zeroes in from the right and letting the leftmost bits fall off</td>\n<td>9 &lt;&lt; 1</td>\n<td>1001 &lt;&lt; 1</td>\n<td>0010</td>\n<td>2</td>\n</tr>\n<tr>\n<td>&gt;&gt;</td>\n<td>Signed right shift - Shift right by pushing copies of the leftmost bit in from the left and letting the rightmost bits fall off</td>\n<td>9 &gt;&gt; 1</td>\n<td>1001 &gt;&gt; 1</td>\n<td>1100</td>\n<td>12</td>\n</tr>\n<tr>\n<td>&gt;&gt;&gt;</td>\n<td>Zero-fill right shift - Shift right by pushing zeroes in from the left and letting the rightmost bits fall off</td>\n<td>9 &gt;&gt;&gt; 1</td>\n<td>1001 &gt;&gt;&gt; 1</td>\n<td>0100</td>\n<td>4</td>\n</tr>\n</tbody></table>\n</div>\n\n<div class=\"w3-note w3-panel\">\n<p><strong>Note:</strong> The Bitwise examples above use 4-bit unsigned examples, but Java uses 32-bit signed integers\nand 64-bit signed long integers.\nBecause of this, in Java, ~5 will not return 10. It will return -6.\n~00000000000000000000000000000101 will return 11111111111111111111111111111010</p>\n\n<p>In Java, 9 &gt;&gt; 1 will not return 12. It will return 4.\n00000000000000000000000000001001 &gt;&gt; 1 will return\n00000000000000000000000000000100</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_operators1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Multiply <code class=\"w3-codespan\">10</code> with <code class=\"w3-codespan\">5</code>, and print the result.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nSystem.out.println(10 <input maxlength=\"1\" name=\"ex1\" style=\"width: 15px;\"/> 5);\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_operators1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_type_casting.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_strings.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Multiply <code class=\"w3-codespan\">10</code> with <code class=\"w3-codespan\">5</code>, and print the result.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nSystem.out.println(10 <input maxlength=\"1\" name=\"ex1\" style=\"width: 15px;\"/> 5);\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_operators1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Multiply <code class=\"w3-codespan\">10</code> with <code class=\"w3-codespan\">5</code>, and print the result.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nSystem.out.println(10 <input maxlength=\"1\" name=\"ex1\" style=\"width: 15px;\"/> 5);\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_operators1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_operators.asp"
    },
    {
      "Java Strings": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a variable of type <code class=\"w3-codespan\">String</code> and assign it a value:</p>\n<pre class=\"language-java w3-white\"><code>String greeting = \"Hello\";\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_strings\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String txt = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nSystem.out.println(\"The length of the txt string is: \" + txt.length());\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_strings_length\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String txt = \"Hello World\";\nSystem.out.println(txt.toUpperCase());\u00a0\u00a0 // Outputs \"HELLO WORLD\"\nSystem.out.println(txt.toLowerCase());\u00a0\u00a0 // Outputs \"hello world\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_strings_touppercase\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String txt = \"Please locate where 'locate' occurs!\";\nSystem.out.println(txt.indexOf(\"locate\")); // Outputs 7\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_strings_indexof\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Strings": "<p>Strings are used for storing text.</p><p>A <code class=\"w3-codespan\">String</code> variable contains a collection of characters surrounded by double quotes:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a variable of type <code class=\"w3-codespan\">String</code> and assign it a value:</p>\n<pre class=\"language-java w3-white\"><code>String greeting = \"Hello\";\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_strings\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "String Length": "<p>A String in Java is actually an object, which contain methods that can perform certain operations on strings. For example, the length of a string can be found with the <code class=\"w3-codespan\">length()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String txt = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\nSystem.out.println(\"The length of the txt string is: \" + txt.length());\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_strings_length\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "More String Methods": "<p>There are many string methods available, for example <code class=\"w3-codespan\">toUpperCase()</code> and <code class=\"w3-codespan\">toLowerCase()</code>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String txt = \"Hello World\";\nSystem.out.println(txt.toUpperCase());\u00a0\u00a0 // Outputs \"HELLO WORLD\"\nSystem.out.println(txt.toLowerCase());\u00a0\u00a0 // Outputs \"hello world\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_strings_touppercase\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Finding a Character in a String": "<p>The <code class=\"w3-codespan\">indexOf()</code> method returns the <strong>index</strong> (the position) \nof the first occurrence of a specified text in a string \n(including whitespace):</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String txt = \"Please locate where 'locate' occurs!\";\nSystem.out.println(txt.indexOf(\"locate\")); // Outputs 7\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_strings_indexof\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-panel w3-note\">\n<p>Java counts positions from zero.<br/>0 is the first position in a \nstring, 1 is the second, 2 is the third ...</p>\n</div><hr/><div>\n<h2>Complete String Reference</h2>\n<p>For a complete reference of String methods, go to our <a href=\"java_ref_string.asp\">Java String Methods Reference</a>.</p>\n<p>The reference contains descriptions and examples of all string methods.</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_strings1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Fill in the missing part to create a <code class=\"w3-codespan\">greeting</code> variable of type <code class=\"w3-codespan\">String</code> and assign it the value <code class=\"w3-codespan\">Hello</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/> greeting = <input maxlength=\"7\" name=\"ex2\" style=\"width: 74px;\"/>;\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_strings1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><hr>\n<h2>Using the Java Keyword new</h2>\n<p>You can also create a String and assign values to it with the <code class=\"w3-codespan\">new</code> keyword:</p>\n<div class=\"w3-example\">\n<div class=\"w3-code notranslate javaHigh\">\n  // The following example (a \"string literal\"):<br>String greeting = \"Hello\";<br>\n  <br>// Can also be created with the <strong>new </strong>keyword:<br>String greeting \n  = new String(\"Hello\");<br>\n </div>\n<a target=\"_blank\" class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_strings_new\">Try it Yourself &raquo;</a>\n</div>\n\n<p>Strings in Java are objects, and an object in Java is declared with the <code class=\"w3-codespan\">new</code> keyword. However, instead of using the <code class=\"w3-codespan\">new</code> keyword, you can easily just write the string text inside double quotes. This is called a \"String literal\". It is up to you which method you would like to use.\nYou will learn more about objects in a later chapter.</p><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_operators.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_strings_concat.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Complete String Reference": "<p>For a complete reference of String methods, go to our <a href=\"java_ref_string.asp\">Java String Methods Reference</a>.</p><p>The reference contains descriptions and examples of all string methods.</p>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Fill in the missing part to create a <code class=\"w3-codespan\">greeting</code> variable of type <code class=\"w3-codespan\">String</code> and assign it the value <code class=\"w3-codespan\">Hello</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/> greeting = <input maxlength=\"7\" name=\"ex2\" style=\"width: 74px;\"/>;\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_strings1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Fill in the missing part to create a <code class=\"w3-codespan\">greeting</code> variable of type <code class=\"w3-codespan\">String</code> and assign it the value <code class=\"w3-codespan\">Hello</code>.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/> greeting = <input maxlength=\"7\" name=\"ex2\" style=\"width: 74px;\"/>;\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_strings1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_strings.asp"
    },
    {
      "Java Math": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>Math.max(5, 10);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_max\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>Math.min(5, 10);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_min\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>Math.sqrt(64);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_sqrt\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>Math.abs(-4.7);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_abs\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>Math.random();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_random\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int randomNum = (int)(Math.random() * 101);  // 0 to 100</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_random2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Math.max(x,y)": "<p>The <code class=\"w3-codespan\">Math.max(<em>x</em>,<em>y</em>)</code> method can be used to find the highest value of <em>x</em> and\n<em>y</em>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>Math.max(5, 10);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_max\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Math.min(x,y)": "<p>The <code class=\"w3-codespan\">Math.min(<em>x</em>,<em>y</em>)</code> method can be used to find the lowest value of <em>x</em> \nand <em>y</em>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>Math.min(5, 10);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_min\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Math.sqrt(x)": "<p>The <code class=\"w3-codespan\">Math.sqrt(<em>x</em>)</code> method returns the square root of <em>x</em>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>Math.sqrt(64);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_sqrt\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Math.abs(x)": "<p>The <code class=\"w3-codespan\">Math.abs(<em>x</em>)</code> method returns the absolute (positive) value of <em>x</em>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>Math.abs(-4.7);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_abs\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Random Numbers": "<p><code class=\"w3-codespan\">Math.random()</code> returns a random number between 0.0 (inclusive), and 1.0 (exclusive):</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>Math.random();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_random\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>To get more control over the random number, for example, if you only want a random \nnumber between 0 and 100, you can use the following formula:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int randomNum = (int)(Math.random() * 101);  // 0 to 100</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_math_random2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div>\n<h2>Complete Math Reference</h2>\n<p>For a complete reference of Math methods, go to our <a href=\"java_ref_math.asp\">Java Math Methods Reference</a>.</p>\n<!--<p>The reference contains descriptions and examples of all math methods.</p>-->\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_math1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Use the correct method to find the <strong>highest value</strong> of <code class=\"w3-codespan\">x</code> and <code class=\"w3-codespan\">y</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint x = 5;\nint y = 10;\nMath.<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/>(x, y);\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_math1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_strings_specchars.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_booleans.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Complete Math Reference": "<p>For a complete reference of Math methods, go to our <a href=\"java_ref_math.asp\">Java Math Methods Reference</a>.</p><p>The reference contains descriptions and examples of all math methods.</p>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Use the correct method to find the <strong>highest value</strong> of <code class=\"w3-codespan\">x</code> and <code class=\"w3-codespan\">y</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint x = 5;\nint y = 10;\nMath.<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/>(x, y);\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_math1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Use the correct method to find the <strong>highest value</strong> of <code class=\"w3-codespan\">x</code> and <code class=\"w3-codespan\">y</code>.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint x = 5;\nint y = 10;\nMath.<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/>(x, y);\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_math1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_math.asp"
    },
    {
      "Java Booleans": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>boolean isJavaFun = true;\nboolean isFishTasty = false;\nSystem.out.println(isJavaFun);\u00a0\u00a0\u00a0\u00a0 // Outputs true\nSystem.out.println(isFishTasty);\u00a0\u00a0 // Outputs false\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 10;\nint y = 9;\nSystem.out.println(x &gt; y); // returns true, because 10 is higher than 9\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans1\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(10 &gt; 9); // returns true, because 10 is higher than 9\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 10;\nSystem.out.println(x == 10); // returns true, because the value of x is equal to 10\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans3\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(10 == 15); // returns false, because 10 is not equal to 15\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans4\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int myAge = 25;\nint votingAge = 18;\nSystem.out.println(myAge &gt;= votingAge);</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans_age\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Output \"Old enough to vote!\" if <code class=\"w3-codespan\">myAge</code> is <strong>greater than or equal to</strong> <code class=\"w3-codespan\">18</code>. Otherwise output \"Not old enough to vote.\":</p>\n<pre class=\"language-java w3-white\"><code>int myAge = 25;\nint votingAge = 18;\n\nif (myAge &gt;= votingAge) {\n  System.out.println(\"Old enough to vote!\");\n} else {\n  System.out.println(\"Not old enough to vote.\");\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans_age2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Booleans": "<p>Very often, in programming, you will need a data type that can only have one of two values, like:</p><ul>\n<li>YES / NO</li>\n<li>ON / OFF</li>\n<li>TRUE / FALSE</li>\n</ul><p>For this, Java has a <code class=\"w3-codespan\">boolean</code> data type, which can store <code class=\"w3-codespan\">true</code> or <code class=\"w3-codespan\">false</code> values.</p><hr/>",
        "Boolean Values": "<p>A boolean type is declared with the <code class=\"w3-codespan\">boolean</code> keyword and can only take the values <code class=\"w3-codespan\">true</code> or <code class=\"w3-codespan\">false</code>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>boolean isJavaFun = true;\nboolean isFishTasty = false;\nSystem.out.println(isJavaFun);\u00a0\u00a0\u00a0\u00a0 // Outputs true\nSystem.out.println(isFishTasty);\u00a0\u00a0 // Outputs false\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>However, it is more common to return boolean values from boolean expressions, for conditional testing\n(see below).</p><hr/>",
        "Boolean Expression": "<p>A Boolean expression returns a boolean value: <code class=\"w3-codespan\">true</code> or <code class=\"w3-codespan\">false</code>.</p><p>This is useful to build logic, and find answers.</p><p>For example, you can use a <a href=\"java_operators.asp\">comparison operator</a>, such as the <strong>greater than</strong> (<code class=\"w3-codespan\">&gt;</code>) operator, to find out if an expression (or a variable) is true or false:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 10;\nint y = 9;\nSystem.out.println(x &gt; y); // returns true, because 10 is higher than 9\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans1\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>Or even easier:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(10 &gt; 9); // returns true, because 10 is higher than 9\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>In the examples below, we use the <strong>equal to</strong> (<code class=\"w3-codespan\">==</code>) operator to evaluate an expression:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 10;\nSystem.out.println(x == 10); // returns true, because the value of x is equal to 10\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans3\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>System.out.println(10 == 15); // returns false, because 10 is not equal to 15\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans4\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Real Life Example": "<p>Let's think of a \"real \nlife example\" where we need to find out if a person is old enough to vote.</p><p>In the example below, we use the <code class=\"w3-codespan\">&gt;=</code> comparison operator to find out if the age (<code class=\"w3-codespan\">25</code>) is <strong>greater than</strong> OR \n<strong>equal to</strong> the voting age limit, which is set \nto <code class=\"w3-codespan\">18</code>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int myAge = 25;\nint votingAge = 18;\nSystem.out.println(myAge &gt;= votingAge);</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans_age\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>Cool, right? An even better approach (since we are on a roll now), would be to wrap the code above in an \n<code class=\"w3-codespan\">if...else</code> statement, so we can perform \ndifferent actions depending on the result:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Output \"Old enough to vote!\" if <code class=\"w3-codespan\">myAge</code> is <strong>greater than or equal to</strong> <code class=\"w3-codespan\">18</code>. Otherwise output \"Not old enough to vote.\":</p>\n<pre class=\"language-java w3-white\"><code>int myAge = 25;\nint votingAge = 18;\n\nif (myAge &gt;= votingAge) {\n  System.out.println(\"Old enough to vote!\");\n} else {\n  System.out.println(\"Not old enough to vote.\");\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_booleans_age2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-panel w3-note\">\n<p>Booleans are the basis for all Java comparisons and conditions.</p>\n<p>You will learn more about <a href=\"java_conditions.asp\">conditions (<code class=\"w3-codespan\">if...else</code>)</a> in the next chapter.</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_booleans1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Fill in the missing parts to print the values <code class=\"w3-codespan\">true</code> and <code class=\"w3-codespan\">false</code>:</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"7\" name=\"ex1\" style=\"width: 74px;\"/> isJavaFun = true;\n<input maxlength=\"7\" name=\"ex2\" style=\"width: 74px;\"/> isFishTasty = false;\nSystem.out.println(isJavaFun);\nSystem.out.println(isFishTasty);\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_booleans1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_math.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_conditions.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Fill in the missing parts to print the values <code class=\"w3-codespan\">true</code> and <code class=\"w3-codespan\">false</code>:</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"7\" name=\"ex1\" style=\"width: 74px;\"/> isJavaFun = true;\n<input maxlength=\"7\" name=\"ex2\" style=\"width: 74px;\"/> isFishTasty = false;\nSystem.out.println(isJavaFun);\nSystem.out.println(isFishTasty);\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_booleans1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Fill in the missing parts to print the values <code class=\"w3-codespan\">true</code> and <code class=\"w3-codespan\">false</code>:</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"7\" name=\"ex1\" style=\"width: 74px;\"/> isJavaFun = true;\n<input maxlength=\"7\" name=\"ex2\" style=\"width: 74px;\"/> isFishTasty = false;\nSystem.out.println(isJavaFun);\nSystem.out.println(isFishTasty);\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_booleans1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_booleans.asp"
    },
    {
      "Java If...Else": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>if (<em>condition</em>) {\n\u00a0 <em>// block of code to be executed if the condition is true</em>\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>if (20 &gt; 18) {\n\u00a0 System.out.println(\"20 is greater than 18\");\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_if\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 20;\nint y = 18;\nif (x &gt; y) {\n\u00a0 System.out.println(\"x is greater than y\");\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_if2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>if (<em>condition</em>) {\n\u00a0 <em>// block of code to be executed if the condition is true</em>\n} else {\n\u00a0 <em>// block of code to be executed if the condition is false</em>\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>int time = 20;\nif (time &lt; 18) {\n\u00a0 System.out.println(\"Good day.\");\n} else {\n\u00a0 System.out.println(\"Good evening.\");\n}\n// Outputs \"Good evening.\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_if_else\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\" data-keep-tags=\"em\"><code>if (<em>condition1</em>) {\n\u00a0 <em>// block of code to be executed if condition1 is true</em>\n} else if (<em>condition2</em>) {\n\u00a0 <em>// block of code to be executed if the condition1 is false and condition2 is true</em>\n} else {\n\u00a0 <em>// block of code to be executed if the condition1 is false and condition2 is false</em>\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>int time = 22;\nif (time &lt; 10) {\n\u00a0 System.out.println(\"Good morning.\");\n} else if (time &lt; 18) {\n\u00a0 System.out.println(\"Good day.\");\n} else {\n\u00a0 System.out.println(\"Good evening.\");\n}\n// Outputs \"Good evening.\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_if_else_if\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Conditions and If Statements": "<p>You already know that Java supports the usual logical conditions from mathematics:</p><ul>\n<li>Less than: <span class=\"w3-codespan\">a &lt; b</span></li>\n<li>Less than or equal to: <span class=\"w3-codespan\">a &lt;= b</span></li>\n<li>Greater than: <span class=\"w3-codespan\">a &gt; b</span></li>\n<li>Greater than or equal to: <span class=\"w3-codespan\">a &gt;= b</span></li>\n<li>Equal to <span class=\"w3-codespan\">a == b</span></li>\n<li>Not Equal to: <span class=\"w3-codespan\">a != b</span></li>\n</ul><p>You can use these conditions to perform different actions for different decisions.</p><p>Java has the following conditional statements:</p><ul>\n<li>Use <code class=\"w3-codespan\">if</code> to specify a block of code to be executed, if a specified condition is true</li>\n<li>Use <code class=\"w3-codespan\">else</code> to specify a block of code to be executed, if the same condition is false</li>\n<li>Use <code class=\"w3-codespan\">else if</code> to specify a new condition to test, if the first condition is false</li>\n<li>Use <code class=\"w3-codespan\">switch</code> to specify many alternative blocks of code to be executed</li>\n</ul><hr/>",
        "The if Statement": "<p>Use the <code class=\"w3-codespan\">if</code> statement to specify a block of Java code to be executed if a condition is <code class=\"w3-codespan\">true</code>.</p><div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>if (<em>condition</em>) {\n\u00a0 <em>// block of code to be executed if the condition is true</em>\n}\n</code></pre>\n</div><div class=\"w3-panel w3-note\">\n<p>Note that <code class=\"w3-codespan\">if</code> is in lowercase letters. Uppercase letters (If or IF) will generate an error.</p>\n</div><p>In the example below, we test two values to find out if 20 is greater than \n18. If the condition is <code class=\"w3-codespan\">true</code>, print some text:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>if (20 &gt; 18) {\n\u00a0 System.out.println(\"20 is greater than 18\");\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_if\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>We can also test variables:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int x = 20;\nint y = 18;\nif (x &gt; y) {\n\u00a0 System.out.println(\"x is greater than y\");\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_if2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><h4>Example explained</h4><p>In the example above we use two variables, <strong>x</strong> and <strong>y</strong>, \nto test whether x is greater than y \n(using the <code class=\"w3-codespan\">&gt;</code> operator). As x is 20, and y is 18, and we know that 20 is greater than 18, we print to the screen that \"x is greater than y\".</p><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "The else Statement": "<p>Use the <code class=\"w3-codespan\">else</code> statement to specify a block of code to be executed if the condition is <code class=\"w3-codespan\">false</code>.</p><div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>if (<em>condition</em>) {\n\u00a0 <em>// block of code to be executed if the condition is true</em>\n} else {\n\u00a0 <em>// block of code to be executed if the condition is false</em>\n}\n</code></pre>\n</div><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>int time = 20;\nif (time &lt; 18) {\n\u00a0 System.out.println(\"Good day.\");\n} else {\n\u00a0 System.out.println(\"Good evening.\");\n}\n// Outputs \"Good evening.\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_if_else\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><h4>Example explained</h4><p>In the example above, time (20) is greater than 18, so the condition is <code class=\"w3-codespan\">false</code>. \nBecause of this, we move on to the <code class=\"w3-codespan\">else</code> condition and print to the screen \"Good \nevening\". If the time was less than 18, the program would print \"Good day\".</p><hr/>",
        "The else if Statement": "<p>Use the <code class=\"w3-codespan\">else if</code> statement to specify a new condition if the first condition is <code class=\"w3-codespan\">false</code>.</p><div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\" data-keep-tags=\"em\"><code>if (<em>condition1</em>) {\n\u00a0 <em>// block of code to be executed if condition1 is true</em>\n} else if (<em>condition2</em>) {\n\u00a0 <em>// block of code to be executed if the condition1 is false and condition2 is true</em>\n} else {\n\u00a0 <em>// block of code to be executed if the condition1 is false and condition2 is false</em>\n}\n</code></pre>\n</div><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>int time = 22;\nif (time &lt; 10) {\n\u00a0 System.out.println(\"Good morning.\");\n} else if (time &lt; 18) {\n\u00a0 System.out.println(\"Good day.\");\n} else {\n\u00a0 System.out.println(\"Good evening.\");\n}\n// Outputs \"Good evening.\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_if_else_if\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><h4>Example explained</h4><p>In the example above, time (22) is greater than 10, so the <strong>first condition</strong> is <code class=\"w3-codespan\">false</code>. The next condition, in the  \n<code class=\"w3-codespan\">else if</code> statement, is also <code class=\"w3-codespan\">false</code>, so we move on to the <code class=\"w3-codespan\">else</code>\ncondition since <strong>condition1</strong> and <strong>condition2</strong> is both <code class=\"w3-codespan\">false</code> - and print to the screen \"Good \nevening\".</p><p>However, if the time was 14, our program would print \"Good day.\"</p><hr/><div>\n<form action=\"exercise.asp?filename=exercise_conditions1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Print \"Hello World\" if <code class=\"w3-codespan\">x</code> is greater than <code class=\"w3-codespan\">y</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint x = 50;\nint y = 10;\n<input maxlength=\"2\" name=\"ex1\" style=\"width: 25px;\"/> (x <input maxlength=\"1\" name=\"ex2\" style=\"width: 15px;\"/> y) {\n  System.out.println(\"Hello World\");\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_conditions1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_booleans.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_conditions_shorthand.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Print \"Hello World\" if <code class=\"w3-codespan\">x</code> is greater than <code class=\"w3-codespan\">y</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint x = 50;\nint y = 10;\n<input maxlength=\"2\" name=\"ex1\" style=\"width: 25px;\"/> (x <input maxlength=\"1\" name=\"ex2\" style=\"width: 15px;\"/> y) {\n  System.out.println(\"Hello World\");\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_conditions1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Print \"Hello World\" if <code class=\"w3-codespan\">x</code> is greater than <code class=\"w3-codespan\">y</code>.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint x = 50;\nint y = 10;\n<input maxlength=\"2\" name=\"ex1\" style=\"width: 25px;\"/> (x <input maxlength=\"1\" name=\"ex2\" style=\"width: 15px;\"/> y) {\n  System.out.println(\"Hello World\");\n}\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_conditions1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_conditions.asp"
    },
    {
      "Java Switch": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>switch(<em>expression</em>) {\n\u00a0 case x:\n\u00a0\u00a0\u00a0 <em>// code block</em>\n\u00a0\u00a0\u00a0 break;\n\u00a0 case y:\n\u00a0\u00a0\u00a0 <em>// code block</em>\n\u00a0\u00a0\u00a0 break;\n\u00a0 default:\n\u00a0\u00a0\u00a0 <em>// code block</em>\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int day = 4;\nswitch (day) {\n\u00a0 case 1:\n\u00a0\u00a0\u00a0 System.out.println(\"Monday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 2:\n\u00a0\u00a0\u00a0 System.out.println(\"Tuesday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 3:\n\u00a0\u00a0\u00a0 System.out.println(\"Wednesday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 4:\n\u00a0\u00a0\u00a0 System.out.println(\"Thursday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 5:\n\u00a0\u00a0\u00a0 System.out.println(\"Friday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 6:\n\u00a0\u00a0\u00a0 System.out.println(\"Saturday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 7:\n\u00a0\u00a0\u00a0 System.out.println(\"Sunday\");\n\u00a0\u00a0\u00a0 break;\n}\n// Outputs \"Thursday\" (day 4)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_switch\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"9\"><code>int day = 4;\nswitch (day) {\n\u00a0 case 6:\n\u00a0\u00a0\u00a0 System.out.println(\"Today is Saturday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 7:\n\u00a0\u00a0\u00a0 System.out.println(\"Today is Sunday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 default:\n\u00a0\u00a0\u00a0 System.out.println(\"Looking forward to the Weekend\");\n}\n// Outputs \"Looking forward to the Weekend\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_switch_default\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Switch Statements": "<p>Instead of writing <strong>many</strong> <code class=\"w3-codespan\">if..else</code> statements, you can use the <code class=\"w3-codespan\">switch</code> statement.</p><p>The <code class=\"w3-codespan\">switch</code> statement selects one of many code blocks to be executed:</p><div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>switch(<em>expression</em>) {\n\u00a0 case x:\n\u00a0\u00a0\u00a0 <em>// code block</em>\n\u00a0\u00a0\u00a0 break;\n\u00a0 case y:\n\u00a0\u00a0\u00a0 <em>// code block</em>\n\u00a0\u00a0\u00a0 break;\n\u00a0 default:\n\u00a0\u00a0\u00a0 <em>// code block</em>\n}\n</code></pre>\n</div><p>This is how it works:</p><ul>\n<li>The <code class=\"w3-codespan\">switch</code> expression is evaluated once.</li>\n<li>The value of the expression is compared with the values of each <code class=\"w3-codespan\">case</code>.</li>\n<li>If there is a match, the associated block of code is executed.</li>\n<li>The <code class=\"w3-codespan\">break</code> and <code class=\"w3-codespan\">default</code> keywords are optional, and will be described later in this chapter</li>\n</ul><p>The example below uses the weekday number to calculate the weekday name:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int day = 4;\nswitch (day) {\n\u00a0 case 1:\n\u00a0\u00a0\u00a0 System.out.println(\"Monday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 2:\n\u00a0\u00a0\u00a0 System.out.println(\"Tuesday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 3:\n\u00a0\u00a0\u00a0 System.out.println(\"Wednesday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 4:\n\u00a0\u00a0\u00a0 System.out.println(\"Thursday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 5:\n\u00a0\u00a0\u00a0 System.out.println(\"Friday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 6:\n\u00a0\u00a0\u00a0 System.out.println(\"Saturday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 7:\n\u00a0\u00a0\u00a0 System.out.println(\"Sunday\");\n\u00a0\u00a0\u00a0 break;\n}\n// Outputs \"Thursday\" (day 4)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_switch\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "The break Keyword": "<p>When Java reaches a <code class=\"w3-codespan\">break</code> \nkeyword, it breaks out of the switch block.</p><p>This will stop the execution of more code and case testing inside \nthe block.</p><p>When a match is found, and the job is done, it's time for a break. There is no need for more testing.</p><div class=\"w3-panel w3-note\">\n<p>A break can save a lot of execution time because it \"ignores\" the execution \nof all the rest of the code in the switch block.</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "The default Keyword": "<p>The <code class=\"w3-codespan\">default</code> keyword specifies some code to run if there is no \ncase match:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"9\"><code>int day = 4;\nswitch (day) {\n\u00a0 case 6:\n\u00a0\u00a0\u00a0 System.out.println(\"Today is Saturday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 case 7:\n\u00a0\u00a0\u00a0 System.out.println(\"Today is Sunday\");\n\u00a0\u00a0\u00a0 break;\n\u00a0 default:\n\u00a0\u00a0\u00a0 System.out.println(\"Looking forward to the Weekend\");\n}\n// Outputs \"Looking forward to the Weekend\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_switch_default\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-panel w3-note\">\n<p>Note that if the <code class=\"w3-codespan\">default</code> statement is used \nas the last statement in a switch block, it does not need a break.</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_switch1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing parts to complete the following <code class=\"w3-codespan\">switch</code> statement.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint day = 2;\nswitch (<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/>) {\n  <input maxlength=\"4\" name=\"ex2\" style=\"width: 45px;\"/> 1:\n    System.out.println(\"Saturday\");\n    break;\n  <input maxlength=\"4\" name=\"ex3\" style=\"width: 45px;\"/> 2:\n    System.out.println(\"Sunday\");\n    <input maxlength=\"5\" name=\"ex4\" style=\"width: 55px;\"/>;\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_switch1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_conditions_shorthand.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_while_loop.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing parts to complete the following <code class=\"w3-codespan\">switch</code> statement.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint day = 2;\nswitch (<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/>) {\n  <input maxlength=\"4\" name=\"ex2\" style=\"width: 45px;\"/> 1:\n    System.out.println(\"Saturday\");\n    break;\n  <input maxlength=\"4\" name=\"ex3\" style=\"width: 45px;\"/> 2:\n    System.out.println(\"Sunday\");\n    <input maxlength=\"5\" name=\"ex4\" style=\"width: 55px;\"/>;\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_switch1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Insert the missing parts to complete the following <code class=\"w3-codespan\">switch</code> statement.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint day = 2;\nswitch (<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/>) {\n  <input maxlength=\"4\" name=\"ex2\" style=\"width: 45px;\"/> 1:\n    System.out.println(\"Saturday\");\n    break;\n  <input maxlength=\"4\" name=\"ex3\" style=\"width: 45px;\"/> 2:\n    System.out.println(\"Sunday\");\n    <input maxlength=\"5\" name=\"ex4\" style=\"width: 55px;\"/>;\n}\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_switch1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_switch.asp"
    },
    {
      "Java While Loop": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>while (<em>condition</em>) {\n<i>\u00a0 // code block to be executed</i>\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int i = 0;\nwhile (i &lt; 5) {\n  System.out.println(i);\n  i++;\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_while_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>do {\n<i>\u00a0 // code block to be executed\n</i>}\nwhile (<em>condition</em>);\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int i = 0;<br/>do {\n\u00a0\u00a0System.out.println(i);\n\u00a0\u00a0i++;\n}\nwhile (i &lt; 5);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_do_while_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Loops": "<p>Loops can execute a block of code as long as a specified condition is reached.</p><p>Loops are handy because they save time, reduce errors, and they make code \nmore readable.</p><hr/>",
        "Java While Loop": "<p>The <code class=\"w3-codespan\">while</code> loop loops through a block of code as long as a specified condition is <code class=\"w3-codespan\">true</code>:</p><div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>while (<em>condition</em>) {\n<i>\u00a0 // code block to be executed</i>\n}\n</code></pre>\n</div><p>In the example below, the code in the loop will run, over and over again, as long as \na variable (i) is less than 5:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int i = 0;\nwhile (i &lt; 5) {\n  System.out.println(i);\n  i++;\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_while_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-panel w3-note\">\n<p><strong>Note:</strong> Do not forget to increase the variable used in the condition, otherwise \nthe loop will never end!</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "The Do/While Loop": "<p>The <code class=\"w3-codespan\">do/while</code> loop is a variant of the <code class=\"w3-codespan\">while</code> loop. This loop will \nexecute the code block once, before checking if the condition is true, then it will\nrepeat the loop as long as the condition is true.</p><div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>do {\n<i>\u00a0 // code block to be executed\n</i>}\nwhile (<em>condition</em>);\n</code></pre>\n</div><p>The example below uses a <code class=\"w3-codespan\">do/while</code> loop. The loop will always be \nexecuted at least once, even if the condition is false, because the code block \nis executed before the condition is tested:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>int i = 0;<br/>do {\n\u00a0\u00a0System.out.println(i);\n\u00a0\u00a0i++;\n}\nwhile (i &lt; 5);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_do_while_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-panel w3-note\">\n<p>Do not forget to increase the variable used in the condition, otherwise \nthe loop will never end!</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_while_loop1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Print <code class=\"w3-codespan\">i</code> as long as <code class=\"w3-codespan\">i</code> is less than 6.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint i = 1;\n<input maxlength=\"5\" name=\"ex1\" style=\"width: 55px;\"/> (i &lt; 6) {\n  System.out.println(i); \n  <input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>;\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_while_loop1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_switch.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_for_loop.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Print <code class=\"w3-codespan\">i</code> as long as <code class=\"w3-codespan\">i</code> is less than 6.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint i = 1;\n<input maxlength=\"5\" name=\"ex1\" style=\"width: 55px;\"/> (i &lt; 6) {\n  System.out.println(i); \n  <input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>;\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_while_loop1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Print <code class=\"w3-codespan\">i</code> as long as <code class=\"w3-codespan\">i</code> is less than 6.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nint i = 1;\n<input maxlength=\"5\" name=\"ex1\" style=\"width: 55px;\"/> (i &lt; 6) {\n  System.out.println(i); \n  <input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>;\n}\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_while_loop1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_while_loop.asp"
    },
    {
      "Java For Loop": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>for (<i>statement 1</i>;<i> statement 2</i>;<i> statement 3</i>) {\n\u00a0 <i>// code block to be executed</i>\n}</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>for (int i = 0; i &lt; 5; i++) {\n\u00a0\u00a0System.out.println(i);\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_for_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>for (int i = 0; i &lt;= 10; i = i + 2) {\n\u00a0\u00a0System.out.println(i);\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_for_loop_even\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Outer loop\nfor (int i = 1; i &lt;= 2; i++) {\n  System.out.println(\"Outer: \" + i); // Executes 2 times\n  \n  // Inner loop\n  for (int j = 1; j &lt;= 3; j++) {\n    System.out.println(\" Inner: \" + j); // Executes 6 times (2 * 3)\n  }\n} </code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_for_loop_nested\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java For Loop": "<p>When you know exactly how many times you want to loop through a block of \ncode, use the <code class=\"w3-codespan\">for</code> loop instead of a <code class=\"w3-codespan\">while</code> loop:</p><div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>for (<i>statement 1</i>;<i> statement 2</i>;<i> statement 3</i>) {\n\u00a0 <i>// code block to be executed</i>\n}</code></pre>\n</div><p><strong>Statement 1</strong> is executed (one time) before the execution of the code block.</p><p><strong>Statement 2</strong> defines the condition for executing the code block.</p><p><strong>Statement 3</strong> is executed (every time) after the code block has been executed.</p><p>The example below will print the numbers 0 to 4:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>for (int i = 0; i &lt; 5; i++) {\n\u00a0\u00a0System.out.println(i);\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_for_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><h4>Example explained</h4><p>Statement 1 sets a variable before the loop starts (int i = 0).</p><p>Statement 2 defines the condition for the loop to run (i must be less than \n5). If the condition is true, the loop will start over again, if it is false, \nthe loop will end.</p><p>Statement 3 increases a value (i++) each time the code block in the loop has \nbeen executed.</p><hr/>",
        "Another Example": "<p>This example will only print even values between 0 and 10:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>for (int i = 0; i &lt;= 10; i = i + 2) {\n\u00a0\u00a0System.out.println(i);\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_for_loop_even\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Nested Loops": "<p>It is also possible to place a loop inside another loop. This is called a\n<strong>nested loop</strong>.</p><p>The \"inner loop\" will be executed one time for each iteration of the \"outer loop\":</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Outer loop\nfor (int i = 1; i &lt;= 2; i++) {\n  System.out.println(\"Outer: \" + i); // Executes 2 times\n  \n  // Inner loop\n  for (int j = 1; j &lt;= 3; j++) {\n    System.out.println(\" Inner: \" + j); // Executes 6 times (2 * 3)\n  }\n} </code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_for_loop_nested\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div>\n<form action=\"exercise.asp?filename=exercise_while_loop3\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Use a <code class=\"w3-codespan\">for</code> loop to print \"Yes\" 5 times.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/> (int i = 0; i &lt; 5; <input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>) {\n  System.out.println(<input maxlength=\"5\" name=\"ex3\" style=\"width: 55px;\"/>);\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_while_loop3\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_while_loop.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_foreach_loop.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Use a <code class=\"w3-codespan\">for</code> loop to print \"Yes\" 5 times.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/> (int i = 0; i &lt; 5; <input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>) {\n  System.out.println(<input maxlength=\"5\" name=\"ex3\" style=\"width: 55px;\"/>);\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_while_loop3\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Use a <code class=\"w3-codespan\">for</code> loop to print \"Yes\" 5 times.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/> (int i = 0; i &lt; 5; <input maxlength=\"3\" name=\"ex2\" style=\"width: 35px;\"/>) {\n  System.out.println(<input maxlength=\"5\" name=\"ex3\" style=\"width: 55px;\"/>);\n}\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_while_loop3\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_for_loop.asp"
    },
    {
      "Java Break/Continue": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"3\"><code>for (int i = 0; i &lt; 10; i++) {\n\u00a0 if (i == 4) {\n\u00a0\u00a0\u00a0 break;\n\u00a0 }\n\u00a0 System.out.println(i);\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_break\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"3\"><code>for (int i = 0; i &lt; 10; i++) {\n\u00a0 if (i == 4) {\n\u00a0\u00a0\u00a0 continue;\n\u00a0 }\n\u00a0 System.out.println(i);\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_continue\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Break Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"6\"><code>int i = 0;\nwhile (i &lt; 10) {\n\u00a0\u00a0System.out.println(i);\n\u00a0\u00a0i++;\n\u00a0\u00a0if (i == 4) {\n\u00a0\u00a0\u00a0\u00a0break;\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_break_while\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Continue Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"5\"><code>int i = 0;\nwhile (i &lt; 10) {\n\u00a0\u00a0if (i == 4) {\n\u00a0\u00a0\u00a0 i++;\n\u00a0\u00a0\u00a0\u00a0continue;\n\u00a0\u00a0}\n\u00a0\u00a0System.out.println(i);\n\u00a0\u00a0i++;\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_continue_while\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Break": "<p>You have already seen the <code class=\"w3-codespan\">break</code> statement used in an earlier chapter of this tutorial. It was used to \"jump out\" of a <code class=\"w3-codespan\">switch</code> statement.</p><p>The <code class=\"w3-codespan\">break</code> statement can also be used to jump out of a \n<strong>loop</strong>.</p><p>This example stops the loop when i is equal to 4:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"3\"><code>for (int i = 0; i &lt; 10; i++) {\n\u00a0 if (i == 4) {\n\u00a0\u00a0\u00a0 break;\n\u00a0 }\n\u00a0 System.out.println(i);\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_break\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Java Continue": "<p>The <code class=\"w3-codespan\">continue</code> statement breaks one iteration (in the loop), if a specified condition occurs, and continues with the next iteration in the loop.</p><p>This example skips the value of 4:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"3\"><code>for (int i = 0; i &lt; 10; i++) {\n\u00a0 if (i == 4) {\n\u00a0\u00a0\u00a0 continue;\n\u00a0 }\n\u00a0 System.out.println(i);\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_continue\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Break and Continue in While Loop": "<p>You can also use <code class=\"w3-codespan\">break</code> and <code class=\"w3-codespan\">continue</code> in while loops:</p><div class=\"w3-example\">\n<h3>Break Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"6\"><code>int i = 0;\nwhile (i &lt; 10) {\n\u00a0\u00a0System.out.println(i);\n\u00a0\u00a0i++;\n\u00a0\u00a0if (i == 4) {\n\u00a0\u00a0\u00a0\u00a0break;\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_break_while\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-example\">\n<h3>Continue Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"5\"><code>int i = 0;\nwhile (i &lt; 10) {\n\u00a0\u00a0if (i == 4) {\n\u00a0\u00a0\u00a0 i++;\n\u00a0\u00a0\u00a0\u00a0continue;\n\u00a0\u00a0}\n\u00a0\u00a0System.out.println(i);\n\u00a0\u00a0i++;\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_continue_while\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_while_loop5\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Stop the loop if <code class=\"w3-codespan\">i</code> is 5.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nfor (int i = 0; i &lt; 10; i++) {\n  if (i == 5) {   \n    <input maxlength=\"5\" name=\"ex1\" style=\"width: 55px;\"/>;\n  }\n  System.out.println(i);\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_while_loop5\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_foreach_loop.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_arrays.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Stop the loop if <code class=\"w3-codespan\">i</code> is 5.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nfor (int i = 0; i &lt; 10; i++) {\n  if (i == 5) {   \n    <input maxlength=\"5\" name=\"ex1\" style=\"width: 55px;\"/>;\n  }\n  System.out.println(i);\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_while_loop5\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Stop the loop if <code class=\"w3-codespan\">i</code> is 5.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nfor (int i = 0; i &lt; 10; i++) {\n  if (i == 5) {   \n    <input maxlength=\"5\" name=\"ex1\" style=\"width: 55px;\"/>;\n  }\n  System.out.println(i);\n}\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_while_loop5\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_break.asp"
    },
    {
      "Java Arrays": {
        "examples": [
          "<div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code>String[] cars;\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code>String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code>int[] myNum = {10, 20, 30, 40};\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nSystem.out.println(cars[0]);\n// Outputs Volvo\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_array\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars[0] = \"Opel\";\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\ncars[0] = \"Opel\";\nSystem.out.println(cars[0]);\n// Now outputs Opel instead of Volvo\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_array_change\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nSystem.out.println(cars.length);\n// Outputs 4\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_array_length\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Arrays": "<p>Arrays are used to store multiple values in a single variable, instead of declaring separate variables for each \nvalue.</p><p>To declare an array, define the variable type with <strong>square brackets</strong>:</p><div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code>String[] cars;\n</code></pre>\n</div><p>We have now declared a variable that holds an array of strings. To insert \nvalues to it, you can place the values in a \ncomma-separated list, inside curly braces:</p><div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code>String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\n</code></pre>\n</div><p>To create an array of integers, you could write:</p><div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code>int[] myNum = {10, 20, 30, 40};\n</code></pre>\n</div><hr/>",
        "Access the Elements of an Array": "<p>You can access an array element by referring to the index number.</p><p>This statement accesses the value of the first element in cars:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nSystem.out.println(cars[0]);\n// Outputs Volvo\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_array\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p><strong>Note:</strong> Array indexes start with 0: [0] is the first element. [1] is the second \nelement, etc.</p>\n</div><hr/>",
        "Change an Array Element": "<p>To change the value of a specific element, refer to the index number:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars[0] = \"Opel\";\n</code></pre>\n</div><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\ncars[0] = \"Opel\";\nSystem.out.println(cars[0]);\n// Now outputs Opel instead of Volvo\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_array_change\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Array Length": "<p><!--In Java, an Array is a non-primitive data type, which means that it is an object with different methods that can be used to obtain information about this specific object. For example,--> \nTo find out how many elements an array has, use the <code class=\"w3-codespan\">length</code> property:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nSystem.out.println(cars.length);\n// Outputs 4\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_array_length\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_arrays1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Create an array of type <code class=\"w3-codespan\">String</code> called <code class=\"w3-codespan\">cars</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"8\" name=\"ex1\" style=\"width: 85px;\"/> <input maxlength=\"4\" name=\"ex2\" style=\"width: 45px;\"/> = {\"Volvo\", \"BMW\", \"Ford\"};\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_arrays1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_break.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_arrays_loop.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Create an array of type <code class=\"w3-codespan\">String</code> called <code class=\"w3-codespan\">cars</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"8\" name=\"ex1\" style=\"width: 85px;\"/> <input maxlength=\"4\" name=\"ex2\" style=\"width: 45px;\"/> = {\"Volvo\", \"BMW\", \"Ford\"};\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_arrays1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Create an array of type <code class=\"w3-codespan\">String</code> called <code class=\"w3-codespan\">cars</code>.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"8\" name=\"ex1\" style=\"width: 85px;\"/> <input maxlength=\"4\" name=\"ex2\" style=\"width: 45px;\"/> = {\"Volvo\", \"BMW\", \"Ford\"};\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_arrays1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_arrays.asp"
    }
  ],
  "Java Methods": [
    {
      "Java Methods": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a method inside Main:</p>\n<pre class=\"language-java w3-white\" data-line=\"2\"><code>public class Main {\n\u00a0 static void myMethod() {\n\u00a0\u00a0\u00a0 // code to be executed\n\u00a0 }\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Inside <code class=\"w3-codespan\">main</code>, call the <code class=\"w3-codespan\">\nmyMethod()</code> method:</p>\n<pre class=\"language-java w3-white\" data-line=\"7\"><code>public class Main {\n\u00a0 static void myMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"I just got executed!\");\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 myMethod();\n\u00a0 }\n}\n\n// Outputs \"I just got executed!\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"7,8,9\"><code>public class Main {\n\u00a0 static void myMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"I just got executed!\");\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 myMethod();\n\u00a0\u00a0\u00a0 myMethod();\n\u00a0\u00a0\u00a0 myMethod();\n\u00a0 }\n}\n\n// I just got executed!\n// I just got executed!\n// I just got executed!\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_multiple\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Create a Method": "<p>A method must be declared within a class. It is defined \nwith the name of the method, followed by parentheses <strong>()</strong>. Java provides some pre-defined methods, such as <code class=\"w3-codespan\">System.out.println()</code>, but you can also create your own methods to perform certain actions:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a method inside Main:</p>\n<pre class=\"language-java w3-white\" data-line=\"2\"><code>public class Main {\n\u00a0 static void myMethod() {\n\u00a0\u00a0\u00a0 // code to be executed\n\u00a0 }\n}\n</code></pre>\n</div><h4>Example Explained</h4><ul>\n<li><code class=\"w3-codespan\">myMethod()</code> is the name of the method</li>\n<li><code class=\"w3-codespan\">static</code> means that the method belongs to the \nMain class and not an object of the Main class. You will learn more about objects and how to access methods through objects later in this tutorial.</li>\n<li><code class=\"w3-codespan\">void</code> means that this method does not have a \nreturn value. You will learn more about return values later in this chapter</li>\n</ul><hr/>",
        "Call a Method": "<p>To call a method in Java, write the method's name followed by two \nparentheses <strong>()</strong> and a semicolon<strong>;</strong></p><p>In the following example, <code class=\"w3-codespan\">myMethod()</code> is used to print a text (the action), when it is called:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Inside <code class=\"w3-codespan\">main</code>, call the <code class=\"w3-codespan\">\nmyMethod()</code> method:</p>\n<pre class=\"language-java w3-white\" data-line=\"7\"><code>public class Main {\n\u00a0 static void myMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"I just got executed!\");\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 myMethod();\n\u00a0 }\n}\n\n// Outputs \"I just got executed!\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>A method can also be called multiple times:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"7,8,9\"><code>public class Main {\n\u00a0 static void myMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"I just got executed!\");\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 myMethod();\n\u00a0\u00a0\u00a0 myMethod();\n\u00a0\u00a0\u00a0 myMethod();\n\u00a0 }\n}\n\n// I just got executed!\n// I just got executed!\n// I just got executed!\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_multiple\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p>In the next chapter, <a href=\"java_methods_param.asp\">Method Parameters</a>, you will learn how to pass data (parameters) into a method.</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_methods1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing part to call <code class=\"w3-codespan\">myMethod</code> from <code class=\"w3-codespan\">main</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nstatic void myMethod() {\n  System.out.println(\"I just got executed!\");\n}\n\npublic static void main(String[] args) {\n  <input maxlength=\"10\" name=\"ex1\" style=\"width: 105px;\"/>;\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_methods1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_arrays_multi.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_methods_param.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing part to call <code class=\"w3-codespan\">myMethod</code> from <code class=\"w3-codespan\">main</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nstatic void myMethod() {\n  System.out.println(\"I just got executed!\");\n}\n\npublic static void main(String[] args) {\n  <input maxlength=\"10\" name=\"ex1\" style=\"width: 105px;\"/>;\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_methods1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Insert the missing part to call <code class=\"w3-codespan\">myMethod</code> from <code class=\"w3-codespan\">main</code>.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nstatic void myMethod() {\n  System.out.println(\"I just got executed!\");\n}\n\npublic static void main(String[] args) {\n  <input maxlength=\"10\" name=\"ex1\" style=\"width: 105px;\"/>;\n}\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_methods1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_methods.asp"
    },
    {
      "Java Method Parameters": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2,7,8,9\"><code>public class Main {\n\u00a0 static void myMethod(String fname) {\n\u00a0\u00a0\u00a0 System.out.println(fname + \" Refsnes\");\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 myMethod(\"Liam\");\n\u00a0\u00a0\u00a0 myMethod(\"Jenny\");\n\u00a0\u00a0\u00a0 myMethod(\"Anja\");\n\u00a0 }\n}\n// Liam Refsnes\n// Jenny Refsnes\n// Anja Refsnes\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_param\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2\"><code>public class Main {\n  static void myMethod(String fname, int age) {\n    System.out.println(fname + \" is \" + age);\n  }\n\n  public static void main(String[] args) {\n    myMethod(\"Liam\", 5);\n    myMethod(\"Jenny\", 8);\n    myMethod(\"Anja\", 31);\n  }\n}\n\n// Liam is 5\n// Jenny is 8\n// Anja is 31</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_param2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"3\"><code>public class Main {\n\u00a0 static <strong>int</strong> myMethod(int x) {\n\u00a0\u00a0\u00a0 <strong>return</strong> 5 + x;\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(myMethod(3));\n\u00a0 }\n}\n// Outputs 8 (5 + 3)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_void\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 static int myMethod(int x, int y) {\n\u00a0\u00a0\u00a0 return x + y;\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(myMethod(5, 3));\n\u00a0 }\n}\n// Outputs 8 (5 + 3)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_void2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 static int myMethod(int x, int y) {\n\u00a0\u00a0\u00a0 return x + y;\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 int z = myMethod(5, 3);\n\u00a0\u00a0\u00a0 System.out.println(z);\n\u00a0 }\n}\n// Outputs 8 (5 + 3)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_void3\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\n\u00a0 // Create a checkAge() method with an integer variable called <strong>age</strong>\n\u00a0 static void checkAge(int age) {\n\n\u00a0\u00a0\u00a0 // If age is less than 18, print \"access denied\"\n\u00a0\u00a0\u00a0 if (age &lt; 18) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Access denied - You are not old enough!\");\n\n\u00a0\u00a0\u00a0 // If age is greater than, or equal to, 18, print \"access granted\"\n\u00a0\u00a0\u00a0 } else {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Access granted - You are old enough!\");\n\u00a0\u00a0\u00a0 }\n\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 checkAge(20); // Call the checkAge method and pass along an age of 20\n\u00a0 }\n}\n\n// Outputs \"Access granted - You are old enough!\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_ifelse\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Parameters and Arguments": "<p>Information can be passed to methods as parameter. Parameters act as variables inside the method.</p><p>Parameters are specified after the method name, inside the parentheses.\nYou can add as many parameters as you want, just separate them with a comma.</p><p>\nThe following example has a \nmethod that takes a <code class=\"w3-codespan\">String</code> called <b>fname</b> as parameter.\nWhen the method is called, we pass along a first name,\nwhich is used inside the method to print the full name:\n</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2,7,8,9\"><code>public class Main {\n\u00a0 static void myMethod(String fname) {\n\u00a0\u00a0\u00a0 System.out.println(fname + \" Refsnes\");\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 myMethod(\"Liam\");\n\u00a0\u00a0\u00a0 myMethod(\"Jenny\");\n\u00a0\u00a0\u00a0 myMethod(\"Anja\");\n\u00a0 }\n}\n// Liam Refsnes\n// Jenny Refsnes\n// Anja Refsnes\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_param\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p>When a <strong>parameter</strong> is passed to the method, it is called an <strong>argument</strong>. So, from the example above: <code class=\"w3-codespan\">fname</code> is a <strong>parameter</strong>, while <code class=\"w3-codespan\">Liam</code>, <code class=\"w3-codespan\">Jenny</code> and <code class=\"w3-codespan\">Anja</code> are <strong>arguments</strong>.</p>\n</div><hr/>",
        "Multiple Parameters": "<p>You can have as many parameters as you like:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2\"><code>public class Main {\n  static void myMethod(String fname, int age) {\n    System.out.println(fname + \" is \" + age);\n  }\n\n  public static void main(String[] args) {\n    myMethod(\"Liam\", 5);\n    myMethod(\"Jenny\", 8);\n    myMethod(\"Anja\", 31);\n  }\n}\n\n// Liam is 5\n// Jenny is 8\n// Anja is 31</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_param2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p>Note that when you are working with multiple parameters, the method call must \nhave the same number of arguments as there are parameters, and the arguments must be passed in the same order.</p>\n</div><hr/>",
        "Return Values": "<p>The <code class=\"w3-codespan\">void</code> keyword, used in the examples above, indicates that the method should not return a value. If you \nwant the method to return a value, you can use a primitive data type (such as <code class=\"w3-codespan\">int</code>, \n<code class=\"w3-codespan\">char</code>, etc.) instead of <code class=\"w3-codespan\">void</code>, and use the <code class=\"w3-codespan\">return</code> \nkeyword inside the method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"3\"><code>public class Main {\n\u00a0 static <strong>int</strong> myMethod(int x) {\n\u00a0\u00a0\u00a0 <strong>return</strong> 5 + x;\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(myMethod(3));\n\u00a0 }\n}\n// Outputs 8 (5 + 3)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_void\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>This example returns the sum of a method's <strong>two parameters</strong>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 static int myMethod(int x, int y) {\n\u00a0\u00a0\u00a0 return x + y;\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(myMethod(5, 3));\n\u00a0 }\n}\n// Outputs 8 (5 + 3)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_void2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>You can also store the result in a variable (recommended, as it is easier to read and maintain):</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 static int myMethod(int x, int y) {\n\u00a0\u00a0\u00a0 return x + y;\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 int z = myMethod(5, 3);\n\u00a0\u00a0\u00a0 System.out.println(z);\n\u00a0 }\n}\n// Outputs 8 (5 + 3)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_void3\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "A Method with If...Else": "<p>It is common to use <code class=\"w3-codespan\">if...else</code> statements inside methods:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\n\u00a0 // Create a checkAge() method with an integer variable called <strong>age</strong>\n\u00a0 static void checkAge(int age) {\n\n\u00a0\u00a0\u00a0 // If age is less than 18, print \"access denied\"\n\u00a0\u00a0\u00a0 if (age &lt; 18) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Access denied - You are not old enough!\");\n\n\u00a0\u00a0\u00a0 // If age is greater than, or equal to, 18, print \"access granted\"\n\u00a0\u00a0\u00a0 } else {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Access granted - You are old enough!\");\n\u00a0\u00a0\u00a0 }\n\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 checkAge(20); // Call the checkAge method and pass along an age of 20\n\u00a0 }\n}\n\n// Outputs \"Access granted - You are old enough!\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_ifelse\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_methods3\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Add a <code class=\"w3-codespan\">fname</code> parameter of type <code class=\"w3-codespan\">String</code> to <code class=\"w3-codespan\">myMethod</code>, and output \"John Doe\":</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nstatic void myMethod(<input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/> <input maxlength=\"5\" name=\"ex2\" style=\"width: 55px;\"/>) {\n  System.out.println(<input maxlength=\"5\" name=\"ex3\" style=\"width: 55px;\"/> + \" Doe\");\n}\n\npublic static void main(String[] args) {\n  myMethod(\"John\");\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_methods3\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_methods.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_methods_overloading.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Add a <code class=\"w3-codespan\">fname</code> parameter of type <code class=\"w3-codespan\">String</code> to <code class=\"w3-codespan\">myMethod</code>, and output \"John Doe\":</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nstatic void myMethod(<input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/> <input maxlength=\"5\" name=\"ex2\" style=\"width: 55px;\"/>) {\n  System.out.println(<input maxlength=\"5\" name=\"ex3\" style=\"width: 55px;\"/> + \" Doe\");\n}\n\npublic static void main(String[] args) {\n  myMethod(\"John\");\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_methods3\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Add a <code class=\"w3-codespan\">fname</code> parameter of type <code class=\"w3-codespan\">String</code> to <code class=\"w3-codespan\">myMethod</code>, and output \"John Doe\":</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\nstatic void myMethod(<input maxlength=\"6\" name=\"ex1\" style=\"width: 65px;\"/> <input maxlength=\"5\" name=\"ex2\" style=\"width: 55px;\"/>) {\n  System.out.println(<input maxlength=\"5\" name=\"ex3\" style=\"width: 55px;\"/> + \" Doe\");\n}\n\npublic static void main(String[] args) {\n  myMethod(\"John\");\n}\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_methods3\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_methods_param.asp"
    },
    {
      "Java Method Overloading": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-csharp w3-white\"><code>int myMethod(int x)\nfloat myMethod(float x)\ndouble myMethod(double x, double y)</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-csharp w3-white\"><code>static int plusMethodInt(int x, int y) {\n  return x + y;\n}\n\nstatic double plusMethodDouble(double x, double y) {\n  return x + y;\n}\n\npublic static void main(String[] args) {\n  int myNum1 = plusMethodInt(8, 5);\n  double myNum2 = plusMethodDouble(4.3, 6.26);\n  System.out.println(\"int: \" + myNum1);\n  System.out.println(\"double: \" + myNum2);\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_overloading\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-csharp w3-white\" data-line=\"1,6,13,14\"><code>static int plusMethod(int x, int y) {\n  return x + y;\n}\n\nstatic double plusMethod(double x, double y) {\n  return x + y;\n}\n\npublic static void main(String[] args) {\n  int myNum1 = plusMethod(8, 5);\n  double myNum2 = plusMethod(4.3, 6.26);\n  System.out.println(\"int: \" + myNum1);\n  System.out.println(\"double: \" + myNum2);\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_overloading2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Method Overloading": "<p>With<strong> method overloading</strong>, multiple methods can have the same name with different\nparameters:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-csharp w3-white\"><code>int myMethod(int x)\nfloat myMethod(float x)\ndouble myMethod(double x, double y)</code></pre>\n</div><p>Consider the following example, which has two methods that add numbers of different type:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-csharp w3-white\"><code>static int plusMethodInt(int x, int y) {\n  return x + y;\n}\n\nstatic double plusMethodDouble(double x, double y) {\n  return x + y;\n}\n\npublic static void main(String[] args) {\n  int myNum1 = plusMethodInt(8, 5);\n  double myNum2 = plusMethodDouble(4.3, 6.26);\n  System.out.println(\"int: \" + myNum1);\n  System.out.println(\"double: \" + myNum2);\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_overloading\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>Instead of defining two methods that should do the same thing, it is better to overload one. </p><p>In the example below, we overload the <code class=\"w3-codespan\">plusMethod</code> \nmethod to work for both <code class=\"w3-codespan\">int</code> \nand <code class=\"w3-codespan\">double</code>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-csharp w3-white\" data-line=\"1,6,13,14\"><code>static int plusMethod(int x, int y) {\n  return x + y;\n}\n\nstatic double plusMethod(double x, double y) {\n  return x + y;\n}\n\npublic static void main(String[] args) {\n  int myNum1 = plusMethod(8, 5);\n  double myNum2 = plusMethod(4.3, 6.26);\n  System.out.println(\"int: \" + myNum1);\n  System.out.println(\"double: \" + myNum2);\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_method_overloading2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p><strong>Note:</strong> Multiple methods can have the same name \n  as long as the number and/or type of parameters are different.</p>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_methods_param.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_scope.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_methods_overloading.asp"
    },
    {
      "Java Scope": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-csharp w3-white\"><code>public class Main {\n  public static void main(String[] args) {\n\n    // Code here CANNOT use x\n\n    int x = 100;\n\n    // Code here can use x\n    System.out.println(x);\n  </code>}<code>\n</code>}</pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_scope\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-csharp w3-white\"><code>public class Main {\n  public static void main(String[] args) {\n\n    // Code here CANNOT use x\n\n    { // This is a block\n\n      // Code here CANNOT use x\n\n      int x = 100;\n\n      // Code here CAN use x\n      System.out.println(x);\n\n    } // The block ends here\n\n  // Code here CANNOT use x\n\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_scope2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Scope": "<p>In Java, variables are only accessible inside the region they are created. This is called\n<strong>scope</strong>.</p><hr/>",
        "Method Scope": "<p>Variables declared directly inside a method are available anywhere in the method following the line of code in which they were declared:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-csharp w3-white\"><code>public class Main {\n  public static void main(String[] args) {\n\n    // Code here CANNOT use x\n\n    int x = 100;\n\n    // Code here can use x\n    System.out.println(x);\n  </code>}<code>\n</code>}</pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_scope\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Block Scope": "<p>A block of code refers to all of the code between curly braces <code class=\"w3-codespan\">{}</code>.</p><p>Variables\ndeclared inside blocks of code are only accessible by the code between the curly braces, which follows the line in which the variable was declared:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-csharp w3-white\"><code>public class Main {\n  public static void main(String[] args) {\n\n    // Code here CANNOT use x\n\n    { // This is a block\n\n      // Code here CANNOT use x\n\n      int x = 100;\n\n      // Code here CAN use x\n      System.out.println(x);\n\n    } // The block ends here\n\n  // Code here CANNOT use x\n\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_scope2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p>A block of code may exist on its\nown or it can belong to an <code class=\"w3-codespan\">if</code>, <code class=\"w3-codespan\">while</code> or <code class=\"w3-codespan\">for</code> statement. In the case of <code class=\"w3-codespan\">for</code> statements,\nvariables declared in the statement itself are also available inside the block's scope.</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_methods_overloading.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_recursion.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_scope.asp"
    },
    {
      "Java Recursion": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use recursion to add all of the numbers up to 10.</p>\n<pre class=\"language-csharp w3-white\"><code>public class Main {\n  public static void main(String[] args) {\n    int result = sum(10);\n    System.out.println(result);\n  </code>}<code>\n  public static int sum(int k) {\n    if (k &gt; 0) {\n      return k + sum(k - 1);\n    } else {\n      return 0;\n    </code>}<code>\n  </code>}<code>\n</code>}</pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_recursion\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use recursion to add all of the numbers between 5 to 10.</p>\n<pre class=\"language-csharp w3-white\"><code>public class Main {\n  public static void main(String[] args) {\n    int result = sum(5, 10);\n    System.out.println(result);\n  </code>}<code>\n  public static int sum(int start, int end) {\n    if (end &gt; start) {\n      return end + sum(start, end - 1);\n    } else {\n      return end;\n    }\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_recursion2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Recursion": "<p>Recursion is the technique of making a function call itself. This technique provides a way\nto break complicated problems down into simple problems which are easier to solve.</p><p>Recursion may be a bit difficult to understand. The\nbest way to figure out how it works is to experiment with it.</p><hr/>",
        "Recursion Example": "<p>Adding two numbers together is easy to do, but adding a range of numbers is more\ncomplicated. In the following example, recursion is used to add a range of numbers\ntogether by breaking it down into the simple task of adding two numbers:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use recursion to add all of the numbers up to 10.</p>\n<pre class=\"language-csharp w3-white\"><code>public class Main {\n  public static void main(String[] args) {\n    int result = sum(10);\n    System.out.println(result);\n  </code>}<code>\n  public static int sum(int k) {\n    if (k &gt; 0) {\n      return k + sum(k - 1);\n    } else {\n      return 0;\n    </code>}<code>\n  </code>}<code>\n</code>}</pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_recursion\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><h3>Example Explained</h3><p>When the <code class=\"w3-codespan\">sum()</code> function is called, it adds parameter <code class=\"w3-codespan\">k</code> to the sum of all numbers smaller\nthan <code class=\"w3-codespan\">k</code> and returns the result. When k becomes 0, the function just returns 0. When\nrunning, the program follows these steps:</p><div class=\"w3-note w3-panel\" style=\"background-color:#2196F3!important;color:white\">\n10 + sum(9)<br/>\n10 + ( 9 + sum(8) )<br/>\n10 + ( 9 + ( 8 + sum(7) ) )<br/>\n...<br/>\n10 + 9 + 8 + 7 + 6 + 5 + 4 + 3 + 2 + 1 + sum(0)<br/>\n10 + 9 + 8 + 7 + 6 + 5 + 4 + 3 + 2 + 1 + 0\n</div><p>Since the function does not call itself when <code class=\"w3-codespan\">k</code> is 0, the program stops there and returns the\nresult.</p><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Halting Condition": "<p>Just as loops can run into the problem of infinite looping, recursive functions can run into\nthe problem of infinite recursion. Infinite recursion is when the function never stops calling\nitself. Every recursive function should have a halting condition, which is the condition\nwhere the function stops calling itself. In the previous example, the halting condition is\nwhen the parameter <code class=\"w3-codespan\">k</code> becomes 0.</p><p>It is helpful to see a variety of different examples to better understand the concept. In this\nexample, the function adds a range of numbers between a start and an end. The halting\ncondition for this recursive function is when <strong>end</strong> is not greater than <strong>start</strong>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use recursion to add all of the numbers between 5 to 10.</p>\n<pre class=\"language-csharp w3-white\"><code>public class Main {\n  public static void main(String[] args) {\n    int result = sum(5, 10);\n    System.out.println(result);\n  </code>}<code>\n  public static int sum(int start, int end) {\n    if (end &gt; start) {\n      return end + sum(start, end - 1);\n    } else {\n      return end;\n    }\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_recursion2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p>The developer should be very careful with recursion as it can be quite easy to slip into writing a function which never terminates, or one that uses excess amounts of memory or processor power. However, when written correctly recursion can be a very efficient and mathematically-elegant approach to programming.</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_scope.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_oop.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_recursion.asp"
    }
  ],
  "Java Classes": [
    {
      "Java OOP": {
        "examples": [],
        "Java - What is OOP?": "<p>OOP stands for <strong>Object-Oriented Programming</strong>.</p><p>Procedural programming is about writing procedures or methods that perform \noperations on the data, while object-oriented programming is about \ncreating objects that contain both data and methods.</p><p>Object-oriented programming has several advantages over procedural \nprogramming:</p><ul>\n<li>OOP is faster and easier to execute</li>\n<li>OOP provides a clear structure for the programs</li>\n<li>OOP helps to keep the Java code DRY \"Don't Repeat Yourself\", and makes \n  the \n  code easier to maintain, modify and debug</li>\n<li>OOP makes it possible to create full reusable \n  applications with less code and shorter development time</li>\n</ul><p><strong>Tip:</strong> The \"Don't Repeat Yourself\" (DRY) principle is about \nreducing the repetition of code. You should extract out the codes that are \ncommon for the application, and place them at a single place and reuse them \ninstead of repeating it.</p><hr/>",
        "Java - What are Classes and Objects?": "<p>Classes and objects are the two main aspects of object-oriented programming.</p><p>Look at the following illustration to see the difference between class and \nobjects:</p><div class=\"flex-container\">\n<div class=\"box\">\n<h2>class</h2>\n<p>Fruit</p>\n</div>\n<div class=\"box\">\n<h2>objects</h2>\n<p>Apple</p>\n<p>Banana</p>\n<p>Mango</p>\n</div>\n</div><p>Another example:</p><div class=\"flex-container\">\n<div class=\"box\">\n<h2>class</h2>\n<p>Car</p>\n</div>\n<div class=\"box\">\n<h2>objects</h2>\n<p>Volvo</p>\n<p>Audi</p>\n<p>Toyota</p>\n</div>\n</div><p>So, a class is a template for objects, and an object is an instance of a class.</p><p>When the individual objects are created, they inherit all the \nvariables and methods from the class.</p><p>You will learn much more about <a href=\"java_classes.asp\">classes and objects</a> in the next chapter.</p><hr/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_recursion.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_classes.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "class": "<p>Car</p>",
        "objects": "<p>Volvo</p><p>Audi</p><p>Toyota</p>"
      },
      "url": "java_oop.asp"
    },
    {
      "Java Classes/Objects": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Main.java</h3>\n<p>Create a class named \"<code class=\"w3-codespan\">Main</code>\" with a \nvariable x:</p>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 int x = 5;\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create an object called \"<code class=\"w3-codespan\">myObj</code>\" and print the value of x:</p>\n<pre class=\"language-java w3-white\" data-line=\"5\"><code>public class Main {\n\u00a0 int x = 5;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main <strong>myObj</strong> = new Main();\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create two objects of <code class=\"w3-codespan\">Main</code>:</p>\n<pre class=\"language-java w3-white\" data-line=\"5,6\"><code>public class Main {\n\u00a0 int x = 5;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main <strong>myObj1</strong> = new Main();\u00a0 // Object 1\n\u00a0\u00a0\u00a0 Main <strong>myObj2</strong> = new Main();\u00a0 // Object 2\n\u00a0\u00a0\u00a0 System.out.println(myObj1.x);\n\u00a0\u00a0\u00a0 System.out.println(myObj2.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_multi_obj\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h4>Main.java</h4>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 int x = 5;\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h4>Second.java</h4>\n<pre class=\"language-java w3-white\"><code>class Second {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main <strong>myObj</strong> = new Main();\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;javac Main.java<br/>\nC:\\Users\\<em>Your Name</em>&gt;javac Second.java\n</div>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java Second\n</div>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-padding notranslate w3-black w3-margin-top\">\n<code>5</code></div>\n<a class=\"w3-btn w3-margin-top w3-margin-bottom\" href=\"tryjava_multi.asp?filename=demo_classes&amp;multi=demo_classes_multi\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>"
        ],
        "Java Classes/Objects": "<p>Java is an object-oriented programming language.</p><p>Everything in Java is associated with classes and objects, along with its attributes and \nmethods. For example: in real life, a car is an object. The car has <strong>attributes</strong>, such as weight and color, and <strong>\nmethods</strong>, such as drive and brake. </p><p>A Class is like an object constructor, or a \"blueprint\" for creating objects.</p><hr/>",
        "Create a Class": "<p>To create a class, use the keyword <code class=\"w3-codespan\">class</code>:</p><div class=\"w3-example\">\n<h3>Main.java</h3>\n<p>Create a class named \"<code class=\"w3-codespan\">Main</code>\" with a \nvariable x:</p>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 int x = 5;\n}\n</code></pre>\n</div><div class=\"w3-note w3-panel\">\n<p>Remember from the <a href=\"java_syntax.asp\">Java Syntax chapter</a> that a class should always start with an uppercase first letter, and that the name of the java file should match the class name.</p>\n</div><hr/>",
        "Create an Object": "<p>In Java, an object is created from a class. We have already created the class named <code class=\"w3-codespan\">\nMain</code>, \nso now we can use this to create objects.</p><p>To create an object of <code class=\"w3-codespan\">Main</code>, \nspecify the class name, followed by the object name, and use the keyword <code class=\"w3-codespan\">new</code>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create an object called \"<code class=\"w3-codespan\">myObj</code>\" and print the value of x:</p>\n<pre class=\"language-java w3-white\" data-line=\"5\"><code>public class Main {\n\u00a0 int x = 5;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main <strong>myObj</strong> = new Main();\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Multiple Objects": "<p>You can create multiple objects of one class:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create two objects of <code class=\"w3-codespan\">Main</code>:</p>\n<pre class=\"language-java w3-white\" data-line=\"5,6\"><code>public class Main {\n\u00a0 int x = 5;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main <strong>myObj1</strong> = new Main();\u00a0 // Object 1\n\u00a0\u00a0\u00a0 Main <strong>myObj2</strong> = new Main();\u00a0 // Object 2\n\u00a0\u00a0\u00a0 System.out.println(myObj1.x);\n\u00a0\u00a0\u00a0 System.out.println(myObj2.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_multi_obj\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Using Multiple Classes": "<p>You can also create an object of a class and access it in another class. This \nis often used for better organization of classes (one class has all the \nattributes and methods, while the other class holds the <code class=\"w3-codespan\">main()</code> method (code to \nbe executed)). </p><p>Remember that the name of the java file should match the class name. In this \nexample, we have created two files in the same directory/folder:</p><ul>\n<li>Main.java</li>\n<li>Second.java</li>\n</ul><div class=\"w3-example\">\n<h4>Main.java</h4>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 int x = 5;\n}\n</code></pre>\n</div><div class=\"w3-example\">\n<h4>Second.java</h4>\n<pre class=\"language-java w3-white\"><code>class Second {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main <strong>myObj</strong> = new Main();\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n</div><p>When both files have been compiled:</p><div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;javac Main.java<br/>\nC:\\Users\\<em>Your Name</em>&gt;javac Second.java\n</div>\n</div><p>Run the Second.java file:</p><div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java Second\n</div>\n</div><p>And the output will be:</p><div class=\"w3-example\">\n<div class=\"w3-padding notranslate w3-black w3-margin-top\">\n<code>5</code></div>\n<a class=\"w3-btn w3-margin-top w3-margin-bottom\" href=\"tryjava_multi.asp?filename=demo_classes&amp;multi=demo_classes_multi\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><div class=\"w3-note w3-panel\">\n<p>You will learn much more about classes and objects in the next chapters.</p>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_classes2\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Create an object of <code class=\"w3-codespan\">MyClass</code> called <code class=\"w3-codespan\">myObj</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"7\" name=\"ex1\" style=\"width: 75px;\"/> <input maxlength=\"5\" name=\"ex2\" style=\"width: 55px;\"/> = new <input maxlength=\"7\" name=\"ex3\" style=\"width: 75px;\"/>();\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_classes2\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_oop.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_class_attributes.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Create an object of <code class=\"w3-codespan\">MyClass</code> called <code class=\"w3-codespan\">myObj</code>.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"7\" name=\"ex1\" style=\"width: 75px;\"/> <input maxlength=\"5\" name=\"ex2\" style=\"width: 55px;\"/> = new <input maxlength=\"7\" name=\"ex3\" style=\"width: 75px;\"/>();\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_classes2\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Create an object of <code class=\"w3-codespan\">MyClass</code> called <code class=\"w3-codespan\">myObj</code>.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"7\" name=\"ex1\" style=\"width: 75px;\"/> <input maxlength=\"5\" name=\"ex2\" style=\"width: 55px;\"/> = new <input maxlength=\"7\" name=\"ex3\" style=\"width: 75px;\"/>();\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_classes2\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_classes.asp"
    },
    {
      "Java Class Attributes": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a class called \"<code class=\"w3-codespan\">Main</code>\" with two attributes: <code class=\"w3-codespan\">x</code> and <code class=\"w3-codespan\">y</code>:</p>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 int x = 5;\n\u00a0 int y = 3;\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create an object called \"<code class=\"w3-codespan\">myObj</code>\" and print the value of <code class=\"w3-codespan\">x</code>:</p>\n<pre class=\"language-java w3-white\" data-line=\"5,6\"><code>public class Main {\n\u00a0 int x = 5;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Set the value of <code class=\"w3-codespan\">x</code> to 40:</p>\n<pre class=\"language-java w3-white\" data-line=\"6\"><code>public class Main {\n\u00a0 int x;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 myObj.x = 40;\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Change the value of <code class=\"w3-codespan\">x</code> to 25:</p>\n<pre class=\"language-java w3-white\" data-line=\"6\"><code>public class Main {\n\u00a0 int x = 10;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 myObj.x = 25; // x is now 25\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes3\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2\"><code>public class Main {\n\u00a0 <strong>final</strong> int x = 10;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 myObj.x = 25; // will generate an error: cannot assign a value to a <strong>final</strong> variable\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes_final\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Change the value of <code class=\"w3-codespan\">x</code> to 25 in <code class=\"w3-codespan\">myObj2</code>, and leave <code class=\"w3-codespan\">x</code> in <code class=\"w3-codespan\">myObj1</code> unchanged:</p>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 int x = 5;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj1 = new Main();\u00a0 // Object 1\n\u00a0\u00a0\u00a0 Main myObj2 = new Main();\u00a0 // Object 2\n\u00a0\u00a0\u00a0 myObj2.x = 25;\n\u00a0\u00a0\u00a0 System.out.println(myObj1.x);\u00a0 // Outputs 5\n\u00a0\u00a0\u00a0 System.out.println(myObj2.x);\u00a0 // Outputs 25\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes_multi_obj\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 String fname = \"John\";\n\u00a0 String lname = \"Doe\";\n\u00a0 int age = 24;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 System.out.println(\"Name: \" + myObj.fname + \" \" + myObj.lname);\n\u00a0\u00a0\u00a0 System.out.println(\"Age: \" + myObj.age);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes_multiple\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Class Attributes": "<p>In the previous chapter, we used the term \"variable\" for <code class=\"w3-codespan\">x</code> in the example (as shown below). It is actually an \n<strong>attribute</strong> of the class. Or you could say that class attributes are variables within a class:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a class called \"<code class=\"w3-codespan\">Main</code>\" with two attributes: <code class=\"w3-codespan\">x</code> and <code class=\"w3-codespan\">y</code>:</p>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 int x = 5;\n\u00a0 int y = 3;\n}\n</code></pre>\n</div><div class=\"w3-note w3-panel\">\n<p>Another term for class attributes is <strong>fields</strong>.</p>\n</div><hr/>",
        "Accessing Attributes": "<p>You can access attributes by creating an object of the class, and by using the dot syntax (<code class=\"w3-codespan\">.</code>):</p><p>The following example will create an object of the <code class=\"w3-codespan\">Main</code> class, with the \nname <code class=\"w3-codespan\">myObj</code>. We use the <code class=\"w3-codespan\">x</code> \nattribute on the object to print its value:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create an object called \"<code class=\"w3-codespan\">myObj</code>\" and print the value of <code class=\"w3-codespan\">x</code>:</p>\n<pre class=\"language-java w3-white\" data-line=\"5,6\"><code>public class Main {\n\u00a0 int x = 5;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Modify Attributes": "<p>You can also modify attribute values:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Set the value of <code class=\"w3-codespan\">x</code> to 40:</p>\n<pre class=\"language-java w3-white\" data-line=\"6\"><code>public class Main {\n\u00a0 int x;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 myObj.x = 40;\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>Or override existing values:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Change the value of <code class=\"w3-codespan\">x</code> to 25:</p>\n<pre class=\"language-java w3-white\" data-line=\"6\"><code>public class Main {\n\u00a0 int x = 10;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 myObj.x = 25; // x is now 25\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes3\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>If you don't want the ability to override existing values, declare the attribute as <code class=\"w3-codespan\">final</code>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2\"><code>public class Main {\n\u00a0 <strong>final</strong> int x = 10;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 myObj.x = 25; // will generate an error: cannot assign a value to a <strong>final</strong> variable\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes_final\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p>The <code class=\"w3-codespan\">final</code> keyword is useful when you want a variable to always store the same value, like PI (3.14159...).</p>\n<p>The <code class=\"w3-codespan\">final</code> keyword is called a \"modifier\". You will learn more about these in the <a href=\"java_modifiers.asp\">Java Modifiers Chapter</a>.</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Multiple Objects": "<p>If you create multiple objects of one class, you can change the attribute values in one object, without affecting the attribute values in the other:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Change the value of <code class=\"w3-codespan\">x</code> to 25 in <code class=\"w3-codespan\">myObj2</code>, and leave <code class=\"w3-codespan\">x</code> in <code class=\"w3-codespan\">myObj1</code> unchanged:</p>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 int x = 5;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj1 = new Main();\u00a0 // Object 1\n\u00a0\u00a0\u00a0 Main myObj2 = new Main();\u00a0 // Object 2\n\u00a0\u00a0\u00a0 myObj2.x = 25;\n\u00a0\u00a0\u00a0 System.out.println(myObj1.x);\u00a0 // Outputs 5\n\u00a0\u00a0\u00a0 System.out.println(myObj2.x);\u00a0 // Outputs 25\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes_multi_obj\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Multiple Attributes": "<p>You can specify as many attributes as you want:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 String fname = \"John\";\n\u00a0 String lname = \"Doe\";\n\u00a0 int age = 24;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 System.out.println(\"Name: \" + myObj.fname + \" \" + myObj.lname);\n\u00a0\u00a0\u00a0 System.out.println(\"Age: \" + myObj.age);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_attributes_multiple\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p>The next chapter will teach you how to create class methods and how to access them with objects.</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_classes.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_class_methods.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_class_attributes.asp"
    },
    {
      "Java Class Methods": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a \nmethod named <code class=\"w3-codespan\">myMethod()</code> in Main:</p>\n<pre class=\"language-java w3-white\" data-line=\"2\"><code>public class Main {\n\u00a0 static void myMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Hello World!\");\n\u00a0 }\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Inside <code class=\"w3-codespan\">main</code>, call <code class=\"w3-codespan\">\nmyMethod()</code>:</p>\n<pre class=\"language-java w3-white\" data-line=\"7\"><code>public class Main {\n\u00a0 static void myMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Hello World!\");\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 myMethod();\n\u00a0 }\n}\n\n// Outputs \"Hello World!\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_method\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>An example to demonstrate the differences between <code class=\"w3-codespan\">static</code> and <code class=\"w3-codespan\">public</code>\n<strong>methods</strong>:</p>\n<pre class=\"language-java w3-white\" data-line=\"3,8\"><code>public class Main {\n\u00a0 // Static method\n\u00a0 static void myStaticMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Static methods can be called without creating objects\");\n\u00a0 }\n\n\u00a0 // Public method\n\u00a0 public void myPublicMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Public methods must be called by creating objects\");\n\u00a0 }\n\n\u00a0 // Main method\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 myStaticMethod(); // Call the static method\n\u00a0\u00a0\u00a0 // myPublicMethod(); This would compile an error\n\n\u00a0\u00a0\u00a0 Main myObj = new Main(); // Create an object of Main\n\u00a0\u00a0\u00a0 myObj.myPublicMethod(); // Call the public method on the object\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_method_static\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a Car object named <code class=\"w3-codespan\">myCar</code>. Call the <code class=\"w3-codespan\">fullThrottle()</code> and <code class=\"w3-codespan\">speed()</code> \nmethods on the <code class=\"w3-codespan\">myCar</code> object, and run the program:</p>\n<pre class=\"language-java w3-white\"><code>// Create a Main class\npublic class Main {\n\u00a0\n\u00a0 // Create a fullThrottle() method\n\u00a0 public void fullThrottle() {\n\u00a0\u00a0\u00a0 System.out.println(\"The car is going as fast as it can!\");\n\u00a0 }\n\n\u00a0 // Create a speed() method and add a parameter\n\u00a0 public void speed(int maxSpeed) {\n\u00a0\u00a0\u00a0 System.out.println(\"Max speed is: \" + maxSpeed);\n\u00a0 }\n\n\u00a0 // Inside main, call the methods on the myCar object\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myCar = new Main();\u00a0\u00a0 // Create a myCar object\n\u00a0\u00a0\u00a0 myCar.fullThrottle();\u00a0\u00a0\u00a0\u00a0 \u00a0// Call the fullThrottle() method\n\u00a0\u00a0\u00a0 myCar.speed(200);\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 // Call the speed() method\n\u00a0 }\n}\n\n// The car is going as fast as it can!\n// Max speed is: 200\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_car\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h4>Main.java</h4>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public void fullThrottle() {\n\u00a0\u00a0\u00a0 System.out.println(\"The car is going as fast as it can!\");\n\u00a0 }\n\n\u00a0 public void speed(int maxSpeed) {\n\u00a0\u00a0\u00a0 System.out.println(\"Max speed is: \" + maxSpeed);\n\u00a0 }\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h4>Second.java</h4>\n<pre class=\"language-java w3-white\"><code>class Second {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myCar = new Main();\u00a0 \u00a0\u00a0\u00a0// Create a myCar object\n\u00a0\u00a0\u00a0 myCar.fullThrottle();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Call the fullThrottle() method\n\u00a0\u00a0\u00a0 myCar.speed(200);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Call the speed() method\n\u00a0 }\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;javac Main.java<br/>\nC:\\Users\\<em>Your Name</em>&gt;javac Second.java\n</div>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java Second\n</div>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-padding notranslate w3-black w3-margin-top\">\n<code>The car is going as fast as it can!<br/>\nMax speed is: 200\n</code></div>\n<a class=\"w3-btn w3-margin-top w3-margin-bottom\" href=\"tryjava_multi.asp?filename=demo_class_two2&amp;multi=demo_class_two2_multi\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>"
        ],
        "Java Class Methods": "<p>You learned from the <a href=\"java_methods.asp\">Java Methods</a> chapter that methods are declared within a \nclass, and that they are used to perform certain actions:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a \nmethod named <code class=\"w3-codespan\">myMethod()</code> in Main:</p>\n<pre class=\"language-java w3-white\" data-line=\"2\"><code>public class Main {\n\u00a0 static void myMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Hello World!\");\n\u00a0 }\n}\n</code></pre>\n</div><p><code class=\"w3-codespan\">myMethod()</code> prints a text (the action), when it is \n<strong>called</strong>. To \ncall a method, write the method's name followed by two parentheses <strong>()</strong> and a semicolon<strong>;</strong></p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Inside <code class=\"w3-codespan\">main</code>, call <code class=\"w3-codespan\">\nmyMethod()</code>:</p>\n<pre class=\"language-java w3-white\" data-line=\"7\"><code>public class Main {\n\u00a0 static void myMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Hello World!\");\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 myMethod();\n\u00a0 }\n}\n\n// Outputs \"Hello World!\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_method\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><h2>Method Parameters</h2>\n<p>Methods can also have parameters, \nwhich is used to pass information:</p>\n<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a method that accepts an <code class=\"w3-codespan\">int</code> parameter called x. In the <code class=\"w3-codespan\">main()</code> method, \nwe call <code class=\"w3-codespan\">myMethod()</code> and set an <code class=\"w3-codespan\">int</code> parameter of 10:</p>\n<div class=\"w3-code notranslate javaHigh\">\n  public\n  class MyClass {<br>&nbsp; static void myMethod(<strong>int x</strong>) {<br>&nbsp;&nbsp;&nbsp; \n  System.out.println(x);<br>&nbsp; }<br><br>&nbsp; public static \n  void main(String[] args) {<br>&nbsp;&nbsp;&nbsp; <strong>myMethod(10);</strong><br>&nbsp; }<br>}<br>\n  <br>// Outputs 10<br>\n </div>\n<a target=\"_blank\" class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_class_method_para\">Try it Yourself &raquo;</a>\n</div>\n<div class=\"w3-note w3-panel\">\n</div>\n<hr>",
        "Static vs. Public": "<p>You will often see Java programs that have either <code class=\"w3-codespan\">static</code> or <code class=\"w3-codespan\">public</code> \nattributes and methods.</p><p>In the example above, we created a <code class=\"w3-codespan\">static</code> \nmethod, which means that it can be accessed without creating an object of the class, \nunlike <code class=\"w3-codespan\">public</code>, which can only be accessed by \nobjects:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>An example to demonstrate the differences between <code class=\"w3-codespan\">static</code> and <code class=\"w3-codespan\">public</code>\n<strong>methods</strong>:</p>\n<pre class=\"language-java w3-white\" data-line=\"3,8\"><code>public class Main {\n\u00a0 // Static method\n\u00a0 static void myStaticMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Static methods can be called without creating objects\");\n\u00a0 }\n\n\u00a0 // Public method\n\u00a0 public void myPublicMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Public methods must be called by creating objects\");\n\u00a0 }\n\n\u00a0 // Main method\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 myStaticMethod(); // Call the static method\n\u00a0\u00a0\u00a0 // myPublicMethod(); This would compile an error\n\n\u00a0\u00a0\u00a0 Main myObj = new Main(); // Create an object of Main\n\u00a0\u00a0\u00a0 myObj.myPublicMethod(); // Call the public method on the object\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_method_static\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p><strong>Note:</strong> You will learn more about these keywords (called modifiers) in the <a href=\"java_modifiers.asp\">Java Modifiers</a> chapter.</p>\n</div><hr/>",
        "Access Methods With an Object": "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a Car object named <code class=\"w3-codespan\">myCar</code>. Call the <code class=\"w3-codespan\">fullThrottle()</code> and <code class=\"w3-codespan\">speed()</code> \nmethods on the <code class=\"w3-codespan\">myCar</code> object, and run the program:</p>\n<pre class=\"language-java w3-white\"><code>// Create a Main class\npublic class Main {\n\u00a0\n\u00a0 // Create a fullThrottle() method\n\u00a0 public void fullThrottle() {\n\u00a0\u00a0\u00a0 System.out.println(\"The car is going as fast as it can!\");\n\u00a0 }\n\n\u00a0 // Create a speed() method and add a parameter\n\u00a0 public void speed(int maxSpeed) {\n\u00a0\u00a0\u00a0 System.out.println(\"Max speed is: \" + maxSpeed);\n\u00a0 }\n\n\u00a0 // Inside main, call the methods on the myCar object\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myCar = new Main();\u00a0\u00a0 // Create a myCar object\n\u00a0\u00a0\u00a0 myCar.fullThrottle();\u00a0\u00a0\u00a0\u00a0 \u00a0// Call the fullThrottle() method\n\u00a0\u00a0\u00a0 myCar.speed(200);\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 // Call the speed() method\n\u00a0 }\n}\n\n// The car is going as fast as it can!\n// Max speed is: 200\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_car\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><h3>Example explained</h3><p>1) We created a custom <code class=\"w3-codespan\">Main</code> class with the <code class=\"w3-codespan\">class</code> keyword.</p><p>2) We created the <code class=\"w3-codespan\">fullThrottle()</code> and <code class=\"w3-codespan\">\nspeed()</code> \nmethods in the <code class=\"w3-codespan\">Main</code> class.</p><p>3) The <code class=\"w3-codespan\">fullThrottle()</code> method and the <code class=\"w3-codespan\">\nspeed()</code> \nmethod will print out some text, when they are called.</p><p>4) The <code class=\"w3-codespan\">speed()</code> \nmethod accepts an <code class=\"w3-codespan\">int</code> parameter called <code class=\"w3-codespan\">\nmaxSpeed</code> - we \nwill use this in <strong>8)</strong>.</p><p>5) In order to use the <code class=\"w3-codespan\">Main</code> class and its \nmethods, we need to create an <strong>object</strong> of the <code class=\"w3-codespan\">\nMain</code> Class.</p><p>6) Then, go to the <code class=\"w3-codespan\">main()</code> method, which you know by now is a built-in \nJava method that runs your program (any code inside main is executed).</p><p>7) By using the <code class=\"w3-codespan\">new</code> keyword we created an object with the name\n<code class=\"w3-codespan\">myCar</code>.</p><p>8) Then, we call the <code class=\"w3-codespan\">fullThrottle()</code> and \n<code class=\"w3-codespan\">speed()</code> \nmethods on the <code class=\"w3-codespan\">\nmyCar</code> object, and run the program using the name of the object (<code class=\"w3-codespan\">myCar</code>), followed by a dot (<code class=\"w3-codespan\">.</code>), followed by the name of the method (<code class=\"w3-codespan\">fullThrottle();</code> and <code class=\"w3-codespan\">\nspeed(200);</code>). \nNotice that we add an <code class=\"w3-codespan\">int</code> parameter of <b>200</b> inside the <code class=\"w3-codespan\">\nspeed()</code> method.</p><div class=\"w3-note w3-panel\">\n<h3>Remember that..</h3>\n<p>The dot (<code class=\"w3-codespan\">.</code>) is used to access the object's attributes and methods.</p>\n<p>To call a method in Java, write the method name followed by a set of parentheses <strong>()</strong>, followed by a semicolon (<code class=\"w3-codespan\">;</code>).</p>\n<p>A class must have a matching filename (<code class=\"w3-codespan\">Main</code> and \n<strong>Main.java</strong>).</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Using Multiple Classes": "<p>Like we specified in the <a href=\"java_classes.asp\">Classes chapter</a>, it is \na good practice to create an object of a class and access it in another class.</p><p>Remember that the name of the java file should match the class name. In this \nexample, we have created two files in the same directory:</p><ul>\n<li>Main.java</li>\n<li>Second.java</li>\n</ul><div class=\"w3-example\">\n<h4>Main.java</h4>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public void fullThrottle() {\n\u00a0\u00a0\u00a0 System.out.println(\"The car is going as fast as it can!\");\n\u00a0 }\n\n\u00a0 public void speed(int maxSpeed) {\n\u00a0\u00a0\u00a0 System.out.println(\"Max speed is: \" + maxSpeed);\n\u00a0 }\n}\n</code></pre>\n</div><div class=\"w3-example\">\n<h4>Second.java</h4>\n<pre class=\"language-java w3-white\"><code>class Second {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myCar = new Main();\u00a0 \u00a0\u00a0\u00a0// Create a myCar object\n\u00a0\u00a0\u00a0 myCar.fullThrottle();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Call the fullThrottle() method\n\u00a0\u00a0\u00a0 myCar.speed(200);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Call the speed() method\n\u00a0 }\n}\n</code></pre>\n</div><p>When both files have been compiled:</p><div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;javac Main.java<br/>\nC:\\Users\\<em>Your Name</em>&gt;javac Second.java\n</div>\n</div><p>Run the Second.java file:</p><div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java Second\n</div>\n</div><p>And the output will be:</p><div class=\"w3-example\">\n<div class=\"w3-padding notranslate w3-black w3-margin-top\">\n<code>The car is going as fast as it can!<br/>\nMax speed is: 200\n</code></div>\n<a class=\"w3-btn w3-margin-top w3-margin-bottom\" href=\"tryjava_multi.asp?filename=demo_class_two2&amp;multi=demo_class_two2_multi\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_class_attributes.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_constructors.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_class_methods.asp"
    },
    {
      "Java Constructors": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a constructor:</p>\n<pre class=\"language-java w3-white\" data-line=\"6\"><code>// Create a Main class\npublic class Main {\n\u00a0 int x;\u00a0 // Create a class attribute\n\n\u00a0 // Create a <strong>class constructor</strong> for the Main class\n\u00a0 public Main() {\n\u00a0\u00a0\u00a0 x = 5;\u00a0 // Set the initial value for the class attribute x\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main(); // Create an object of class Main (This will <strong>call the constructor</strong>)\n\u00a0\u00a0\u00a0 System.out.println(myObj.x); // Print the value of x\n\u00a0 }\n}\n\n// Outputs 5\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_constructor\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>public class Main {\n\u00a0 int x;\n\n\u00a0 public Main(int y) {\n\u00a0\u00a0\u00a0 x = y;\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main(5);\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n\n// Outputs 5\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_constructor_para\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"5\"><code>public class Main {\n\u00a0 int modelYear;\n\u00a0 String modelName;\n\n\u00a0 public Main(int year, String name) {\n\u00a0\u00a0\u00a0 modelYear = year;\n\u00a0\u00a0\u00a0 modelName = name;\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myCar = new Main(1969, \"Mustang\");\n\u00a0\u00a0\u00a0 System.out.println(myCar.modelYear + \" \" + myCar.modelName);\n\u00a0 }\n}\n\n// Outputs 1969 Mustang\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_constructor_para2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Constructors": "<p>A constructor in Java is a <strong>special method</strong> that is used to initialize objects. \nThe constructor is called when an object of a class is created. It can be used to \nset initial values for object attributes:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a constructor:</p>\n<pre class=\"language-java w3-white\" data-line=\"6\"><code>// Create a Main class\npublic class Main {\n\u00a0 int x;\u00a0 // Create a class attribute\n\n\u00a0 // Create a <strong>class constructor</strong> for the Main class\n\u00a0 public Main() {\n\u00a0\u00a0\u00a0 x = 5;\u00a0 // Set the initial value for the class attribute x\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main(); // Create an object of class Main (This will <strong>call the constructor</strong>)\n\u00a0\u00a0\u00a0 System.out.println(myObj.x); // Print the value of x\n\u00a0 }\n}\n\n// Outputs 5\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_constructor\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p>Note that the constructor name must <strong>match the class name</strong>, and it cannot have a \n<strong>return type</strong> (like <code class=\"w3-codespan\">void</code>). </p>\n<p>Also note that the constructor is called when the object is created.</p>\n<p>All classes have constructors by default: if you do not create a class constructor \nyourself, Java creates one for you. However, then you are not able to set initial values for object attributes.</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Constructor Parameters": "<p>Constructors can also take parameters, which is used to initialize \nattributes.</p><p>The following example adds an <code class=\"w3-codespan\">int y</code> parameter \nto the constructor. \nInside the constructor we set x to y (x=y). When we call \nthe constructor, we pass a parameter to the constructor (5), which will set the value of \nx to 5:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>public class Main {\n\u00a0 int x;\n\n\u00a0 public Main(int y) {\n\u00a0\u00a0\u00a0 x = y;\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main(5);\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n\n// Outputs 5\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_constructor_para\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>You can have as many parameters as you want:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"5\"><code>public class Main {\n\u00a0 int modelYear;\n\u00a0 String modelName;\n\n\u00a0 public Main(int year, String name) {\n\u00a0\u00a0\u00a0 modelYear = year;\n\u00a0\u00a0\u00a0 modelName = name;\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myCar = new Main(1969, \"Mustang\");\n\u00a0\u00a0\u00a0 System.out.println(myCar.modelYear + \" \" + myCar.modelName);\n\u00a0 }\n}\n\n// Outputs 1969 Mustang\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_constructor_para2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_class_methods.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_modifiers.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_constructors.asp"
    },
    {
      "Java Modifiers": {
        "examples": [
          "<div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code><strong>public</strong> class Main\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2,3\"><code>public class Main {\n\u00a0 <strong>final</strong> int x = 10;\n\u00a0 <strong>final</strong> double PI = 3.14;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 myObj.x = 50; // will generate an error: cannot assign a value to a <strong>final</strong> variable\n\u00a0\u00a0\u00a0 myObj.PI = 25; // will generate an error: cannot assign a value to a <strong>final</strong> variable\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_mod_final2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>An example to demonstrate the differences between <code class=\"w3-codespan\">static</code> and <code class=\"w3-codespan\">public</code> methods:</p>\n<pre class=\"language-java w3-white\" data-line=\"3,8\"><code>public class Main {\n\u00a0 // Static method\n\u00a0 static void myStaticMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Static methods can be called without creating objects\");\n\u00a0 }\n\n\u00a0 // Public method\n\u00a0 public void myPublicMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Public methods must be called by creating objects\");\n\u00a0 }\n\n\u00a0 // Main method\n\u00a0 public static void main(String[ ] args) {\n\u00a0\u00a0\u00a0 myStaticMethod(); // Call the static method\n\u00a0\u00a0\u00a0 // myPublicMethod(); This would output an error\n\n\u00a0\u00a0\u00a0 Main myObj = new Main(); // Create an object of Main\n\u00a0\u00a0\u00a0 myObj.myPublicMethod(); // Call the public method\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_method_static\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"3,6,12\"><code>// Code from filename: Main.java\n// abstract class<br/>abstract class Main {\n\u00a0 public String fname = \"John\";\n\u00a0 public int age = 24;\n\u00a0 public <strong>abstract</strong> void study(); // abstract method\n}\n\n// Subclass (inherit from Main)\nclass Student extends Main {\n\u00a0 public int graduationYear = 2018;\n\u00a0 public void study() { // the body of the abstract method is provided here\n\u00a0\u00a0\u00a0 System.out.println(\"Studying all day long\");\n\u00a0 }\n}\n// End code from filename: Main.java\n\n// Code from filename: Second.java\nclass Second {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 // create an object of the Student class (which inherits attributes and methods from Main)\n\u00a0\u00a0\u00a0 Student myObj = new Student();\n\n\u00a0\u00a0\u00a0 System.out.println(\"Name: \" + myObj.fname);\n\u00a0\u00a0\u00a0 System.out.println(\"Age: \" + myObj.age);\n\u00a0\u00a0\u00a0 System.out.println(\"Graduation Year: \" + myObj.graduationYear);\n\u00a0\u00a0\u00a0 myObj.study(); // call abstract method<br/>\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava_multi.asp?filename=demo_mod_abstract_o&amp;multi=demo_mod_abstract_o_multi\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Modifiers": "<p>By now, you are quite familiar with the <code class=\"w3-codespan\">public</code> keyword that appears in almost \nall of our examples:</p><div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code><strong>public</strong> class Main\n</code></pre>\n</div><p>The <code class=\"w3-codespan\">public</code> keyword is an <strong>access modifier</strong>, \nmeaning that it is used to set the access level for classes, attributes, methods and \nconstructors.</p><p>We divide modifiers into two groups:</p><ul>\n<li><strong>Access Modifiers</strong> - controls the access level</li>\n<li><strong>Non-Access Modifiers</strong> - do not control access level, but provides other functionality</li>\n</ul><hr/>",
        "Access Modifiers": "<p>For <strong>classes</strong>, you can use either <code class=\"w3-codespan\">public</code> or <em>default</em>:</p><div class=\"w3-responsive\" style=\"margin:-16px 0;\">\n<table class=\"ws-table-all notranslate\">\n<tbody>\n<tr>\n<th style=\"width:20%\">Modifier</th>\n<th style=\"width:70%\">Description</th>\n<th style=\"width:10%\">Try it</th>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">public</code></td>\n<td>The class is accessible by any other class</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_mod_public\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td><em>default</em></td>\n<td>The class is only accessible by \nclasses in the same package. This is used when you don't specify a modifier. You will learn more about packages in the <a href=\"java_packages.asp\">Packages chapter</a></td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_mod_default\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</tbody>\n</table>\n</div><p>For <strong>attributes, methods and constructors</strong>, you can use the one of the \nfollowing:</p><div class=\"w3-responsive\" style=\"margin:-16px 0;\">\n<table class=\"ws-table-all notranslate\">\n<tbody>\n<tr>\n<th style=\"width:20%\">Modifier</th>\n<th style=\"width:70%\">Description</th>\n<th style=\"width:10%\">Try it</th>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">public</code></td>\n<td>The code is accessible for all classes</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava_multi.asp?filename=demo_mod_public2&amp;multi=demo_mod_public2_multi\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">private</code></td>\n<td>The code is only accessible within the declared class</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_access_mod\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td><em>default</em></td>\n<td>The code is only accessible in the same package. This is used when you don't specify a modifier. You will learn more about packages in the <a href=\"java_packages.asp\">Packages chapter</a></td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_mod_default2\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">protected</code></td>\n<td>The code is accessible in the same package and <strong>subclasses</strong>. You will learn more about subclasses and \nsuperclasses in the <a href=\"java_inheritance.asp\">Inheritance chapter</a></td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_mod_protected\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</tbody>\n</table>\n</div><hr/><h2>Private Attributes</h2>\n<p>It is recommended (and secure) to declare variables as <code class=\"w3-codespan\">private</code> (only accessible within the declared class):</p>\n<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Declare attributes as private:</p>\n<div class=\"w3-code notranslate javaHigh\">\n  public class Person {<br>&nbsp; private String fname = &quot;John&quot;;<br>&nbsp; \n  private String lname = &quot;Doe&quot;;<br>&nbsp; private String email = &quot;john@doe.com&quot;;<br>&nbsp; \n  private int age = 24;<br><br>&nbsp; public static void main(String[] args) {<br>&nbsp;&nbsp;&nbsp; \n  Person myObj = new Person();<br>&nbsp;&nbsp;&nbsp; System.out.println(&quot;Name: &quot; \n  + myObj.fname + &quot; &quot; + myObj.lname);<br>&nbsp;&nbsp;&nbsp; \n  System.out.println(&quot;Email: &quot; + myObj.email);<br>&nbsp;&nbsp;&nbsp; \n  System.out.println(&quot;Age: &quot; + myObj.age);<br>&nbsp; }<br>}</div>\n<a target=\"_blank\" class=\"w3-btn\" href=\"tryjava.asp?filename=demo_access_mod\">Try it Yourself &raquo;</a>\n</div>\n<hr>",
        "Non-Access Modifiers": "<p>For <strong>classes</strong>, you can use either <code class=\"w3-codespan\">final</code> or <code class=\"w3-codespan\">abstract</code>:</p><div class=\"w3-responsive\" style=\"margin:-16px 0;\">\n<table class=\"ws-table-all notranslate\">\n<tbody>\n<tr>\n<th style=\"width:20%\">Modifier</th>\n<th style=\"width:70%\">Description</th>\n<th style=\"width:10%\">Try it</th>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">final</code></td>\n<td>The class cannot be inherited by other classes (You will learn more about inheritance in the <a href=\"java_inheritance.asp\">Inheritance chapter</a>)</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_inherit_final\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">abstract</code></td>\n<td>The class cannot be used to create objects (To access an abstract class, it must be inherited from another class. You will learn more about inheritance and abstraction in the <a href=\"java_inheritance.asp\">Inheritance</a> and <a href=\"java_abstract.asp\">Abstraction</a> chapters)</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava_multi.asp?filename=demo_mod_abstract&amp;multi=demo_mod_abstract_multi\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</tbody>\n</table>\n</div><p>For <strong>attributes and methods</strong>, you can use the one of the \nfollowing:</p><div class=\"w3-responsive\" style=\"margin:-16px 0;\">\n<table class=\"ws-table-all notranslate\">\n<tbody>\n<tr>\n<th style=\"width:20%\">Modifier</th>\n<th style=\"width:80%\">Description</th>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">final</code></td>\n<td>Attributes and methods cannot be overridden/modified</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">static</code></td>\n<td>Attributes and methods belongs to the class, rather than an object</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">abstract</code></td>\n<td>Can only be used in an abstract class, and can only be used on methods. The method does not have a body, for example \n<strong>abstract void run();</strong>. The body is provided by the \nsubclass (inherited from). You will learn more about inheritance and abstraction in the <a href=\"java_inheritance.asp\">Inheritance</a> and <a href=\"java_abstract.asp\">Abstraction</a> chapters</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">transient</code></td>\n<td>Attributes and methods are skipped when serializing the object containing them</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">synchronized</code></td>\n<td>Methods can only be accessed by one thread at a time</td>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">volatile</code></td>\n<td>The value of an attribute is not cached thread-locally, and is always read from the \"main memory\"</td>\n</tr>\n</tbody>\n</table>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Final": "<p>If you don't want the ability to override existing attribute values, declare \nattributes as <code class=\"w3-codespan\">final</code>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2,3\"><code>public class Main {\n\u00a0 <strong>final</strong> int x = 10;\n\u00a0 <strong>final</strong> double PI = 3.14;\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Main myObj = new Main();\n\u00a0\u00a0\u00a0 myObj.x = 50; // will generate an error: cannot assign a value to a <strong>final</strong> variable\n\u00a0\u00a0\u00a0 myObj.PI = 25; // will generate an error: cannot assign a value to a <strong>final</strong> variable\n\u00a0\u00a0\u00a0 System.out.println(myObj.x);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_mod_final2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Static": "<p>A <code class=\"w3-codespan\">static</code> method means that it can be \naccessed without creating an object of the class, unlike <code class=\"w3-codespan\">public</code>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>An example to demonstrate the differences between <code class=\"w3-codespan\">static</code> and <code class=\"w3-codespan\">public</code> methods:</p>\n<pre class=\"language-java w3-white\" data-line=\"3,8\"><code>public class Main {\n\u00a0 // Static method\n\u00a0 static void myStaticMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Static methods can be called without creating objects\");\n\u00a0 }\n\n\u00a0 // Public method\n\u00a0 public void myPublicMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Public methods must be called by creating objects\");\n\u00a0 }\n\n\u00a0 // Main method\n\u00a0 public static void main(String[ ] args) {\n\u00a0\u00a0\u00a0 myStaticMethod(); // Call the static method\n\u00a0\u00a0\u00a0 // myPublicMethod(); This would output an error\n\n\u00a0\u00a0\u00a0 Main myObj = new Main(); // Create an object of Main\n\u00a0\u00a0\u00a0 myObj.myPublicMethod(); // Call the public method\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_method_static\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Abstract": "<p>An <code class=\"w3-codespan\">abstract</code> method belongs to an <code class=\"w3-codespan\">abstract</code> class, and it does not have a body. \nThe body is provided by the subclass:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"3,6,12\"><code>// Code from filename: Main.java\n// abstract class<br/>abstract class Main {\n\u00a0 public String fname = \"John\";\n\u00a0 public int age = 24;\n\u00a0 public <strong>abstract</strong> void study(); // abstract method\n}\n\n// Subclass (inherit from Main)\nclass Student extends Main {\n\u00a0 public int graduationYear = 2018;\n\u00a0 public void study() { // the body of the abstract method is provided here\n\u00a0\u00a0\u00a0 System.out.println(\"Studying all day long\");\n\u00a0 }\n}\n// End code from filename: Main.java\n\n// Code from filename: Second.java\nclass Second {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 // create an object of the Student class (which inherits attributes and methods from Main)\n\u00a0\u00a0\u00a0 Student myObj = new Student();\n\n\u00a0\u00a0\u00a0 System.out.println(\"Name: \" + myObj.fname);\n\u00a0\u00a0\u00a0 System.out.println(\"Age: \" + myObj.age);\n\u00a0\u00a0\u00a0 System.out.println(\"Graduation Year: \" + myObj.graduationYear);\n\u00a0\u00a0\u00a0 myObj.study(); // call abstract method<br/>\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava_multi.asp?filename=demo_mod_abstract_o&amp;multi=demo_mod_abstract_o_multi\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_constructors.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_encapsulation.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_modifiers.asp"
    },
    {
      "Java Encapsulation": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"5,10\"><code>public class Person {\n\u00a0 private String name; // private = restricted access\n\n\u00a0 // Getter\n\u00a0 public String getName() {\n\u00a0\u00a0\u00a0 return name;\n\u00a0 }\n\n\u00a0 // Setter\n\u00a0 public void setName(String newName) {\n\u00a0\u00a0\u00a0 this.name = newName;\n\u00a0 }\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example w3-pale-red\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Person myObj = new Person();\n\u00a0\u00a0\u00a0 myObj.name = \"John\";\u00a0 // error\n\u00a0\u00a0\u00a0 System.out.println(myObj.name); // error\u00a0\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava_classes.asp?filename=demo_getset_error\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nJohn\n</code>\n</div>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nMyClass.java:4: error: name has private access in Person<br/>\n\u00a0\u00a0\u00a0\u00a0myObj.name = \"John\";<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0^<br/>\nMyClass.java:5: error: name has private access in Person<br/>\n\u00a0\u00a0\u00a0\u00a0System.out.println(myObj.name);<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0^<br/>\n2 errors\n</code>\n</div>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4,5\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Person myObj = new Person();\n\u00a0\u00a0\u00a0 myObj.setName(\"John\"); // Set the value of the name variable to \"John\"\n\u00a0\u00a0\u00a0 System.out.println(myObj.getName());\n\u00a0 }\n}\n\n// Outputs \"John\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava_classes.asp?filename=demo_getset\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Encapsulation": "<p>The meaning of <strong>Encapsulation</strong>, is to make sure that \"sensitive\" data is hidden \nfrom users. To achieve this, you must:\n<ul>\n<li>declare class variables/attributes as <code class=\"w3-codespan\">private</code></li>\n<li>provide public <strong>get</strong> \nand <strong>set</strong> methods to access and update the value of a <code class=\"w3-codespan\">private</code> \nvariable</li>\n</ul>\n<hr/>\n<h2>Get and Set</h2>\n<p>You learned from the previous chapter that <code class=\"w3-codespan\">private</code> variables can only be \naccessed within the same class (an outside class has no access to it). However, \nit is possible to access them if we provide public <strong>get</strong> and <strong>set</strong> methods.</p>\n<p>The <code class=\"w3-codespan\">get</code> method returns the variable value, and the <code class=\"w3-codespan\">set</code> method sets the value.</p>\n<p>Syntax for both is that they start with either <code class=\"w3-codespan\">get</code> or <code class=\"w3-codespan\">set</code>, followed by the \nname of the variable, with the first letter in upper case:</p>\n<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"5,10\"><code>public class Person {\n\u00a0 private String name; // private = restricted access\n\n\u00a0 // Getter\n\u00a0 public String getName() {\n\u00a0\u00a0\u00a0 return name;\n\u00a0 }\n\n\u00a0 // Setter\n\u00a0 public void setName(String newName) {\n\u00a0\u00a0\u00a0 this.name = newName;\n\u00a0 }\n}\n</code></pre>\n</div>\n<h4>Example explained</h4>\n<p>The <code class=\"w3-codespan\">get</code> method returns the value of the variable <code class=\"w3-codespan\">name</code>.</p>\n<p>The <code class=\"w3-codespan\">set</code> method takes a parameter (<code class=\"w3-codespan\">newName</code>) and assigns it to the\n<code class=\"w3-codespan\">name</code> variable. The <code class=\"w3-codespan\">this</code> keyword is used to refer to the current \nobject.</p>\n<p>However, as the <code class=\"w3-codespan\">name</code> variable is declared as <code class=\"w3-codespan\">private</code>, we \n<strong>cannot</strong> access it from outside this class:</p>\n<div class=\"w3-example w3-pale-red\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Person myObj = new Person();\n\u00a0\u00a0\u00a0 myObj.name = \"John\";\u00a0 // error\n\u00a0\u00a0\u00a0 System.out.println(myObj.name); // error\u00a0\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava_classes.asp?filename=demo_getset_error\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div>\n<p>If the variable was declared as <code class=\"w3-codespan\">public</code>, we would expect the following output:</p>\n<div class=\"w3-example\">\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nJohn\n</code>\n</div>\n</div>\n<p>However, as we try to access a <code class=\"w3-codespan\">private</code> variable, we get an error:</p>\n<div class=\"w3-example\">\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nMyClass.java:4: error: name has private access in Person<br/>\n\u00a0\u00a0\u00a0\u00a0myObj.name = \"John\";<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0^<br/>\nMyClass.java:5: error: name has private access in Person<br/>\n\u00a0\u00a0\u00a0\u00a0System.out.println(myObj.name);<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0^<br/>\n2 errors\n</code>\n</div>\n</div>\n<p>Instead, we use the <code class=\"w3-codespan\">getName()</code> and <code class=\"w3-codespan\">setName()</code> methods to access and update the variable:</p>\n<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4,5\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Person myObj = new Person();\n\u00a0\u00a0\u00a0 myObj.setName(\"John\"); // Set the value of the name variable to \"John\"\n\u00a0\u00a0\u00a0 System.out.println(myObj.getName());\n\u00a0 }\n}\n\n// Outputs \"John\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava_classes.asp?filename=demo_getset\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>\n<hr/>\n<h2>Why Encapsulation?</h2>\n<ul>\n<li>Better control of class attributes and methods</li>\n<li>Class attributes can be made <strong>read-only</strong> (if you only use the <code class=\"w3-codespan\">get</code> method), or <strong>write-only</strong> (if you only use the <code class=\"w3-codespan\">set</code> method)</li>\n<li>Flexible: the programmer can change one part of the code without affecting other parts</li>\n<li>Increased security of data</li>\n</ul>\n<br/>\n<div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_modifiers.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_packages.asp\">Next \u276f</a>\n</div>\n<div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>\n</p>",
        "Get and Set": "<p>You learned from the previous chapter that <code class=\"w3-codespan\">private</code> variables can only be \naccessed within the same class (an outside class has no access to it). However, \nit is possible to access them if we provide public <strong>get</strong> and <strong>set</strong> methods.</p><p>The <code class=\"w3-codespan\">get</code> method returns the variable value, and the <code class=\"w3-codespan\">set</code> method sets the value.</p><p>Syntax for both is that they start with either <code class=\"w3-codespan\">get</code> or <code class=\"w3-codespan\">set</code>, followed by the \nname of the variable, with the first letter in upper case:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"5,10\"><code>public class Person {\n\u00a0 private String name; // private = restricted access\n\n\u00a0 // Getter\n\u00a0 public String getName() {\n\u00a0\u00a0\u00a0 return name;\n\u00a0 }\n\n\u00a0 // Setter\n\u00a0 public void setName(String newName) {\n\u00a0\u00a0\u00a0 this.name = newName;\n\u00a0 }\n}\n</code></pre>\n</div><h4>Example explained</h4><p>The <code class=\"w3-codespan\">get</code> method returns the value of the variable <code class=\"w3-codespan\">name</code>.</p><p>The <code class=\"w3-codespan\">set</code> method takes a parameter (<code class=\"w3-codespan\">newName</code>) and assigns it to the\n<code class=\"w3-codespan\">name</code> variable. The <code class=\"w3-codespan\">this</code> keyword is used to refer to the current \nobject.</p><p>However, as the <code class=\"w3-codespan\">name</code> variable is declared as <code class=\"w3-codespan\">private</code>, we \n<strong>cannot</strong> access it from outside this class:</p><div class=\"w3-example w3-pale-red\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Person myObj = new Person();\n\u00a0\u00a0\u00a0 myObj.name = \"John\";\u00a0 // error\n\u00a0\u00a0\u00a0 System.out.println(myObj.name); // error\u00a0\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava_classes.asp?filename=demo_getset_error\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div><p>If the variable was declared as <code class=\"w3-codespan\">public</code>, we would expect the following output:</p><div class=\"w3-example\">\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nJohn\n</code>\n</div>\n</div><p>However, as we try to access a <code class=\"w3-codespan\">private</code> variable, we get an error:</p><div class=\"w3-example\">\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nMyClass.java:4: error: name has private access in Person<br/>\n\u00a0\u00a0\u00a0\u00a0myObj.name = \"John\";<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0^<br/>\nMyClass.java:5: error: name has private access in Person<br/>\n\u00a0\u00a0\u00a0\u00a0System.out.println(myObj.name);<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0^<br/>\n2 errors\n</code>\n</div>\n</div><p>Instead, we use the <code class=\"w3-codespan\">getName()</code> and <code class=\"w3-codespan\">setName()</code> methods to access and update the variable:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4,5\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Person myObj = new Person();\n\u00a0\u00a0\u00a0 myObj.setName(\"John\"); // Set the value of the name variable to \"John\"\n\u00a0\u00a0\u00a0 System.out.println(myObj.getName());\n\u00a0 }\n}\n\n// Outputs \"John\"\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava_classes.asp?filename=demo_getset\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Why Encapsulation?": "<ul>\n<li>Better control of class attributes and methods</li>\n<li>Class attributes can be made <strong>read-only</strong> (if you only use the <code class=\"w3-codespan\">get</code> method), or <strong>write-only</strong> (if you only use the <code class=\"w3-codespan\">set</code> method)</li>\n<li>Flexible: the programmer can change one part of the code without affecting other parts</li>\n<li>Increased security of data</li>\n</ul><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_modifiers.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_packages.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_encapsulation.asp"
    },
    {
      "Java Packages / API": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>import <em>package</em>.<em>name</em>.<em>Class</em>;   // Import a single class\nimport <em>package</em>.<em>name</em>.*;   // Import the whole package\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.util.Scanner;\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Using the <code class=\"w3-codespan\">Scanner</code> class to get user input:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.Scanner;\n\nclass MyClass {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Scanner myObj = new Scanner(System.in);\n\u00a0\u00a0\u00a0 System.out.println(\"Enter username\");\n\n\u00a0\u00a0\u00a0 String userName = myObj.nextLine();\n\u00a0\u00a0\u00a0 System.out.println(\"Username is: \" + userName);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_api_scanner\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.util.*;\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_api_scanner_package\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<div class=\"w3-white notranslate javaHigh w3-margin-bottom\" style=\"padding:1px 16px\">\n<pre>\n\u2514\u2500\u2500 root\n  \u2514\u2500\u2500 mypack\n    \u2514\u2500\u2500 MyPackageClass.java\n</pre>\n</div>\n</div>",
          "<div class=\"w3-example\">\n<h3>MyPackageClass.java</h3>\n<pre class=\"language-java w3-white\"><code>package mypack;\nclass MyPackageClass {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(\"This is my package!\");\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_package\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;javac MyPackageClass.java\n</div>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;javac -d . MyPackageClass.java</div>\n</div>",
          "<div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java mypack.MyPackageClass\n</div>\n</div>",
          "<div class=\"w3-example w3-padding-16\">\n<div class=\"w3-padding notranslate w3-black\">\n<code class=\"notranslate\">\nThis is my package!\n</code>\n</div>\n</div>"
        ],
        "Java Packages & API": "<p>A package in Java is used to group related classes. Think of it as\n<strong>a folder in a file directory</strong>. We use packages to avoid name conflicts, and \nto write a better maintainable code. Packages are divided into two categories:</p><ul>\n<li>Built-in Packages (packages from the Java API)</li>\n<li>User-defined Packages (create your own packages)</li>\n</ul><hr/>",
        "Built-in Packages": "<p>The Java API is a library of prewritten classes, that are free to use, included in the\nJava Development Environment.</p><p>The library contains components for managing input, database programming, and much much \nmore. The complete list can be found at Oracles website: <a href=\"https://docs.oracle.com/javase/8/docs/api/\" target=\"_blank\">https://docs.oracle.com/javase/8/docs/api/</a>.</p><p>The library is divided into <strong>packages</strong> and <strong>classes</strong>. \nMeaning you can either import a single class (along with its methods and \nattributes), or a whole package that contain \nall the classes that belong to the specified package.</p><p>To use a class or a package from the library, you need to use the <code class=\"w3-codespan\">import</code> \nkeyword:</p><div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>import <em>package</em>.<em>name</em>.<em>Class</em>;   // Import a single class\nimport <em>package</em>.<em>name</em>.*;   // Import the whole package\n</code></pre>\n</div><hr/>",
        "Import a Class": "<p>If you find a class you want to use, for example, the <code class=\"w3-codespan\">Scanner</code> class, <strong>which is used to get \nuser input</strong>, write the following code:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.util.Scanner;\n</code></pre>\n</div><p>In the example above, <code class=\"w3-codespan\">java.util</code> is a package, while <code class=\"w3-codespan\">Scanner</code> is a class of \nthe <code class=\"w3-codespan\">java.util</code> package.</p><p>To use the <code class=\"w3-codespan\">Scanner</code> class, create an object of the class and use any of the available methods found in the <code class=\"w3-codespan\">Scanner</code> class documentation. \nIn our example, we will use the <code class=\"w3-codespan\">nextLine()</code> method, which is used to read a \ncomplete line:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Using the <code class=\"w3-codespan\">Scanner</code> class to get user input:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.Scanner;\n\nclass MyClass {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Scanner myObj = new Scanner(System.in);\n\u00a0\u00a0\u00a0 System.out.println(\"Enter username\");\n\n\u00a0\u00a0\u00a0 String userName = myObj.nextLine();\n\u00a0\u00a0\u00a0 System.out.println(\"Username is: \" + userName);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_api_scanner\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"div-gpt-ad-1493883843099-0\" style=\"display: inline-block\">\n<script>\n    uic_r_g();\n    </script>\n</div>\n</div><hr/>",
        "Import a Package": "<p>There are many packages to choose from. In the previous example, we used the <code class=\"w3-codespan\">Scanner</code> class from the <code class=\"w3-codespan\">java.util</code> package. This package also contains date and time \nfacilities, random-number generator and other utility classes.</p><p>To import a whole package, end the sentence with an asterisk sign (<code class=\"w3-codespan\">*</code>). \nThe following example \nwill import ALL the classes in the <code class=\"w3-codespan\">java.util</code> package:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.util.*;\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_api_scanner_package\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div><hr/>",
        "User-defined Packages": "<p>To create your own package, you need to understand that Java uses a file system directory to store them. Just like folders on your computer:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<div class=\"w3-white notranslate javaHigh w3-margin-bottom\" style=\"padding:1px 16px\">\n<pre>\n\u2514\u2500\u2500 root\n  \u2514\u2500\u2500 mypack\n    \u2514\u2500\u2500 MyPackageClass.java\n</pre>\n</div>\n</div><p>To create a package, use the <code class=\"w3-codespan\">package</code> keyword:</p><div class=\"w3-example\">\n<h3>MyPackageClass.java</h3>\n<pre class=\"language-java w3-white\"><code>package mypack;\nclass MyPackageClass {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 System.out.println(\"This is my package!\");\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_package\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div><p>Save the file as <b>MyPackageClass.java</b>, and compile it:</p><div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;javac MyPackageClass.java\n</div>\n</div><p>Then compile the package:</p><div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;javac -d . MyPackageClass.java</div>\n</div><div class=\"w3-note w3-panel\">\n<p>This forces the compiler to create the \"mypack\" package.</p>\n<p>The <code class=\"w3-codespan\">-d</code> keyword specifies the destination for where to save the class file. You \n  can use any directory name, like c:/user (windows), or, if you want to keep \n  the package within the same directory, you can use the dot sign \"<code class=\"w3-codespan\">.</code>\", like in \n  the example above.</p>\n<p><strong>Note:</strong> The package name should be written in lower case to avoid conflict with class names.</p>\n</div><p>When we compiled the package in the example above, a new folder was created, called \"mypack\".</p><p>To run the <b>MyPackageClass.java</b> file, write the following:</p><div class=\"w3-example\">\n<div class=\"w3-code notranslate w3-black\">\nC:\\Users\\<em>Your Name</em>&gt;java mypack.MyPackageClass\n</div>\n</div><p>The output will be:</p><div class=\"w3-example w3-padding-16\">\n<div class=\"w3-padding notranslate w3-black\">\n<code class=\"notranslate\">\nThis is my package!\n</code>\n</div>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_encapsulation.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_inheritance.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_packages.asp"
    },
    {
      "Java Inheritance": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"8\"><code>class Vehicle {\n\u00a0 protected String brand = \"Ford\";\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 // Vehicle attribute\n\u00a0 public void honk() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Vehicle method\n\u00a0\u00a0\u00a0 System.out.println(\"Tuut, tuut!\");\n\u00a0 }\n}\n\nclass Car extends Vehicle {\n\u00a0 private String modelName = \"Mustang\";\u00a0\u00a0\u00a0 // Car attribute\n\u00a0 public static void main(String[] args) {\n\n\u00a0\u00a0\u00a0 // Create a myCar object\n\u00a0\u00a0\u00a0 Car myCar = new Car();\n\n\u00a0\u00a0\u00a0 // Call the honk() method (from the Vehicle class) on the myCar object\n\u00a0\u00a0\u00a0 myCar.honk();\n\n\u00a0\u00a0\u00a0 // Display the value of the brand attribute (from the Vehicle class) and the value of the modelName from the Car class\n\u00a0\u00a0\u00a0 System.out.println(myCar.brand + \" \" + myCar.modelName);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_inherit\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example w3-pale-red\">\n<p>If you try to access a <code class=\"w3-codespan\">final</code> class, Java will generate an error:</p>\n<pre class=\"language-java w3-white w3-border-red\"><code>final class Vehicle {\n  ...\n}\n\nclass Car extends Vehicle {\n  ...\n}\n</code></pre>\n<p>The output will be something like this:</p>\n<div class=\"w3-padding notranslate w3-black\">\n<code>\n  Main.java:9: error: cannot inherit from final Vehicle<br/>class Main extends \n  Vehicle {\n  <br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0^\n  <br/>1 error)\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_inherit_final\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>"
        ],
        "Java Inheritance (Subclass and Superclass)": "<p>In Java, it is possible to inherit attributes and methods from one class to another. We group the \"inheritance concept\" into two categories:</p><ul>\n<li><strong>subclass</strong> (child) - the class that inherits from another class</li>\n<li><strong>superclass</strong> (parent) - the class being inherited from</li>\n</ul><p>To inherit from a class, use the <code class=\"w3-codespan\">extends</code> \nkeyword.</p><p>In the example below, the <code class=\"w3-codespan\">Car</code> class \n(subclass) inherits the attributes and methods from the <code class=\"w3-codespan\">Vehicle</code> class \n(superclass):</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"8\"><code>class Vehicle {\n\u00a0 protected String brand = \"Ford\";\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 // Vehicle attribute\n\u00a0 public void honk() {\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Vehicle method\n\u00a0\u00a0\u00a0 System.out.println(\"Tuut, tuut!\");\n\u00a0 }\n}\n\nclass Car extends Vehicle {\n\u00a0 private String modelName = \"Mustang\";\u00a0\u00a0\u00a0 // Car attribute\n\u00a0 public static void main(String[] args) {\n\n\u00a0\u00a0\u00a0 // Create a myCar object\n\u00a0\u00a0\u00a0 Car myCar = new Car();\n\n\u00a0\u00a0\u00a0 // Call the honk() method (from the Vehicle class) on the myCar object\n\u00a0\u00a0\u00a0 myCar.honk();\n\n\u00a0\u00a0\u00a0 // Display the value of the brand attribute (from the Vehicle class) and the value of the modelName from the Car class\n\u00a0\u00a0\u00a0 System.out.println(myCar.brand + \" \" + myCar.modelName);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_inherit\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p>Did you notice the <code class=\"w3-codespan\">protected</code> modifier in Vehicle?</p>\n<p>We set the <strong>brand</strong> attribute in <strong>Vehicle</strong> to a <code class=\"w3-codespan\">protected</code> <a href=\"java_modifiers.asp\">access \nmodifier</a>. If it was set to <code class=\"w3-codespan\">private</code>, the Car class would not be able to access \nit.</p>\n<h4>Why And When To Use \"Inheritance\"?</h4>\n<p>- It is useful for code reusability: reuse attributes and methods of an existing class when you create a new class.</p>\n<p><strong>Tip:</strong> Also take a look at the next chapter, <a href=\"java_polymorphism.asp\">Polymorphism</a>, which uses inherited methods to perform different tasks.</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "The final Keyword": "<p>If you don't want other classes to inherit from a class, use the <code class=\"w3-codespan\">final</code> keyword:</p><div class=\"w3-example w3-pale-red\">\n<p>If you try to access a <code class=\"w3-codespan\">final</code> class, Java will generate an error:</p>\n<pre class=\"language-java w3-white w3-border-red\"><code>final class Vehicle {\n  ...\n}\n\nclass Car extends Vehicle {\n  ...\n}\n</code></pre>\n<p>The output will be something like this:</p>\n<div class=\"w3-padding notranslate w3-black\">\n<code>\n  Main.java:9: error: cannot inherit from final Vehicle<br/>class Main extends \n  Vehicle {\n  <br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0^\n  <br/>1 error)\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_inherit_final\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_packages.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_polymorphism.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_inheritance.asp"
    },
    {
      "Java Polymorphism": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>class Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The animal makes a sound\");\n\u00a0 }\n}\n\nclass Pig extends Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The pig says: wee wee\");\n\u00a0 }\n}\n\nclass Dog extends Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The dog says: bow wow\");\n\u00a0 }\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>class Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The animal makes a sound\");\n\u00a0 }\n}\n\nclass Pig extends Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The pig says: wee wee\");\n\u00a0 }\n}\n\nclass Dog extends Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The dog says: bow wow\");\n\u00a0 }\n}\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Animal myAnimal = new Animal();\u00a0 // Create a Animal object\n\u00a0\u00a0\u00a0 Animal myPig = new Pig();\u00a0 // Create a Pig object\n\u00a0\u00a0\u00a0 Animal myDog = new Dog();\u00a0 // Create a Dog object\n\u00a0\u00a0\u00a0 myAnimal.animalSound();\n\u00a0\u00a0\u00a0 myPig.animalSound();\n\u00a0\u00a0\u00a0 myDog.animalSound();\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_polymorphism\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Polymorphism": "<p>Polymorphism means \"many forms\", and it occurs when we have many classes that are related to each other by inheritance.</p><p>Like we specified in the previous chapter; \n<a href=\"java_inheritance.asp\"><strong>Inheritance</strong></a> lets us \ninherit attributes and methods from another class. <strong>Polymorphism</strong> \nuses those methods to perform different tasks. This allows us to perform a single \naction in different ways.</p><p>For example, think of a superclass called <code class=\"w3-codespan\">Animal</code> that has a method called <code class=\"w3-codespan\">animalSound()</code>. Subclasses of Animals could be Pigs, Cats, Dogs, Birds - And they also have their own implementation of an animal sound (the pig oinks, and the cat meows, etc.):</p><p>In the following example, we create an Animal class with an animalSound() \nmethod. Then we create two subclasses of the Animal: Pig and Cat that inherit \nfrom the Animal class. The subclasses also have their own implementation of the \nanimalSound() method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>class Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The animal makes a sound\");\n\u00a0 }\n}\n\nclass Pig extends Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The pig says: wee wee\");\n\u00a0 }\n}\n\nclass Dog extends Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The dog says: bow wow\");\n\u00a0 }\n}\n</code></pre>\n</div><div class=\"w3-note w3-panel\">\n<p>Remember from the <a href=\"java_inheritance.asp\">Inheritance chapter</a> that we use the <code class=\"w3-codespan\">extends</code> keyword to inherit from a class.</p>\n</div><p>Now we can create <code class=\"w3-codespan\">Pig</code> and <code class=\"w3-codespan\">\nDog</code> objects and call the <code class=\"w3-codespan\">animalSound()</code> method on both of them:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>class Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The animal makes a sound\");\n\u00a0 }\n}\n\nclass Pig extends Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The pig says: wee wee\");\n\u00a0 }\n}\n\nclass Dog extends Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 System.out.println(\"The dog says: bow wow\");\n\u00a0 }\n}\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Animal myAnimal = new Animal();\u00a0 // Create a Animal object\n\u00a0\u00a0\u00a0 Animal myPig = new Pig();\u00a0 // Create a Pig object\n\u00a0\u00a0\u00a0 Animal myDog = new Dog();\u00a0 // Create a Dog object\n\u00a0\u00a0\u00a0 myAnimal.animalSound();\n\u00a0\u00a0\u00a0 myPig.animalSound();\n\u00a0\u00a0\u00a0 myDog.animalSound();\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_polymorphism\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<h4>Why And When To Use \"Inheritance\" and \"Polymorphism\"?</h4>\n<p>- It is useful for code reusability: reuse attributes and methods of an existing class when you create a new class.</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_inheritance.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_inner_classes.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_polymorphism.asp"
    },
    {
      "Java Inner Classes": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>class OuterClass {\n\u00a0 int x = 10;\n\n\u00a0 class InnerClass {\n\u00a0\u00a0\u00a0 int y = 5;\n\u00a0 }\n}\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 OuterClass myOuter = new OuterClass();\n\u00a0\u00a0\u00a0 OuterClass.InnerClass myInner = myOuter.new InnerClass();\n\u00a0\u00a0\u00a0 System.out.println(myInner.y + myOuter.x);\n\u00a0 }\n}\n\n// Outputs 15 (5 + 10)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_inner\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>class OuterClass {\n\u00a0 int x = 10;\n\n\u00a0 <strong>private</strong> class InnerClass {\n\u00a0\u00a0\u00a0 int y = 5;\n\u00a0 }\n}\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 OuterClass myOuter = new OuterClass();\n\u00a0\u00a0\u00a0 OuterClass.InnerClass myInner = myOuter.new InnerClass();\n\u00a0\u00a0\u00a0 System.out.println(myInner.y + myOuter.x);\n\u00a0 }\n}\n</code></pre>\n<p>If you try to access a private inner class from an outside class, an error occurs:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top\">\n<code>\n  Main.java:13: error: OuterClass.InnerClass has private access in OuterClass<br/>\n\u00a0\u00a0\u00a0\u00a0OuterClass.InnerClass myInner = myOuter.new InnerClass();<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0^\n</code>\n</div>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_inner2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>class OuterClass {\n\u00a0 int x = 10;\n\n\u00a0 static class InnerClass {\n\u00a0\u00a0\u00a0 int y = 5;\n\u00a0 }\n}\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 OuterClass.InnerClass myInner = new OuterClass.InnerClass();\n\u00a0\u00a0\u00a0 System.out.println(myInner.y);\n\u00a0 }\n}\n\n// Outputs 5\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_inner3\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>class OuterClass {\n\u00a0 int x = 10;\n\n\u00a0 class InnerClass {\n\u00a0\u00a0\u00a0 public int myInnerMethod() {\n\u00a0\u00a0\u00a0\u00a0\u00a0 return x;\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 OuterClass myOuter = new OuterClass();\n\u00a0\u00a0\u00a0 OuterClass.InnerClass myInner = myOuter.new InnerClass();\n\u00a0\u00a0\u00a0 System.out.println(myInner.myInnerMethod());\n\u00a0 }\n}\n\n// Outputs 10\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_inner_access\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Inner Classes": "<p>In Java, it is also possible to nest classes (a class within a class). The purpose \nof nested classes is to group classes that belong together, which makes your code more readable and maintainable.</p><p>To access the inner class, create an object of the outer class, and then create an object of the inner class:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>class OuterClass {\n\u00a0 int x = 10;\n\n\u00a0 class InnerClass {\n\u00a0\u00a0\u00a0 int y = 5;\n\u00a0 }\n}\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 OuterClass myOuter = new OuterClass();\n\u00a0\u00a0\u00a0 OuterClass.InnerClass myInner = myOuter.new InnerClass();\n\u00a0\u00a0\u00a0 System.out.println(myInner.y + myOuter.x);\n\u00a0 }\n}\n\n// Outputs 15 (5 + 10)\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_inner\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Private Inner Class": "<p>Unlike a \"regular\" class, an inner class can be <code class=\"w3-codespan\">private</code> or <code class=\"w3-codespan\">protected</code>. \nIf you don't want outside objects to access the inner class, declare \nthe class as <code class=\"w3-codespan\">private</code>:</p><p>In the \nfollowing example we declare the inner class as private, meaning it cannot be \naccessed from an object <strong>outside the class</strong>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>class OuterClass {\n\u00a0 int x = 10;\n\n\u00a0 <strong>private</strong> class InnerClass {\n\u00a0\u00a0\u00a0 int y = 5;\n\u00a0 }\n}\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 OuterClass myOuter = new OuterClass();\n\u00a0\u00a0\u00a0 OuterClass.InnerClass myInner = myOuter.new InnerClass();\n\u00a0\u00a0\u00a0 System.out.println(myInner.y + myOuter.x);\n\u00a0 }\n}\n</code></pre>\n<p>If you try to access a private inner class from an outside class, an error occurs:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top\">\n<code>\n  Main.java:13: error: OuterClass.InnerClass has private access in OuterClass<br/>\n\u00a0\u00a0\u00a0\u00a0OuterClass.InnerClass myInner = myOuter.new InnerClass();<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0^\n</code>\n</div>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_inner2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"div-gpt-ad-1493883843099-0\" style=\"display: inline-block\">\n<script>\n    uic_r_g();\n    </script>\n</div>\n</div><hr/>",
        "Static Inner Class": "<p>An inner class can also be <code class=\"w3-codespan\">static</code>, which means that you can access it without \ncreating an object of the outer class:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>class OuterClass {\n\u00a0 int x = 10;\n\n\u00a0 static class InnerClass {\n\u00a0\u00a0\u00a0 int y = 5;\n\u00a0 }\n}\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 OuterClass.InnerClass myInner = new OuterClass.InnerClass();\n\u00a0\u00a0\u00a0 System.out.println(myInner.y);\n\u00a0 }\n}\n\n// Outputs 5\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_inner3\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p><strong>Note:</strong> just like <code class=\"w3-codespan\">static</code> attributes and methods, a <code class=\"w3-codespan\">static</code> inner class does not have access to members of the outer class.</p>\n</div><hr/>",
        "Access Outer Class From Inner Class": "<p>One advantage of inner classes, is that they can access attributes and methods of the outer class:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>class OuterClass {\n\u00a0 int x = 10;\n\n\u00a0 class InnerClass {\n\u00a0\u00a0\u00a0 public int myInnerMethod() {\n\u00a0\u00a0\u00a0\u00a0\u00a0 return x;\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 OuterClass myOuter = new OuterClass();\n\u00a0\u00a0\u00a0 OuterClass.InnerClass myInner = myOuter.new InnerClass();\n\u00a0\u00a0\u00a0 System.out.println(myInner.myInnerMethod());\n\u00a0 }\n}\n\n// Outputs 10\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_class_inner_access\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_polymorphism.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_abstract.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_inner_classes.asp"
    },
    {
      "Java Abstraction": {
        "examples": [
          "<div class=\"w3-example\">\n<pre class=\"language-java w3-white\" data-line=\"1,2\"><code>abstract class Animal {\n\u00a0 public abstract void animalSound();\n\u00a0 public void sleep() {\n\u00a0\u00a0\u00a0 System.out.println(\"Zzz\");\n\u00a0 }\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example w3-pale-red\">\n<pre class=\"language-java w3-white w3-border-red\"><code>Animal myObj = new Animal(); // will generate an error\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2,4,13\"><code>// Abstract class\nabstract class Animal {\n\u00a0 // Abstract method (does not have a body)\n\u00a0 public abstract void animalSound();\n\u00a0 // Regular method\n\u00a0 public void sleep() {\n\u00a0\u00a0\u00a0 System.out.println(\"Zzz\");\n\u00a0 }\n}\n\n// Subclass (inherit from Animal)\nclass Pig extends Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 // The body of animalSound() is provided here\n\u00a0\u00a0\u00a0 System.out.println(\"The pig says: wee wee\");\n\u00a0 }\n}\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Pig myPig = new Pig(); // Create a Pig object\n\u00a0\u00a0\u00a0 myPig.animalSound();\n\u00a0\u00a0\u00a0 myPig.sleep();\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_abstract\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Abstract Classes and Methods": "<p>Data <strong>abstraction</strong> is the process of hiding certain details and showing only essential information to the user.<br/>\nAbstraction can be achieved with either <strong>abstract classes</strong> or \n<a href=\"java_interface.asp\"><strong>interfaces</strong></a> (which you will learn more about in the next chapter).</p><p>The <code class=\"w3-codespan\">abstract</code> keyword is a non-access modifier, used for classes and methods:\n<ul><li><strong>Abstract class:</strong> is a restricted class that cannot be used to create objects (to access it, it must be inherited from another class).</li><br/>\n<li><strong>Abstract method:</strong> can only be used in an abstract class, and it does not have a body. The body is provided by the subclass (inherited from).</li>\n</ul>\n<p>An abstract class can have both abstract and regular methods:</p>\n<div class=\"w3-example\">\n<pre class=\"language-java w3-white\" data-line=\"1,2\"><code>abstract class Animal {\n\u00a0 public abstract void animalSound();\n\u00a0 public void sleep() {\n\u00a0\u00a0\u00a0 System.out.println(\"Zzz\");\n\u00a0 }\n}\n</code></pre>\n</div>\n<p>From the example above, it is not possible to create an object of the Animal class:</p>\n<div class=\"w3-example w3-pale-red\">\n<pre class=\"language-java w3-white w3-border-red\"><code>Animal myObj = new Animal(); // will generate an error\n</code></pre>\n</div>\n<p>To access the abstract class, it must be inherited from another class. Let's convert the Animal class we used in the <a href=\"java_polymorphism.asp\">Polymorphism</a> chapter to an abstract class:</p>\n<div class=\"w3-note w3-panel\">\n<p>Remember from the <a href=\"java_inheritance.asp\">Inheritance chapter</a> that we use the <code class=\"w3-codespan\">extends</code> keyword to inherit from a class.</p>\n</div>\n<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2,4,13\"><code>// Abstract class\nabstract class Animal {\n\u00a0 // Abstract method (does not have a body)\n\u00a0 public abstract void animalSound();\n\u00a0 // Regular method\n\u00a0 public void sleep() {\n\u00a0\u00a0\u00a0 System.out.println(\"Zzz\");\n\u00a0 }\n}\n\n// Subclass (inherit from Animal)\nclass Pig extends Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 // The body of animalSound() is provided here\n\u00a0\u00a0\u00a0 System.out.println(\"The pig says: wee wee\");\n\u00a0 }\n}\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Pig myPig = new Pig(); // Create a Pig object\n\u00a0\u00a0\u00a0 myPig.animalSound();\n\u00a0\u00a0\u00a0 myPig.sleep();\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_abstract\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>\n<div class=\"w3-note w3-panel\">\n<h4>Why And When To Use Abstract Classes and Methods?</h4>\n<p>To achieve security - hide certain details and only show the important \ndetails of an object.</p>\n<p><strong>Note:</strong> Abstraction can also be achieved with <a href=\"java_interface.asp\">Interfaces</a>, which you will learn more about in the next chapter.</p>\n</div>\n<br/>\n<div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_inner_classes.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_interface.asp\">Next \u276f</a>\n</div>\n<div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>\n</p>"
      },
      "url": "java_abstract.asp"
    },
    {
      "Java Interface": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2\"><code>// interface\ninterface Animal {\n\u00a0 public void animalSound(); // interface method (does not have a body)\n\u00a0 public void run(); // interface method (does not have a body)\n}\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2,8\"><code>// Interface\ninterface Animal {\n\u00a0 public void animalSound(); // interface method (does not have a body)\n\u00a0 public void sleep(); // interface method (does not have a body)\n}\n\n// Pig \"implements\" the Animal interface\nclass Pig implements Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 // The body of animalSound() is provided here\n\u00a0\u00a0\u00a0 System.out.println(\"The pig says: wee wee\");\n\u00a0 }\n\u00a0 public void sleep() {\n\u00a0\u00a0\u00a0 // The body of sleep() is provided here\n\u00a0\u00a0\u00a0 System.out.println(\"Zzz\");\n\u00a0 }\n}\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Pig myPig = new Pig();\u00a0 // Create a Pig object\n\u00a0\u00a0\u00a0 myPig.animalSound();\n\u00a0\u00a0\u00a0 myPig.sleep();\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_interface\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"9\"><code>interface FirstInterface {\n\u00a0 public void myMethod(); // interface method\n}\n\ninterface SecondInterface {\n\u00a0 public void myOtherMethod(); // interface method\n}\n\nclass DemoClass implements FirstInterface, SecondInterface {\n\u00a0 public void myMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Some text..\");\n\u00a0 }\n\u00a0 public void myOtherMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Some other text...\");\n\u00a0 }\n}\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 DemoClass myObj = new DemoClass();\n\u00a0\u00a0\u00a0 myObj.myMethod();\n\u00a0\u00a0\u00a0 myObj.myOtherMethod();\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_interface_multi\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Interfaces": "<p>Another way to achieve <a href=\"java_abstract.asp\">abstraction</a> in Java, is with interfaces.</p><p>An <code class=\"w3-codespan\">interface</code> is a completely \"<strong>abstract class</strong>\" \nthat is used to group related methods with empty bodies:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2\"><code>// interface\ninterface Animal {\n\u00a0 public void animalSound(); // interface method (does not have a body)\n\u00a0 public void run(); // interface method (does not have a body)\n}\n</code></pre>\n</div><p>To access the interface methods, the interface must be \"implemented\" \n(kinda like inherited) by another class with the <code class=\"w3-codespan\">implements</code> \nkeyword (instead of <code class=\"w3-codespan\">extends</code>). The body of the \ninterface method is provided by the \"implement\" class:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"2,8\"><code>// Interface\ninterface Animal {\n\u00a0 public void animalSound(); // interface method (does not have a body)\n\u00a0 public void sleep(); // interface method (does not have a body)\n}\n\n// Pig \"implements\" the Animal interface\nclass Pig implements Animal {\n\u00a0 public void animalSound() {\n\u00a0\u00a0\u00a0 // The body of animalSound() is provided here\n\u00a0\u00a0\u00a0 System.out.println(\"The pig says: wee wee\");\n\u00a0 }\n\u00a0 public void sleep() {\n\u00a0\u00a0\u00a0 // The body of sleep() is provided here\n\u00a0\u00a0\u00a0 System.out.println(\"Zzz\");\n\u00a0 }\n}\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Pig myPig = new Pig();\u00a0 // Create a Pig object\n\u00a0\u00a0\u00a0 myPig.animalSound();\n\u00a0\u00a0\u00a0 myPig.sleep();\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_interface\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<h4>Notes on Interfaces:</h4>\n<ul>\n<li>Like <strong>abstract classes</strong>, interfaces <strong>cannot</strong> be used to create objects (in the example above, \nit is not possible to create an \"Animal\" object in the MyMainClass)</li>\n<li>Interface methods do not have a body - the \nbody is provided by the \"implement\" class</li>\n<li>On implementation of an interface, you must override all of its methods</li>\n<li>Interface methods are by default <code class=\"w3-codespan\">abstract</code> and \n  <code class=\"w3-codespan\">public</code></li>\n<li>Interface attributes are by default <code class=\"w3-codespan\">public</code>, \n  <code class=\"w3-codespan\">static</code> and <code class=\"w3-codespan\">final</code></li>\n<li>An interface cannot contain a constructor (as it cannot be used to create objects)</li>\n</ul>\n<h4>Why And When To Use Interfaces?</h4>\n<p>1) To achieve security - hide certain details and only show the important \ndetails of an object (interface).</p>\n<p>2) Java does not support \"multiple inheritance\" (a class can only inherit from one superclass). However, it can be achieved \n  with interfaces, because the class can <strong>implement</strong> multiple interfaces.\n  <strong>Note:</strong> To implement multiple interfaces, separate them with a comma (see example below).</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Multiple Interfaces": "<p>To implement multiple interfaces, separate them with a comma:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"9\"><code>interface FirstInterface {\n\u00a0 public void myMethod(); // interface method\n}\n\ninterface SecondInterface {\n\u00a0 public void myOtherMethod(); // interface method\n}\n\nclass DemoClass implements FirstInterface, SecondInterface {\n\u00a0 public void myMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Some text..\");\n\u00a0 }\n\u00a0 public void myOtherMethod() {\n\u00a0\u00a0\u00a0 System.out.println(\"Some other text...\");\n\u00a0 }\n}\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 DemoClass myObj = new DemoClass();\n\u00a0\u00a0\u00a0 myObj.myMethod();\n\u00a0\u00a0\u00a0 myObj.myOtherMethod();\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_interface_multi\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_abstract.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_enums.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_interface.asp"
    },
    {
      "Java Enums": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>enum Level {\n\u00a0 LOW,\n\u00a0 MEDIUM,\n\u00a0 HIGH\n}\n</code></pre>\n<p>You can access <code class=\"w3-codespan\">enum</code> constants with the <strong>dot</strong> syntax:</p>\n<div class=\"w3-code notranslate javaHigh\">\n  Level myVar = Level.MEDIUM;</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_enums\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 enum Level {\n\u00a0\u00a0\u00a0 LOW,\n\u00a0\u00a0\u00a0 MEDIUM,\n\u00a0\u00a0\u00a0 HIGH\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Level myVar = Level.MEDIUM; \n\u00a0\u00a0\u00a0 System.out.println(myVar);\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nMEDIUM\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_enums_class\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>enum Level {\n\u00a0 LOW,\n\u00a0 MEDIUM,\n\u00a0 HIGH\n}\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Level myVar = Level.MEDIUM;\n\n\u00a0\u00a0\u00a0 switch(myVar) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 case LOW:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Low level\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;\n\u00a0\u00a0\u00a0\u00a0\u00a0 case MEDIUM:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Medium level\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;\n\u00a0\u00a0\u00a0\u00a0\u00a0 case HIGH:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"High level\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nMedium level\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_enums_switch\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>for (Level myVar : Level.values()) {\n\u00a0 System.out.println(myVar);\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nLOW<br/>\nMEDIUM<br/>\nHIGH</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_enums_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>"
        ],
        "Enums": "<p>An <code class=\"w3-codespan\">enum</code> is a special \"class\" that represents a group of \n<strong>constants</strong> (unchangeable variables, like <code class=\"w3-codespan\">final</code> variables).</p><p>To create an <code class=\"w3-codespan\">enum</code>, use the <code class=\"w3-codespan\">enum</code> keyword (instead of class or interface), and separate \nthe constants with a comma. Note that they should be in uppercase letters:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>enum Level {\n\u00a0 LOW,\n\u00a0 MEDIUM,\n\u00a0 HIGH\n}\n</code></pre>\n<p>You can access <code class=\"w3-codespan\">enum</code> constants with the <strong>dot</strong> syntax:</p>\n<div class=\"w3-code notranslate javaHigh\">\n  Level myVar = Level.MEDIUM;</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_enums\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><div class=\"w3-note w3-panel\">\n<p><strong>Enum</strong> is short for \"enumerations\", which means \"specifically listed\".</p>\n</div><hr/>",
        "Enum inside a Class": "<p>You can also have an <code class=\"w3-codespan\">enum</code> inside a class:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 enum Level {\n\u00a0\u00a0\u00a0 LOW,\n\u00a0\u00a0\u00a0 MEDIUM,\n\u00a0\u00a0\u00a0 HIGH\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Level myVar = Level.MEDIUM; \n\u00a0\u00a0\u00a0 System.out.println(myVar);\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nMEDIUM\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_enums_class\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><hr/>",
        "Enum in a Switch Statement": "<p>Enums are often used in <code class=\"w3-codespan\">switch</code> statements to check for corresponding values:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>enum Level {\n\u00a0 LOW,\n\u00a0 MEDIUM,\n\u00a0 HIGH\n}\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Level myVar = Level.MEDIUM;\n\n\u00a0\u00a0\u00a0 switch(myVar) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 case LOW:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Low level\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;\n\u00a0\u00a0\u00a0\u00a0\u00a0 case MEDIUM:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Medium level\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;\n\u00a0\u00a0\u00a0\u00a0\u00a0 case HIGH:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"High level\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 break;\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nMedium level\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_enums_switch\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Loop Through an Enum": "<p>The enum type has a <code class=\"w3-codespan\">values()</code> method, which returns an array of all enum constants. This method is useful when you want to loop through the constants of an enum:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>for (Level myVar : Level.values()) {\n\u00a0 System.out.println(myVar);\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\nLOW<br/>\nMEDIUM<br/>\nHIGH</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_enums_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><div class=\"w3-note w3-panel\">\n<h4>Difference between Enums and Classes</h4>\n<p>An <code class=\"w3-codespan\">enum</code> can, just like a <code class=\"w3-codespan\">class</code>, have attributes and methods. The only \ndifference is that enum constants are <code class=\"w3-codespan\">public</code>, <code class=\"w3-codespan\">static</code> and <code class=\"w3-codespan\">final</code> \n(unchangeable - cannot be overridden).</p>\n<p>An <code class=\"w3-codespan\">enum</code> cannot be used to create objects, and it cannot extend other classes (but it can implement interfaces).</p>\n<h4>Why And When To Use Enums?</h4>\n<p>Use enums when you have values that you know aren't going to change, like month days, days, colors, deck of cards, etc.</p></div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_interface.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_user_input.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_enums.asp"
    },
    {
      "Java User Input": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.util.Scanner;\u00a0 // Import the Scanner class\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Scanner myObj = new Scanner(System.in);\u00a0 // Create a Scanner object\n\u00a0\u00a0\u00a0 System.out.println(\"Enter username\");\n\n\u00a0\u00a0\u00a0 String userName = myObj.nextLine();\u00a0 // Read user input\n\u00a0\u00a0\u00a0 System.out.println(\"Username is: \" + userName);\u00a0 // Output user input\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_api_scanner\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.util.Scanner;\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Scanner myObj = new Scanner(System.in);\n\n\u00a0\u00a0\u00a0 System.out.println(\"Enter name, age and salary:\");\n\n\u00a0\u00a0\u00a0 // String input\n\u00a0\u00a0\u00a0 String name = myObj.nextLine();\n\n\u00a0\u00a0\u00a0 // Numerical input\n\u00a0\u00a0\u00a0 int age = myObj.nextInt();\n\u00a0\u00a0\u00a0 double salary = myObj.nextDouble();\n\n\u00a0\u00a0\u00a0 // Output input by user\n\u00a0\u00a0\u00a0 System.out.println(\"Name: \" + name);\n\u00a0\u00a0\u00a0 System.out.println(\"Age: \" + age);\n\u00a0\u00a0\u00a0 System.out.println(\"Salary: \" + salary);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_api_scanner2\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div>"
        ],
        "Java User Input": "<p>The <code class=\"w3-codespan\">Scanner</code> class is used to get \nuser input, and it is found in the <code class=\"w3-codespan\">java.util</code> package.</p><p>To use the <code class=\"w3-codespan\">Scanner</code> class, create an object of the class and use any of the available methods found in the <code class=\"w3-codespan\">Scanner</code> class documentation. \nIn our example, we will use the <code class=\"w3-codespan\">nextLine()</code> method, which is used to read Strings:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.util.Scanner;\u00a0 // Import the Scanner class\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Scanner myObj = new Scanner(System.in);\u00a0 // Create a Scanner object\n\u00a0\u00a0\u00a0 System.out.println(\"Enter username\");\n\n\u00a0\u00a0\u00a0 String userName = myObj.nextLine();\u00a0 // Read user input\n\u00a0\u00a0\u00a0 System.out.println(\"Username is: \" + userName);\u00a0 // Output user input\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_api_scanner\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p>If you don't know what a package is, read our <a href=\"java_packages.asp\">Java Packages Tutorial</a>.</p>\n</div><hr/>",
        "Input Types": "<p>In the example above, we used the <code class=\"w3-codespan\">nextLine()</code> method, which is used to read Strings. To read other types, look at the table below:</p><div class=\"w3-responsive\" style=\"margin:-16px 0;\">\n<table class=\"ws-table-all notranslate\">\n<tbody>\n<tr>\n<th style=\"width:26%\">Method</th>\n<th style=\"width:74%\">Description</th>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextBoolean()</code></td>\n<td>Reads a <code class=\"w3-codespan\">boolean</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdate\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextByte()</code></td>\n<td>Reads a <code class=\"w3-codespan\">byte</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localtime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextDouble()</code></td>\n<td>Reads a <code class=\"w3-codespan\">double</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextFloat()</code></td>\n<td>Reads a <code class=\"w3-codespan\">float</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextInt()</code></td>\n<td>Reads a <code class=\"w3-codespan\">int</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextLine()</code></td>\n<td>Reads a <code class=\"w3-codespan\">String</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextLong()</code></td>\n<td>Reads a <code class=\"w3-codespan\">long</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">nextShort()</code></td>\n<td>Reads a <code class=\"w3-codespan\">short</code> value from the user</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n</tbody>\n</table>\n</div><p>In the example below, we use different methods to read data of various types:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.util.Scanner;\n\nclass Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Scanner myObj = new Scanner(System.in);\n\n\u00a0\u00a0\u00a0 System.out.println(\"Enter name, age and salary:\");\n\n\u00a0\u00a0\u00a0 // String input\n\u00a0\u00a0\u00a0 String name = myObj.nextLine();\n\n\u00a0\u00a0\u00a0 // Numerical input\n\u00a0\u00a0\u00a0 int age = myObj.nextInt();\n\u00a0\u00a0\u00a0 double salary = myObj.nextDouble();\n\n\u00a0\u00a0\u00a0 // Output input by user\n\u00a0\u00a0\u00a0 System.out.println(\"Name: \" + name);\n\u00a0\u00a0\u00a0 System.out.println(\"Age: \" + age);\n\u00a0\u00a0\u00a0 System.out.println(\"Salary: \" + salary);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_api_scanner2\" target=\"_blank\">Run Example \u00bb</a>\n</p>\n</div><div class=\"w3-warning w3-panel\">\n<p><strong>Note:</strong> If you enter wrong input (e.g. text in a numerical input), you will get an exception/error message (like \"InputMismatchException\").</p>\n<p>You can read more about exceptions and how to handle errors in the <a href=\"java_try_catch.asp\">Exceptions chapter</a>.</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_enums.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_date.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_user_input.asp"
    },
    {
      "Java Date": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.time.LocalDate; // import the LocalDate class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 LocalDate myObj = LocalDate.now(); // Create a date object\n\u00a0\u00a0\u00a0 System.out.println(myObj); // Display the current date\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\n<script>\nvar d = new Date();\n\nvar m = d.getMonth() + 1;\nif (m < 10) m = \"0\" + m\n\nvar day = d.getDate();\nif (day < 10) day = \"0\" + day;\n\nvar x = d.getFullYear() + \"-\" + m + \"-\" + day;\ndocument.write(x);\n</script>\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_date_localdate\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.time.LocalTime; // import the LocalTime class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 LocalTime myObj = LocalTime.now();\n\u00a0\u00a0\u00a0 System.out.println(myObj);\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\n<script>\nvar d = new Date();\n\nvar h = d.getHours();\nif (h < 10) h = \"0\" + h;\n\nvar n = d.getMinutes();\nif (n < 10) n = \"0\" + n;\n\nvar s = d.getSeconds();\nif (s < 10) s = \"0\" + s;\n\nvar ms = d.getMilliseconds();\nwhile (ms.toString().length < 3) {\n  ms = \"0\" + ms;\n}\nvar ex = Math.floor(Math.random() * 999);\nwhile (ex.toString().length < 3) {\n  ex = \"0\" + ex;\n}\n\nvar x =h + \":\" + n + \":\" + s + \".\" + ms + ex\ndocument.write(x);\n</script>\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_date_localtime\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.time.LocalDateTime; // import the LocalDateTime class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 LocalDateTime myObj = LocalDateTime.now();\n\u00a0\u00a0\u00a0 System.out.println(myObj);\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\n<script>\n\nvar d = new Date();\n\nvar m = d.getMonth() + 1;\nif (m < 10) m = \"0\" + m\n\nvar day = d.getDate();\nif (day < 10) day = \"0\" + day;\n\nvar h = d.getHours();\nif (h < 10) h = \"0\" + h;\n\nvar n = d.getMinutes();\nif (n < 10) n = \"0\" + n;\n\nvar s = d.getSeconds();\nif (s < 10) s = \"0\" + s;\n\nvar ms = d.getMilliseconds();\nwhile (ms.toString().length < 3) {\n  ms = \"0\" + ms;\n}\nvar ex = Math.floor(Math.random() * 999);\nwhile (ex.toString().length < 3) {\n  ex = \"0\" + ex;\n}\n\nvar x = d.getFullYear() + \"-\" + m + \"-\" + day + \"T\" + h + \":\" + n + \":\" + s + \".\" + ms + ex\ndocument.write(x);\n</script>\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_date_localdatetime\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.time.LocalDateTime; // Import the LocalDateTime class\nimport java.time.format.DateTimeFormatter; // Import the DateTimeFormatter class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 LocalDateTime myDateObj = LocalDateTime.now();\n\u00a0\u00a0\u00a0 System.out.println(\"Before formatting: \" + myDateObj);\n\u00a0\u00a0\u00a0 DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm:ss\");\n\n\u00a0\u00a0\u00a0 String formattedDate = myDateObj.format(myFormatObj);\n\u00a0\u00a0\u00a0 System.out.println(\"After formatting: \" + formattedDate);\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\n<script>\n\nvar d = new Date();\n\nvar m = d.getMonth() + 1;\nif (m < 10) m = \"0\" + m\n\nvar day = d.getDate();\nif (day < 10) day = \"0\" + day;\n\nvar h = d.getHours();\nif (h < 10) h = \"0\" + h;\n\nvar n = d.getMinutes();\nif (n < 10) n = \"0\" + n;\n\nvar s = d.getSeconds();\nif (s < 10) s = \"0\" + s;\n\nvar ms = d.getMilliseconds();\nwhile (ms.toString().length < 3) {\n  ms = \"0\" + ms;\n}\nvar ex = Math.floor(Math.random() * 999);\nwhile (ex.toString().length < 3) {\n  ex = \"0\" + ex;\n}\n\nvar x = \"Before Formatting:\" + \" \" + d.getFullYear() + \"-\" + m + \"-\" + day + \"T\" + h + \":\" + n + \":\" + s + \".\" + ms + ex\ndocument.write(x);\n</script>\n<br/>\n<script>\n\nvar d = new Date();\n\nvar m = d.getMonth() + 1;\nif (m < 10) m = \"0\" + m\n\nvar day = d.getDate();\nif (day < 10) day = \"0\" + day;\n\nvar h = d.getHours();\nif (h < 10) h = \"0\" + h;\n\nvar n = d.getMinutes();\nif (n < 10) n = \"0\" + n;\n\nvar s = d.getSeconds();\nif (s < 10) s = \"0\" + s;\n\nvar x = \"After Formatting:\" + \" \"  + day + \"-\" + m + \"-\" + d.getFullYear() + \" \" + h + \":\" + n + \":\" + s;\ndocument.write(x);\n</script>\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_date_format\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>"
        ],
        "Java Dates": "<p>Java does not have a built-in Date class, but we can import the <code class=\"w3-codespan\">java.time</code> \npackage to work with the date and time API. The package includes many date and time classes. \nFor example:</p><div class=\"w3-responsive\" style=\"margin:-16px 0;\">\n<table class=\"ws-table-all notranslate\">\n<tbody>\n<tr>\n<th style=\"width:25%\">Class</th>\n<th style=\"width:75%\">Description</th>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">LocalDate</code></td>\n<td>Represents a date (year, month, day (yyyy-MM-dd))</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdate\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">LocalTime</code></td>\n<td>Represents a time (hour, minute, second and nanoseconds (HH-mm-ss-ns))</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localtime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">LocalDateTime</code></td>\n<td>Represents both a date and a time (yyyy-MM-dd-HH-mm-ss-ns)</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">DateTimeFormatter</code></td>\n<td>Formatter for displaying and parsing date-time objects</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n</tbody>\n</table>\n</div><div class=\"w3-note w3-panel\">\n<p>If you don't know what a package is, read our <a href=\"java_packages.asp\">Java Packages Tutorial</a>.</p>\n</div><hr/>",
        "Display Current Date": "<p>To display the current date, import the <code class=\"w3-codespan\">java.time.LocalDate</code> class, and use its <code class=\"w3-codespan\">now()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.time.LocalDate; // import the LocalDate class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 LocalDate myObj = LocalDate.now(); // Create a date object\n\u00a0\u00a0\u00a0 System.out.println(myObj); // Display the current date\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\n<script>\nvar d = new Date();\n\nvar m = d.getMonth() + 1;\nif (m < 10) m = \"0\" + m\n\nvar day = d.getDate();\nif (day < 10) day = \"0\" + day;\n\nvar x = d.getFullYear() + \"-\" + m + \"-\" + day;\ndocument.write(x);\n</script>\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_date_localdate\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><hr/>",
        "Display Current Time": "<p>To display the current time (hour, minute, second, and nanoseconds), import the <code class=\"w3-codespan\">java.time.LocalTime</code> class, and use its <code class=\"w3-codespan\">now()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.time.LocalTime; // import the LocalTime class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 LocalTime myObj = LocalTime.now();\n\u00a0\u00a0\u00a0 System.out.println(myObj);\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\n<script>\nvar d = new Date();\n\nvar h = d.getHours();\nif (h < 10) h = \"0\" + h;\n\nvar n = d.getMinutes();\nif (n < 10) n = \"0\" + n;\n\nvar s = d.getSeconds();\nif (s < 10) s = \"0\" + s;\n\nvar ms = d.getMilliseconds();\nwhile (ms.toString().length < 3) {\n  ms = \"0\" + ms;\n}\nvar ex = Math.floor(Math.random() * 999);\nwhile (ex.toString().length < 3) {\n  ex = \"0\" + ex;\n}\n\nvar x =h + \":\" + n + \":\" + s + \".\" + ms + ex\ndocument.write(x);\n</script>\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_date_localtime\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Display Current Date and Time": "<p>To display the current date and time, import the <code class=\"w3-codespan\">java.time.LocalDateTime</code> class, and use its <code class=\"w3-codespan\">now()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.time.LocalDateTime; // import the LocalDateTime class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 LocalDateTime myObj = LocalDateTime.now();\n\u00a0\u00a0\u00a0 System.out.println(myObj);\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\n<script>\n\nvar d = new Date();\n\nvar m = d.getMonth() + 1;\nif (m < 10) m = \"0\" + m\n\nvar day = d.getDate();\nif (day < 10) day = \"0\" + day;\n\nvar h = d.getHours();\nif (h < 10) h = \"0\" + h;\n\nvar n = d.getMinutes();\nif (n < 10) n = \"0\" + n;\n\nvar s = d.getSeconds();\nif (s < 10) s = \"0\" + s;\n\nvar ms = d.getMilliseconds();\nwhile (ms.toString().length < 3) {\n  ms = \"0\" + ms;\n}\nvar ex = Math.floor(Math.random() * 999);\nwhile (ex.toString().length < 3) {\n  ex = \"0\" + ex;\n}\n\nvar x = d.getFullYear() + \"-\" + m + \"-\" + day + \"T\" + h + \":\" + n + \":\" + s + \".\" + ms + ex\ndocument.write(x);\n</script>\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_date_localdatetime\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><hr/>",
        "Formatting Date and Time": "<p>The \"T\" in the example above is used to separate the date from the time. You can use the <code class=\"w3-codespan\">DateTimeFormatter</code> class \nwith the <code class=\"w3-codespan\">ofPattern()</code> method in the same package to format or parse date-time objects. \nThe following example will remove both the \"T\" and nanoseconds from the date-time:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.time.LocalDateTime; // Import the LocalDateTime class\nimport java.time.format.DateTimeFormatter; // Import the DateTimeFormatter class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 LocalDateTime myDateObj = LocalDateTime.now();\n\u00a0\u00a0\u00a0 System.out.println(\"Before formatting: \" + myDateObj);\n\u00a0\u00a0\u00a0 DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm:ss\");\n\n\u00a0\u00a0\u00a0 String formattedDate = myDateObj.format(myFormatObj);\n\u00a0\u00a0\u00a0 System.out.println(\"After formatting: \" + formattedDate);\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black w3-margin-top w3-margin-bottom\">\n<code>\n<script>\n\nvar d = new Date();\n\nvar m = d.getMonth() + 1;\nif (m < 10) m = \"0\" + m\n\nvar day = d.getDate();\nif (day < 10) day = \"0\" + day;\n\nvar h = d.getHours();\nif (h < 10) h = \"0\" + h;\n\nvar n = d.getMinutes();\nif (n < 10) n = \"0\" + n;\n\nvar s = d.getSeconds();\nif (s < 10) s = \"0\" + s;\n\nvar ms = d.getMilliseconds();\nwhile (ms.toString().length < 3) {\n  ms = \"0\" + ms;\n}\nvar ex = Math.floor(Math.random() * 999);\nwhile (ex.toString().length < 3) {\n  ex = \"0\" + ex;\n}\n\nvar x = \"Before Formatting:\" + \" \" + d.getFullYear() + \"-\" + m + \"-\" + day + \"T\" + h + \":\" + n + \":\" + s + \".\" + ms + ex\ndocument.write(x);\n</script>\n<br/>\n<script>\n\nvar d = new Date();\n\nvar m = d.getMonth() + 1;\nif (m < 10) m = \"0\" + m\n\nvar day = d.getDate();\nif (day < 10) day = \"0\" + day;\n\nvar h = d.getHours();\nif (h < 10) h = \"0\" + h;\n\nvar n = d.getMinutes();\nif (n < 10) n = \"0\" + n;\n\nvar s = d.getSeconds();\nif (s < 10) s = \"0\" + s;\n\nvar x = \"After Formatting:\" + \" \"  + day + \"-\" + m + \"-\" + d.getFullYear() + \" \" + h + \":\" + n + \":\" + s;\ndocument.write(x);\n</script>\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom\" href=\"tryjava.asp?filename=demo_date_format\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><p>The <code class=\"w3-codespan\">ofPattern()</code> method accepts all sorts of values, if you want to display \nthe date and time in a different format. For example:</p><div class=\"w3-responsive\" style=\"margin:-16px 0;\">\n<table class=\"ws-table-all notranslate\">\n<tbody>\n<tr>\n<th style=\"width:25%\">Value</th>\n<th style=\"width:65%\">Example</th>\n<th style=\"width:10%\">Tryit</th>\n</tr>\n<tr>\n<td><i>yyyy-MM-dd</i></td>\n<td>\"1988-09-29\"</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_format\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td><i>dd/MM/yyyy</i></td>\n<td>\"29/09/1988\"</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_formatter1\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td><i>dd-MMM-yyyy</i></td>\n<td>\"29-Sep-1988\"</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_formatter2\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td><i>E, MMM dd yyyy</i></td>\n<td>\"Thu, Sep 29 1988\"</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_formatter3\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</tbody>\n</table>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_user_input.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_arraylist.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_date.asp"
    },
    {
      "Java ArrayList": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create an <code class=\"w3-codespan\">ArrayList</code> object called <strong>cars</strong> that will store strings:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList; // import the ArrayList class\n\nArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;(); // Create an ArrayList object\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n\u00a0\u00a0\u00a0 cars.add(\"Volvo\");\n\u00a0\u00a0\u00a0 cars.add(\"BMW\");\n\u00a0\u00a0\u00a0 cars.add(\"Ford\");\n\u00a0\u00a0\u00a0 cars.add(\"Mazda\");\n\u00a0\u00a0\u00a0 System.out.println(cars);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_add\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.get(0);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_get\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.set(0, \"Opel\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_set\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.remove(0);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_remove\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.clear();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_clear\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.size();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_size\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n\u00a0\u00a0\u00a0 cars.add(\"Volvo\");\n\u00a0\u00a0\u00a0 cars.add(\"BMW\");\n\u00a0\u00a0\u00a0 cars.add(\"Ford\");\n\u00a0\u00a0\u00a0 cars.add(\"Mazda\");\n\u00a0\u00a0\u00a0 for (int i = 0; i &lt; cars.size(); i++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(cars.get(i));\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n\u00a0\u00a0\u00a0 cars.add(\"Volvo\");\n\u00a0\u00a0\u00a0 cars.add(\"BMW\");\n\u00a0\u00a0\u00a0 cars.add(\"Ford\");\n\u00a0\u00a0\u00a0 cars.add(\"Mazda\");\n\u00a0\u00a0\u00a0 for (String i : cars) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(i);\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_for_each\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create an <code class=\"w3-codespan\">ArrayList</code> to store numbers (add elements of type <code class=\"w3-codespan\">Integer</code>):</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;Integer&gt; myNumbers = new ArrayList&lt;Integer&gt;();\n\u00a0\u00a0\u00a0 myNumbers.add(10);\n\u00a0\u00a0\u00a0 myNumbers.add(15);\n\u00a0\u00a0\u00a0 myNumbers.add(20);\n\u00a0\u00a0\u00a0 myNumbers.add(25);\n\u00a0\u00a0\u00a0 for (int i : myNumbers) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(i);\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_integer\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Sort an ArrayList of Strings:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\nimport java.util.Collections;\u00a0 // Import the Collections class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n\u00a0\u00a0\u00a0 cars.add(\"Volvo\");\n\u00a0\u00a0\u00a0 cars.add(\"BMW\");\n\u00a0\u00a0\u00a0 cars.add(\"Ford\");\n\u00a0\u00a0\u00a0 cars.add(\"Mazda\");\n\u00a0\u00a0\u00a0 Collections.sort(cars);\u00a0 // Sort cars\n\u00a0\u00a0\u00a0 for (String i : cars) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(i);\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_sort2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Sort an ArrayList of Integers:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\nimport java.util.Collections;\u00a0 // Import the Collections class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;Integer&gt; myNumbers = new ArrayList&lt;Integer&gt;();\n\u00a0\u00a0\u00a0 myNumbers.add(33);\n\u00a0\u00a0\u00a0 myNumbers.add(15);\n\u00a0\u00a0\u00a0 myNumbers.add(20);\n\u00a0\u00a0\u00a0 myNumbers.add(34);\n\u00a0\u00a0\u00a0 myNumbers.add(8);\n\u00a0\u00a0\u00a0 myNumbers.add(12);\n\n\u00a0\u00a0\u00a0 Collections.sort(myNumbers);\u00a0 // Sort myNumbers\n\n\u00a0\u00a0\u00a0 for (int i : myNumbers) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(i);\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_sort\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java ArrayList": "<p>The <code class=\"w3-codespan\">ArrayList</code> class is a resizable <a href=\"java_arrays.asp\">array</a>, which can be found in the <code class=\"w3-codespan\">java.util</code> package.</p><p>The difference between a built-in array and an <code class=\"w3-codespan\">ArrayList</code> in Java, is that the size of an array cannot be modified (if you want to \nadd or remove elements to/from an array, you have to create a new one). While elements can be added and removed from an <code class=\"w3-codespan\">ArrayList</code> whenever you want. The syntax is also slightly different:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create an <code class=\"w3-codespan\">ArrayList</code> object called <strong>cars</strong> that will store strings:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList; // import the ArrayList class\n\nArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;(); // Create an ArrayList object\n</code></pre>\n</div><div class=\"w3-note w3-panel\">\n<p>If you don't know what a package is, read our <a href=\"java_packages.asp\">Java Packages Tutorial</a>.</p>\n</div><hr/>",
        "Add Items": "<p>The <code class=\"w3-codespan\">ArrayList</code> class has many useful methods. For example, to add elements to the <code class=\"w3-codespan\">ArrayList</code>, use the <code class=\"w3-codespan\">add()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n\u00a0\u00a0\u00a0 cars.add(\"Volvo\");\n\u00a0\u00a0\u00a0 cars.add(\"BMW\");\n\u00a0\u00a0\u00a0 cars.add(\"Ford\");\n\u00a0\u00a0\u00a0 cars.add(\"Mazda\");\n\u00a0\u00a0\u00a0 System.out.println(cars);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_add\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div><hr/>",
        "Access an Item": "<p>To access an element in the <code class=\"w3-codespan\">ArrayList</code>, use the <code class=\"w3-codespan\">get()</code> method and refer to the index number:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.get(0);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_get\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p><strong>Remember:</strong> Array indexes start with 0: [0] is the first element. [1] is the second \nelement, etc.</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Change an Item": "<p>To modify an element, use the <code class=\"w3-codespan\">set()</code> method \nand refer to the index number:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.set(0, \"Opel\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_set\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Remove an Item": "<p>To remove an element, use the <code class=\"w3-codespan\">remove()</code> method \nand refer to the index number:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.remove(0);\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_remove\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>To remove all the elements in the <code class=\"w3-codespan\">ArrayList</code>, use the <code class=\"w3-codespan\">clear()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.clear();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_clear\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "ArrayList Size": "<p>To find out how many elements an ArrayList have, use the <code class=\"w3-codespan\">size</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.size();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_size\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Loop Through an ArrayList": "<p>Loop through the elements of an <code class=\"w3-codespan\">ArrayList</code> with a <code class=\"w3-codespan\">for</code> loop, and use the <code class=\"w3-codespan\">\nsize()</code> method to specify how many times the loop should run:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n\u00a0\u00a0\u00a0 cars.add(\"Volvo\");\n\u00a0\u00a0\u00a0 cars.add(\"BMW\");\n\u00a0\u00a0\u00a0 cars.add(\"Ford\");\n\u00a0\u00a0\u00a0 cars.add(\"Mazda\");\n\u00a0\u00a0\u00a0 for (int i = 0; i &lt; cars.size(); i++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(cars.get(i));\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>You can also loop through an <code class=\"w3-codespan\">ArrayList</code> with the <strong>for-each</strong> loop:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n\u00a0\u00a0\u00a0 cars.add(\"Volvo\");\n\u00a0\u00a0\u00a0 cars.add(\"BMW\");\n\u00a0\u00a0\u00a0 cars.add(\"Ford\");\n\u00a0\u00a0\u00a0 cars.add(\"Mazda\");\n\u00a0\u00a0\u00a0 for (String i : cars) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(i);\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_for_each\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Other Types": "<p>Elements in an ArrayList are actually objects. In the examples above, we created elements \n(objects) of type \"String\". Remember that a String in Java is an object (not a primitive type). To use other types, such as int, you must specify an equivalent <a href=\"java_wrapper_classes.asp\">wrapper class</a>: <code class=\"w3-codespan\">Integer</code>. For other primitive types, \nuse: <code class=\"w3-codespan\">Boolean</code> for boolean, <code class=\"w3-codespan\">Character</code> for char, <code class=\"w3-codespan\">Double</code> for double, \netc:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create an <code class=\"w3-codespan\">ArrayList</code> to store numbers (add elements of type <code class=\"w3-codespan\">Integer</code>):</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;Integer&gt; myNumbers = new ArrayList&lt;Integer&gt;();\n\u00a0\u00a0\u00a0 myNumbers.add(10);\n\u00a0\u00a0\u00a0 myNumbers.add(15);\n\u00a0\u00a0\u00a0 myNumbers.add(20);\n\u00a0\u00a0\u00a0 myNumbers.add(25);\n\u00a0\u00a0\u00a0 for (int i : myNumbers) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(i);\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_integer\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Sort an ArrayList": "<p>Another useful class in the <code class=\"w3-codespan\">java.util</code> package is the <code class=\"w3-codespan\">Collections</code> class, which include the <code class=\"w3-codespan\">sort()</code> method for sorting lists \nalphabetically or numerically:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Sort an ArrayList of Strings:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\nimport java.util.Collections;\u00a0 // Import the Collections class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n\u00a0\u00a0\u00a0 cars.add(\"Volvo\");\n\u00a0\u00a0\u00a0 cars.add(\"BMW\");\n\u00a0\u00a0\u00a0 cars.add(\"Ford\");\n\u00a0\u00a0\u00a0 cars.add(\"Mazda\");\n\u00a0\u00a0\u00a0 Collections.sort(cars);\u00a0 // Sort cars\n\u00a0\u00a0\u00a0 for (String i : cars) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(i);\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_sort2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Sort an ArrayList of Integers:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\nimport java.util.Collections;\u00a0 // Import the Collections class\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 ArrayList&lt;Integer&gt; myNumbers = new ArrayList&lt;Integer&gt;();\n\u00a0\u00a0\u00a0 myNumbers.add(33);\n\u00a0\u00a0\u00a0 myNumbers.add(15);\n\u00a0\u00a0\u00a0 myNumbers.add(20);\n\u00a0\u00a0\u00a0 myNumbers.add(34);\n\u00a0\u00a0\u00a0 myNumbers.add(8);\n\u00a0\u00a0\u00a0 myNumbers.add(12);\n\n\u00a0\u00a0\u00a0 Collections.sort(myNumbers);\u00a0 // Sort myNumbers\n\n\u00a0\u00a0\u00a0 for (int i : myNumbers) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(i);\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_sort\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_date.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_linkedlist.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_arraylist.asp"
    },
    {
      "Java LinkedList": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Import the LinkedList class\nimport java.util.LinkedList;\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 LinkedList&lt;String&gt; cars = new LinkedList&lt;String&gt;();\n\u00a0\u00a0\u00a0 cars.add(\"Volvo\");\n\u00a0\u00a0\u00a0 cars.add(\"BMW\");\n\u00a0\u00a0\u00a0 cars.add(\"Ford\");\n\u00a0\u00a0\u00a0 cars.add(\"Mazda\");\n\u00a0\u00a0\u00a0 System.out.println(cars);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_linkedlist_add\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div>"
        ],
        "Java LinkedList": "<p>In the previous chapter, you learned about the <a href=\"java_arraylist.asp\"><code class=\"w3-codespan\">ArrayList</code></a> class. The <code class=\"w3-codespan\">LinkedList</code> class is \nalmost identical to the \n<code class=\"w3-codespan\">ArrayList</code>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Import the LinkedList class\nimport java.util.LinkedList;\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 LinkedList&lt;String&gt; cars = new LinkedList&lt;String&gt;();\n\u00a0\u00a0\u00a0 cars.add(\"Volvo\");\n\u00a0\u00a0\u00a0 cars.add(\"BMW\");\n\u00a0\u00a0\u00a0 cars.add(\"Ford\");\n\u00a0\u00a0\u00a0 cars.add(\"Mazda\");\n\u00a0\u00a0\u00a0 System.out.println(cars);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_linkedlist_add\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p></div><hr/>",
        "ArrayList vs. LinkedList": "<p>The <code class=\"w3-codespan\">LinkedList</code> class is a collection which can contain many objects of the same type,\njust like the <code class=\"w3-codespan\">ArrayList</code>.</p><p>The <code class=\"w3-codespan\">LinkedList</code> class has all of the same methods as the <code class=\"w3-codespan\">ArrayList</code> class because\nthey both implement the <code class=\"w3-codespan\">List</code> interface. This means that you can add items, change\nitems, remove items and clear the list in the same way.</p><p>However, while the <code class=\"w3-codespan\">ArrayList</code> class and the <code class=\"w3-codespan\">LinkedList</code> class can be used in the same way,\nthey are built very differently.</p><h3>How the ArrayList works</h3><p>The <code class=\"w3-codespan\">ArrayList</code> class has a regular array inside it. When an element is added, it is placed\ninto the array. If the array is not big enough, a new, larger array is created to replace the\nold one and the old one is removed.</p><h3>How the LinkedList works</h3><p>The <code class=\"w3-codespan\">LinkedList</code> stores its items in \"containers.\" The list has a link to the first container\nand each container has a link to the next container in the list. To add an element to the list,\nthe element is placed into a new container and that container is linked to one of the other\ncontainers in the list.</p><div class=\"w3-note w3-panel\">\n<h3>When To Use</h3>\n<p>Use an <code class=\"w3-codespan\">ArrayList</code> for storing and accessing data, and <code class=\"w3-codespan\">LinkedList</code>  to \nmanipulate data.</p>\n</div><hr/>",
        "LinkedList Methods": "<p>For many cases, the <code class=\"w3-codespan\">ArrayList</code> is more efficient as it is common to need access to\nrandom items in the list, but the <code class=\"w3-codespan\">LinkedList</code> provides several methods to do certain\noperations more efficiently:</p><div class=\"w3-responsive\">\n<table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:15%\">Method</th>\n<th style=\"width:40%\">Description</th>\n<th style=\"width:10%\">Try it</th>\n</tr>\n<tr>\n<td>addFirst()</td>\n<td>Adds an item to the beginning of the list.</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_linkedlist_addfirst\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>addLast()</td>\n<td>Add an item to the end of the list</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_linkedlist_addlast\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>removeFirst()</td>\n<td>Remove an item from the beginning of the list.</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_linkedlist_removefirst\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>removeLast()</td>\n<td>Remove an item from the end of the list</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_linkedlist_removelast\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>getFirst()</td>\n<td>Get the item at the beginning of the list</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_linkedlist_getfirst\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n<tr>\n<td>getLast()</td>\n<td>Get the item at the end of the list</td>\n<td><a class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_linkedlist_getlast\" target=\"_blank\">Try it \u00bb</a></td>\n</tr>\n</tbody>\n</table>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_arraylist.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_hashmap.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_linkedlist.asp"
    },
    {
      "Java HashMap": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a <code class=\"w3-codespan\">HashMap</code> object called <strong>capitalCities</strong> that will store <code class=\"w3-codespan\">String</code> <strong>keys</strong> and <code class=\"w3-codespan\">String</code>\n<strong>values</strong>:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.HashMap; // import the HashMap class\n\nHashMap&lt;String, String&gt; capitalCities = new HashMap&lt;String, String&gt;();\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Import the HashMap class\nimport java.util.HashMap;\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 // Create a HashMap object called capitalCities\n\u00a0\u00a0\u00a0 HashMap&lt;String, String&gt; capitalCities = new HashMap&lt;String, String&gt;();\n\n\u00a0\u00a0\u00a0 // Add keys and values (Country, City)\n\u00a0\u00a0\u00a0 capitalCities.put(\"England\", \"London\");\n\u00a0\u00a0\u00a0 capitalCities.put(\"Germany\", \"Berlin\");\n\u00a0\u00a0\u00a0 capitalCities.put(\"Norway\", \"Oslo\");\n\u00a0\u00a0\u00a0 capitalCities.put(\"USA\", \"Washington DC\");\n\u00a0\u00a0\u00a0 System.out.println(capitalCities);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_put\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>capitalCities.get(\"England\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_get\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>capitalCities.remove(\"England\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_remove\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>capitalCities.clear();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_clear\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>capitalCities.size();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_size\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Print keys\nfor (String i : capitalCities.keySet()) {\n\u00a0 System.out.println(i);\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_loop_key\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Print values\nfor (String i : capitalCities.values()) {\n\u00a0 System.out.println(i);\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_loop_value\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Print keys and values\nfor (String i : capitalCities.keySet()) {\n\u00a0 System.out.println(\"key: \" + i + \" value: \" + capitalCities.get(i));\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_loop_keyvalue\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a <code class=\"w3-codespan\">HashMap</code> object called <strong>\npeople</strong> that will store <code class=\"w3-codespan\">String</code> <strong>keys</strong> and <code class=\"w3-codespan\">\nInteger</code>\n<strong>values</strong>:</p>\n<pre class=\"language-java w3-white\"><code>// Import the HashMap class\nimport java.util.HashMap;\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\n\u00a0\u00a0\u00a0 // Create a HashMap object called people\n\u00a0\u00a0\u00a0 HashMap&lt;String, Integer&gt; people = new HashMap&lt;String, Integer&gt;();\n\n\n\u00a0\u00a0\u00a0 // Add keys and values (Name, Age)\n\u00a0\u00a0\u00a0 people.put(\"John\", 32);\n\u00a0\u00a0\u00a0 people.put(\"Steve\", 30);\n\u00a0\u00a0\u00a0 people.put(\"Angie\", 33);\n\n\u00a0\u00a0\u00a0 for (String i : people.keySet()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"key: \" + i + \" value: \" + people.get(i));\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_integer\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java HashMap": "<p>In the <a href=\"java_arraylist.asp\"><code class=\"w3-codespan\">ArrayList</code></a> chapter, you learned that Arrays store items as an ordered collection, and you have to access them with an index number (<code class=\"w3-codespan\">int</code> type).\nA <code class=\"w3-codespan\">HashMap</code> however, store items in \"<strong>key</strong>/<strong>value</strong>\" pairs, and you can access them by an index of another type (e.g. a <code class=\"w3-codespan\">String</code>).</p><p>The <code class=\"w3-codespan\">HashMap</code> class stores data in \"<strong>key</strong> and \n<strong>value</strong>\" pairs: one object is used as a key (index) to another \nobject (value), and is found in the <code class=\"w3-codespan\">java.util</code> package.</p><p>One object is used as a key (index) to another \nobject (value). It can store different types: <code class=\"w3-codespan\">String</code> keys and <code class=\"w3-codespan\">Integer</code> values, or the \nsame type, like: <code class=\"w3-codespan\">String</code> keys and <code class=\"w3-codespan\">String</code> values:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a <code class=\"w3-codespan\">HashMap</code> object called <strong>capitalCities</strong> that will store <code class=\"w3-codespan\">String</code> <strong>keys</strong> and <code class=\"w3-codespan\">String</code>\n<strong>values</strong>:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.HashMap; // import the HashMap class\n\nHashMap&lt;String, String&gt; capitalCities = new HashMap&lt;String, String&gt;();\n</code></pre>\n</div><hr/>",
        "Add Items": "<p>The <code class=\"w3-codespan\">HashMap</code> class has many useful methods. For example, to \nadd items to it, use the <code class=\"w3-codespan\">put()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Import the HashMap class\nimport java.util.HashMap;\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 // Create a HashMap object called capitalCities\n\u00a0\u00a0\u00a0 HashMap&lt;String, String&gt; capitalCities = new HashMap&lt;String, String&gt;();\n\n\u00a0\u00a0\u00a0 // Add keys and values (Country, City)\n\u00a0\u00a0\u00a0 capitalCities.put(\"England\", \"London\");\n\u00a0\u00a0\u00a0 capitalCities.put(\"Germany\", \"Berlin\");\n\u00a0\u00a0\u00a0 capitalCities.put(\"Norway\", \"Oslo\");\n\u00a0\u00a0\u00a0 capitalCities.put(\"USA\", \"Washington DC\");\n\u00a0\u00a0\u00a0 System.out.println(capitalCities);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_put\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Access an Item": "<p>To access a value in the <code class=\"w3-codespan\">HashMap</code>, use the <code class=\"w3-codespan\">get()</code> method and refer to \nits key:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>capitalCities.get(\"England\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_get\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Remove an Item": "<p>To remove an item, use the <code class=\"w3-codespan\">remove()</code> method \nand refer to the key:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>capitalCities.remove(\"England\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_remove\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>To remove all items, use the <code class=\"w3-codespan\">clear()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>capitalCities.clear();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_clear\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "HashMap Size": "<p>To find out how many items there are, use the <code class=\"w3-codespan\">size()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>capitalCities.size();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_size\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Loop Through a HashMap": "<p>Loop through the items of a <code class=\"w3-codespan\">HashMap</code> with a <strong>for-each</strong> loop.</p><p><strong>Note:</strong> Use the <code class=\"w3-codespan\">keySet()</code> method if you only want the keys, and use the <code class=\"w3-codespan\">values()</code> method if you only want the values:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Print keys\nfor (String i : capitalCities.keySet()) {\n\u00a0 System.out.println(i);\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_loop_key\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Print values\nfor (String i : capitalCities.values()) {\n\u00a0 System.out.println(i);\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_loop_value\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Print keys and values\nfor (String i : capitalCities.keySet()) {\n\u00a0 System.out.println(\"key: \" + i + \" value: \" + capitalCities.get(i));\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_loop_keyvalue\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Other Types": "<p>Keys and values in a HashMap are actually objects. In the examples above, we used objects of type \"String\". Remember that a String in Java is an object (not a primitive type). To use other types, such as int, you must specify an equivalent <a href=\"java_wrapper_classes.asp\">wrapper class</a>: <code class=\"w3-codespan\">Integer</code>. For other primitive types, \nuse: <code class=\"w3-codespan\">Boolean</code> for boolean, <code class=\"w3-codespan\">Character</code> for char, <code class=\"w3-codespan\">Double</code> for double, \netc:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a <code class=\"w3-codespan\">HashMap</code> object called <strong>\npeople</strong> that will store <code class=\"w3-codespan\">String</code> <strong>keys</strong> and <code class=\"w3-codespan\">\nInteger</code>\n<strong>values</strong>:</p>\n<pre class=\"language-java w3-white\"><code>// Import the HashMap class\nimport java.util.HashMap;\n\npublic class Main {\n\u00a0 public static void main(String[] args) {\n\n\u00a0\u00a0\u00a0 // Create a HashMap object called people\n\u00a0\u00a0\u00a0 HashMap&lt;String, Integer&gt; people = new HashMap&lt;String, Integer&gt;();\n\n\n\u00a0\u00a0\u00a0 // Add keys and values (Name, Age)\n\u00a0\u00a0\u00a0 people.put(\"John\", 32);\n\u00a0\u00a0\u00a0 people.put(\"Steve\", 30);\n\u00a0\u00a0\u00a0 people.put(\"Angie\", 33);\n\n\u00a0\u00a0\u00a0 for (String i : people.keySet()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"key: \" + i + \" value: \" + people.get(i));\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashmap_integer\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_linkedlist.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_hashset.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_hashmap.asp"
    },
    {
      "Java HashSet": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a <code class=\"w3-codespan\">HashSet</code> object called <strong>cars</strong> that will store strings:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.HashSet; // Import the HashSet class\n\nHashSet&lt;String&gt; cars = new HashSet&lt;String&gt;();\n</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Import the HashSet class\nimport java.util.HashSet;\n\npublic class Main {\n  public static void main(String[] args) {\n    HashSet&lt;String&gt; cars = new HashSet&lt;String&gt;();\n    cars.add(\"Volvo\");\n    cars.add(\"BMW\");\n    cars.add(\"Ford\");\n    cars.add(\"BMW\");\n    cars.add(\"Mazda\");\n    System.out.println(cars);\n  }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_add\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.contains(\"Mazda\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_contains\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.remove(\"Volvo\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_remove\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.clear();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_clear\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.size();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_size\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>for (String i : cars) {\n  System.out.println(i);\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_for_each\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use a <code class=\"w3-codespan\">HashSet</code> that stores <code class=\"w3-codespan\">Integer</code> objects:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.HashSet;\n\npublic class Main {\n  public static void main(String[] args) {\n\n    // Create a HashSet object called numbers\n    HashSet&lt;Integer&gt; numbers = new HashSet&lt;Integer&gt;();\n\n    // Add values to the set\n    numbers.add(4);\n    numbers.add(7);\n    numbers.add(8);\n\n    // Show which numbers between 1 and 10 are in the set\n    for(int i = 1; i &lt;= 10; i++) {\n      if(numbers.contains(i)) {\n        System.out.println(i + \" was found in the set.\");\n      } else {\n        System.out.println(i + \" was not found in the set.\");\n      }\n    }\n  }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_integer\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java HashSet": "<p>A HashSet is a collection of items where every item is unique, and it is found in the <code class=\"w3-codespan\">java.util</code> \npackage:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a <code class=\"w3-codespan\">HashSet</code> object called <strong>cars</strong> that will store strings:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.HashSet; // Import the HashSet class\n\nHashSet&lt;String&gt; cars = new HashSet&lt;String&gt;();\n</code></pre>\n</div><hr/>",
        "Add Items": "<p>The <code class=\"w3-codespan\">HashSet</code> class has many useful methods. For example, to \nadd items to it, use the <code class=\"w3-codespan\">add()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Import the HashSet class\nimport java.util.HashSet;\n\npublic class Main {\n  public static void main(String[] args) {\n    HashSet&lt;String&gt; cars = new HashSet&lt;String&gt;();\n    cars.add(\"Volvo\");\n    cars.add(\"BMW\");\n    cars.add(\"Ford\");\n    cars.add(\"BMW\");\n    cars.add(\"Mazda\");\n    System.out.println(cars);\n  }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_add\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p><strong>Note:</strong> In the example above, even though BMW is added twice it only appears once in the set\nbecause every item in a set has to be unique.</p><hr/>",
        "Check If an Item Exists": "<p>To check whether an item exists in a HashSet, use the <code class=\"w3-codespan\">contains()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.contains(\"Mazda\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_contains\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Remove an Item": "<p>To remove an item, use the <code class=\"w3-codespan\">remove()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.remove(\"Volvo\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_remove\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>To remove all items, use the <code class=\"w3-codespan\">clear()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.clear();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_clear\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "HashSet Size": "<p>To find out how many items there are, use the <code class=\"w3-codespan\">size</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>cars.size();\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_size\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Loop Through a HashSet": "<p>Loop through the items of an <code class=\"w3-codespan\">HashSet</code> with a <b>for-each</b> loop:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>for (String i : cars) {\n  System.out.println(i);\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_for_each\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Other Types": "<p>Items in an HashSet are actually objects. In the examples above, we created \nitems \n(objects) of type \"String\". Remember that a String in Java is an object (not a primitive type). To use other types, such as int, you must specify an equivalent <a href=\"java_wrapper_classes.asp\">wrapper class</a>: <code class=\"w3-codespan\">Integer</code>. For other primitive types, \nuse: <code class=\"w3-codespan\">Boolean</code> for boolean, <code class=\"w3-codespan\">Character</code> for char, <code class=\"w3-codespan\">Double</code> for double, \netc:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use a <code class=\"w3-codespan\">HashSet</code> that stores <code class=\"w3-codespan\">Integer</code> objects:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.HashSet;\n\npublic class Main {\n  public static void main(String[] args) {\n\n    // Create a HashSet object called numbers\n    HashSet&lt;Integer&gt; numbers = new HashSet&lt;Integer&gt;();\n\n    // Add values to the set\n    numbers.add(4);\n    numbers.add(7);\n    numbers.add(8);\n\n    // Show which numbers between 1 and 10 are in the set\n    for(int i = 1; i &lt;= 10; i++) {\n      if(numbers.contains(i)) {\n        System.out.println(i + \" was found in the set.\");\n      } else {\n        System.out.println(i + \" was not found in the set.\");\n      }\n    }\n  }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_hashset_integer\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_hashmap.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_iterator.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_hashset.asp"
    },
    {
      "Java Iterator": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Import the ArrayList class and the Iterator class\nimport java.util.ArrayList;\nimport java.util.Iterator;\n\npublic class Main {\n  public static void main(String[] args) {\n\n    // Make a collection\n    ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n    cars.add(\"Volvo\");\n    cars.add(\"BMW\");\n    cars.add(\"Ford\");\n    cars.add(\"Mazda\");\n\n    // Get the iterator\n    Iterator&lt;String&gt; it = cars.iterator();\n\n    // Print the first item\n    System.out.println(it.next());\n  }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_iterator\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>while(it.hasNext()) {\n  System.out.println(it.next());\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_iterator_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use an iterator to remove numbers less than 10 from a collection:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\nimport java.util.Iterator;\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;Integer&gt; numbers = new ArrayList&lt;Integer&gt;();\n    numbers.add(12);\n    numbers.add(8);\n    numbers.add(2);\n    numbers.add(23);\n    Iterator&lt;Integer&gt; it = numbers.iterator();\n    while(it.hasNext()) {\n      Integer i = it.next();\n      if(i &lt; 10) {\n        it.remove();\n      }\n    }\n    System.out.println(numbers);\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_iterator_remove\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Iterator": "<p>An <code class=\"w3-codespan\">Iterator</code> is an object that can be used to loop through collections, like <a href=\"java_arraylist.asp\">ArrayList</a>\nand <a href=\"java_hashset.asp\">HashSet</a>. It is called an \"iterator\" because \"iterating\" is the technical term for looping.</p><p>To use an Iterator, you must import it from the <code class=\"w3-codespan\">java.util</code> package.</p><hr/>",
        "Getting an Iterator": "<p>The <code class=\"w3-codespan\">iterator()</code> method can be used to get an <code class=\"w3-codespan\">Iterator</code> for any collection:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>// Import the ArrayList class and the Iterator class\nimport java.util.ArrayList;\nimport java.util.Iterator;\n\npublic class Main {\n  public static void main(String[] args) {\n\n    // Make a collection\n    ArrayList&lt;String&gt; cars = new ArrayList&lt;String&gt;();\n    cars.add(\"Volvo\");\n    cars.add(\"BMW\");\n    cars.add(\"Ford\");\n    cars.add(\"Mazda\");\n\n    // Get the iterator\n    Iterator&lt;String&gt; it = cars.iterator();\n\n    // Print the first item\n    System.out.println(it.next());\n  }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_iterator\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Looping Through a Collection": "<p>To loop through a collection, use the <code class=\"w3-codespan\">hasNext()</code> and <code class=\"w3-codespan\">next()</code> methods of the <code class=\"w3-codespan\">Iterator</code>:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>while(it.hasNext()) {\n  System.out.println(it.next());\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_iterator_loop\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Removing Items from a Collection": "<p>Iterators are designed to easily change the collections that they loop through. The <code class=\"w3-codespan\">remove()</code> method can remove items from a collection while looping.</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use an iterator to remove numbers less than 10 from a collection:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\nimport java.util.Iterator;\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;Integer&gt; numbers = new ArrayList&lt;Integer&gt;();\n    numbers.add(12);\n    numbers.add(8);\n    numbers.add(2);\n    numbers.add(23);\n    Iterator&lt;Integer&gt; it = numbers.iterator();\n    while(it.hasNext()) {\n      Integer i = it.next();\n      if(i &lt; 10) {\n        it.remove();\n      }\n    }\n    System.out.println(numbers);\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_iterator_remove\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p><strong>Note:</strong> Trying to remove items using a <strong>for loop</strong> or a \n<strong>for-each loop</strong> would not work correctly\nbecause the collection is changing size at the same time that the code is trying to loop.</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_hashset.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_wrapper_classes.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_iterator.asp"
    },
    {
      "Java Wrapper Classes": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white w3-border-red w3-pale-red\"><code>ArrayList&lt;int&gt; myNumbers = new ArrayList&lt;int&gt;(); // Invalid\n</code></pre>\n<pre class=\"language-java w3-white\"><code>ArrayList&lt;Integer&gt; myNumbers = new ArrayList&lt;Integer&gt;(); // Valid\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_integer\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Integer myInt = 5;\n\u00a0\u00a0\u00a0 Double myDouble = 5.99;\n\u00a0\u00a0\u00a0 Character myChar = 'A';\n\u00a0\u00a0\u00a0 System.out.println(myInt);\n\u00a0\u00a0\u00a0 System.out.println(myDouble);\n\u00a0\u00a0\u00a0 System.out.println(myChar);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_wrapper_create\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Integer myInt = 5;\n\u00a0\u00a0\u00a0 Double myDouble = 5.99;\n\u00a0\u00a0\u00a0 Character myChar = 'A';\n\u00a0\u00a0\u00a0 System.out.println(myInt.intValue());\n\u00a0\u00a0\u00a0 System.out.println(myDouble.doubleValue());\n\u00a0\u00a0\u00a0 System.out.println(myChar.charValue());\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_wrapper_methods\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Integer myInt = 100;\n\u00a0\u00a0\u00a0 String myString = myInt.toString();\n\u00a0\u00a0\u00a0 System.out.println(myString.length());\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_wrapper_string\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Wrapper Classes": "<p>Wrapper classes provide a way to use primitive data types (<code class=\"w3-codespan\">int</code>, <code class=\"w3-codespan\">boolean</code>, \netc..) as objects.</p><p>The table below shows the primitive type and the equivalent wrapper class:</p><table class=\"ws-table-all notranslate\">\n<tbody><tr>\n<th style=\"width:50%\">Primitive Data Type</th>\n<th>Wrapper Class</th>\n</tr>\n<tr>\n<td>byte</td>\n<td>Byte</td>\n</tr>\n<tr>\n<td>short</td>\n<td>Short</td>\n</tr>\n<tr>\n<td>int</td>\n<td>Integer</td>\n</tr>\n<tr>\n<td>long</td>\n<td>Long</td>\n</tr>\n<tr>\n<td>float</td>\n<td>Float</td>\n</tr>\n<tr>\n<td>double</td>\n<td>Double</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>Boolean</td>\n</tr>\n<tr>\n<td>char</td>\n<td>Character</td>\n</tr>\n</tbody>\n</table><p>Sometimes you must use wrapper classes, for example when working with Collection objects, such \nas <code class=\"w3-codespan\">ArrayList</code>, where primitive types cannot be \nused (the list can only store objects):</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white w3-border-red w3-pale-red\"><code>ArrayList&lt;int&gt; myNumbers = new ArrayList&lt;int&gt;(); // Invalid\n</code></pre>\n<pre class=\"language-java w3-white\"><code>ArrayList&lt;Integer&gt; myNumbers = new ArrayList&lt;Integer&gt;(); // Valid\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_arraylist_integer\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/>",
        "Creating Wrapper Objects": "<p>To create a wrapper object, use the wrapper class instead of the primitive \ntype. To get the value, you can just print the object:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Integer myInt = 5;\n\u00a0\u00a0\u00a0 Double myDouble = 5.99;\n\u00a0\u00a0\u00a0 Character myChar = 'A';\n\u00a0\u00a0\u00a0 System.out.println(myInt);\n\u00a0\u00a0\u00a0 System.out.println(myDouble);\n\u00a0\u00a0\u00a0 System.out.println(myChar);\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_wrapper_create\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/><p>Since you're now working with objects, you can use certain methods to get \ninformation about the specific object.</p><p>For example, the following methods are used to get the value associated with \nthe corresponding wrapper object: <code class=\"w3-codespan\">intValue()</code>, <code class=\"w3-codespan\">byteValue()</code>, <code class=\"w3-codespan\">shortValue()</code>, <code class=\"w3-codespan\">longValue()</code>, \n<code class=\"w3-codespan\">floatValue()</code>, <code class=\"w3-codespan\">doubleValue()</code>, <code class=\"w3-codespan\">charValue()</code>, <code class=\"w3-codespan\">\nbooleanValue()</code>.</p><p>This example will output the same result as the example above:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Integer myInt = 5;\n\u00a0\u00a0\u00a0 Double myDouble = 5.99;\n\u00a0\u00a0\u00a0 Character myChar = 'A';\n\u00a0\u00a0\u00a0 System.out.println(myInt.intValue());\n\u00a0\u00a0\u00a0 System.out.println(myDouble.doubleValue());\n\u00a0\u00a0\u00a0 System.out.println(myChar.charValue());\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_wrapper_methods\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>Another useful method is the <code class=\"w3-codespan\">toString()</code> method, which is used to convert wrapper objects to strings.</p><p>In the following example, we convert an <code class=\"w3-codespan\">Integer</code> to a <code class=\"w3-codespan\">String</code>, and use the <code class=\"w3-codespan\">length()</code> method of the <code class=\"w3-codespan\">String</code> class to output the length of the \"string\":</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 Integer myInt = 100;\n\u00a0\u00a0\u00a0 String myString = myInt.toString();\n\u00a0\u00a0\u00a0 System.out.println(myString.length());\n\u00a0 }\n}\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_wrapper_string\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_iterator.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_try_catch.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_wrapper_classes.asp"
    },
    {
      "Java Exceptions": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>try {\n\u00a0\u00a0//\u00a0 <em>Block of code to try\n</em>}\ncatch(Exception <em>e</em>) {\n\u00a0\u00a0//\u00a0 <em>Block of code to handle errors\n</em>}\n</code></pre>\n</div>",
          "<div class=\"w3-example w3-pale-red\">\n<p>This will generate an error, because <strong>myNumbers[10]</strong> does not exist.</p>\n<pre class=\"language-java w3-white w3-border-red\"><code>public class Main {\n\u00a0 public static void main(String[ ] args) {\n\u00a0\u00a0\u00a0 int[] myNumbers = {1, 2, 3};\n\u00a0\u00a0\u00a0 System.out.println(myNumbers[10]); // error!\n\u00a0 }\n}\n</code></pre>\n<p>The output will be something like this:</p>\n<div class=\"w3-padding notranslate w3-black\">\n<code>\n  Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 10<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  at Main.main(Main.java:4)\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_try_error\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"3,6\"><code>public class Main {\n\u00a0 public static void main(String[ ] args) {\n\u00a0\u00a0\u00a0 try {\n\u00a0\u00a0\u00a0\u00a0\u00a0 int[] myNumbers = {1, 2, 3};\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(myNumbers[10]);\n\u00a0\u00a0\u00a0 } catch (Exception e) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Something went wrong.\");\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black\">\n<code>\nSomething went wrong.</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_try_catch\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"8\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 try {\n\u00a0\u00a0\u00a0\u00a0\u00a0 int[] myNumbers = {1, 2, 3};\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(myNumbers[10]);\n\u00a0\u00a0\u00a0 } catch (Exception e) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Something went wrong.\");\n\u00a0\u00a0\u00a0 } finally {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"The 'try catch' is finished.\");\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black\">\n<code>\nSomething went wrong.<br/>\nThe 'try catch' is finished.\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_try_catch_finally\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Throw an exception if <strong>age</strong> is below 18 (print \"Access \ndenied\"). If age is 18 or older, print \"Access granted\":</p>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>public class Main {\n\u00a0 static void checkAge(int age) {\n\u00a0\u00a0\u00a0 if (age &lt; 18) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 throw new ArithmeticException(\"Access denied - You must be at least 18 years old.\");\n\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0 else {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Access granted - You are old enough!\");\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 checkAge(15); // Set age to 15 (which is below 18...)\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black\" style=\"white-space: nowrap;;overflow-x:scroll;width:100%\">\n<code>\nException in thread \"main\" java.lang.ArithmeticException: Access denied - You must be at least 18 years old.<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at Main.checkAge(Main.java:4)<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at Main.main(Main.java:12)\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_throw\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>checkAge(20);\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black\">\n<code>\nAccess granted - You are old enough!\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_throw2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div>"
        ],
        "Java Exceptions": "<p>When executing Java code, different errors can occur: coding errors made by the programmer, errors due to wrong input, \nor other unforeseeable things.</p><p>When an error occurs, Java will normally stop and generate an error message. The technical term for this is: Java will throw an <b>exception</b> (throw an error).</p><hr/>",
        "Java try and catch": "<p>The <code class=\"w3-codespan\">try</code> statement allows you to define a block of code to be \ntested for errors while it is being executed.</p><p>The <code class=\"w3-codespan\">catch</code> statement allows you to define a block of code to \nbe executed, if an error occurs in the try block.</p><p>The <code class=\"w3-codespan\">try</code> and <code class=\"w3-codespan\">catch</code> keywords \ncome in pairs:</p><div class=\"w3-example\">\n<h3>Syntax</h3>\n<pre class=\"language-java w3-white\"><code>try {\n\u00a0\u00a0//\u00a0 <em>Block of code to try\n</em>}\ncatch(Exception <em>e</em>) {\n\u00a0\u00a0//\u00a0 <em>Block of code to handle errors\n</em>}\n</code></pre>\n</div><p>Consider the following example:</p><div class=\"w3-example w3-pale-red\">\n<p>This will generate an error, because <strong>myNumbers[10]</strong> does not exist.</p>\n<pre class=\"language-java w3-white w3-border-red\"><code>public class Main {\n\u00a0 public static void main(String[ ] args) {\n\u00a0\u00a0\u00a0 int[] myNumbers = {1, 2, 3};\n\u00a0\u00a0\u00a0 System.out.println(myNumbers[10]); // error!\n\u00a0 }\n}\n</code></pre>\n<p>The output will be something like this:</p>\n<div class=\"w3-padding notranslate w3-black\">\n<code>\n  Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: 10<br/>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \n  at Main.main(Main.java:4)\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_try_error\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><p>If an error occurs, we can use <code class=\"w3-codespan\">try...catch</code> to catch the error and execute some code to handle it:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"3,6\"><code>public class Main {\n\u00a0 public static void main(String[ ] args) {\n\u00a0\u00a0\u00a0 try {\n\u00a0\u00a0\u00a0\u00a0\u00a0 int[] myNumbers = {1, 2, 3};\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(myNumbers[10]);\n\u00a0\u00a0\u00a0 } catch (Exception e) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Something went wrong.\");\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black\">\n<code>\nSomething went wrong.</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_try_catch\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><hr/>",
        "Finally": "<p>The <code class=\"w3-codespan\">finally</code> statement lets you execute code, after <code class=\"w3-codespan\">try...catch</code>, regardless of the result:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\" data-line=\"8\"><code>public class Main {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 try {\n\u00a0\u00a0\u00a0\u00a0\u00a0 int[] myNumbers = {1, 2, 3};\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(myNumbers[10]);\n\u00a0\u00a0\u00a0 } catch (Exception e) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Something went wrong.\");\n\u00a0\u00a0\u00a0 } finally {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"The 'try catch' is finished.\");\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black\">\n<code>\nSomething went wrong.<br/>\nThe 'try catch' is finished.\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_try_catch_finally\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><hr>\n\n<h2>Many Exceptions</h2>\n\n<p>You can define as many <code class=\"w3-codespan\">catch</code> blocks as you want:</p>\n\n<div class=\"w3-example\">\n<h3>Syntax</h3>\n<div class=\"w3-code notranslate javaHigh\">\ntry {<br>\n&nbsp;&nbsp;//&nbsp; <em>Block of code to try<br>\n</em>}<br>\ncatch(ExceptionType1 <em>e1</em>) {<br>\n&nbsp;&nbsp;//&nbsp; <em>Block of code to handle errors<br>\n</em>}<br>catch(ExceptionType2 <em>e2</em>) {<br>\n&nbsp;&nbsp;//&nbsp; <em>Block of code to handle errors<br>\n</em>}\n<br>catch(ExceptionType3 <em>e3</em>) {<br>\n&nbsp;&nbsp;//&nbsp; <em>Block of code to handle errors<br>\n</em>}</div>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "The throw keyword": "<p>The <code class=\"w3-codespan\">throw</code> statement allows you to create a custom error.</p><p>The <code class=\"w3-codespan\">throw</code> statement is used together with an <strong>exception type</strong>. There are many exception types available in Java: <code class=\"w3-codespan\">ArithmeticException</code>, \n<code class=\"w3-codespan\">FileNotFoundException</code>, <code class=\"w3-codespan\">ArrayIndexOutOfBoundsException</code>, <code class=\"w3-codespan\">SecurityException</code>, etc:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Throw an exception if <strong>age</strong> is below 18 (print \"Access \ndenied\"). If age is 18 or older, print \"Access granted\":</p>\n<pre class=\"language-java w3-white\" data-line=\"4\"><code>public class Main {\n\u00a0 static void checkAge(int age) {\n\u00a0\u00a0\u00a0 if (age &lt; 18) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 throw new ArithmeticException(\"Access denied - You must be at least 18 years old.\");\n\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0 else {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Access granted - You are old enough!\");\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 checkAge(15); // Set age to 15 (which is below 18...)\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black\" style=\"white-space: nowrap;;overflow-x:scroll;width:100%\">\n<code>\nException in thread \"main\" java.lang.ArithmeticException: Access denied - You must be at least 18 years old.<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at Main.checkAge(Main.java:4)<br/>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0at Main.main(Main.java:12)\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_throw\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><p>If <strong>age</strong> was 20, you would <strong>not</strong> get an exception:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>checkAge(20);\n</code></pre>\n<p>The output will be:</p>\n<div class=\"w3-padding notranslate w3-black\">\n<code>\nAccess granted - You are old enough!\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"tryjava.asp?filename=demo_throw2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</div><hr/><div>\n<form action=\"exercise.asp?filename=exercise_try_catch1\" autocomplete=\"off\" id=\"w3-exerciseform\" method=\"post\" spellcheck=\"false\" target=\"_blank\">\n<h2>Test Yourself With Exercises</h2>\n<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing parts to handle the error in the code below.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/> {\n  int[] myNumbers = {1, 2, 3};\n  System.out.println(myNumbers[10]);\n} <input maxlength=\"5\" name=\"ex2\" style=\"width: 55px;\"/> (Exception e) {\n  System.out.println(\"Something went wrong.\");\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_try_catch1\" target=\"_blank\">Start the Exercise</a></p>\n</div>\n</form>\n</div><hr/><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_wrapper_classes.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_regex.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>",
        "Test Yourself With Exercises": "<div class=\"exercisewindow\">\n<h2>Exercise:</h2>\n<p>Insert the missing parts to handle the error in the code below.</p>\n<div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/> {\n  int[] myNumbers = {1, 2, 3};\n  System.out.println(myNumbers[10]);\n} <input maxlength=\"5\" name=\"ex2\" style=\"width: 55px;\"/> (Exception e) {\n  System.out.println(\"Something went wrong.\");\n}\n</pre>\n</div>\n<br/>\n<button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button>\n<p><a href=\"exercise.asp?filename=exercise_try_catch1\" target=\"_blank\">Start the Exercise</a></p>\n</div>",
        "Exercise:": "<p>Insert the missing parts to handle the error in the code below.</p><div class=\"exerciseprecontainer\">\n<pre style=\"overflow: auto;\">\n<input maxlength=\"3\" name=\"ex1\" style=\"width: 35px;\"/> {\n  int[] myNumbers = {1, 2, 3};\n  System.out.println(myNumbers[10]);\n} <input maxlength=\"5\" name=\"ex2\" style=\"width: 55px;\"/> (Exception e) {\n  System.out.println(\"Something went wrong.\");\n}\n</pre>\n</div><br/><button class=\"w3-btn w3-margin-bottom\" type=\"submit\">Submit Answer \u00bb</button><p><a href=\"exercise.asp?filename=exercise_try_catch1\" target=\"_blank\">Start the Exercise</a></p>"
      },
      "url": "java_try_catch.asp"
    },
    {
      "Java RegEx": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Find out if there are any occurrences of the word \"w3schools\" in a sentence:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class Main {\n  public static void main(String[] args) {\n    Pattern pattern = Pattern.compile(\"w3schools\", Pattern.CASE_INSENSITIVE);\n    Matcher matcher = pattern.matcher(\"Visit W3Schools!\");\n    boolean matchFound = matcher.find();\n    if(matchFound) {\n      System.out.println(\"Match found\");\n    } else {\n      System.out.println(\"Match not found\");\n    }\n  }\n}\n// Outputs Match found\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_regex\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "What is a Regular Expression?": "<p>A regular expression is a sequence of characters that forms a search pattern.\nWhen you search for data in a text, you can use this search pattern to describe what you\nare searching for.</p><p>A regular expression can be a single character, or a more complicated pattern.</p><p>Regular expressions can be used to perform all types of <strong>text search</strong> and <strong>text replace</strong>\noperations.</p><p>Java does not have a built-in Regular Expression class, but we can import the <code class=\"w3-codespan\">java.util.regex</code> \npackage to work with regular expressions. The package includes the following \nclasses:</p><ul>\n<li><code class=\"w3-codespan\">Pattern</code> Class - Defines a pattern (to be used in a search)</li>\n<li><code class=\"w3-codespan\">Matcher</code> Class - Used to search for the \npattern</li>\n<li><code class=\"w3-codespan\">PatternSyntaxException</code> Class - Indicates syntax error in a regular \nexpression pattern</li>\n</ul><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Find out if there are any occurrences of the word \"w3schools\" in a sentence:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class Main {\n  public static void main(String[] args) {\n    Pattern pattern = Pattern.compile(\"w3schools\", Pattern.CASE_INSENSITIVE);\n    Matcher matcher = pattern.matcher(\"Visit W3Schools!\");\n    boolean matchFound = matcher.find();\n    if(matchFound) {\n      System.out.println(\"Match found\");\n    } else {\n      System.out.println(\"Match not found\");\n    }\n  }\n}\n// Outputs Match found\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_regex\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><h3>Example Explained</h3><p>In this example, The word \"w3schools\" is being searched for in a sentence.</p><p>First, the pattern is created using the <code class=\"w3-codespan\">Pattern.compile()</code> method. The first parameter\nindicates which pattern is being searched for and the second parameter has a flag to\nindicates that the search should be case-insensitive. The second parameter is optional.</p><p>The <code class=\"w3-codespan\">matcher()</code> method is used to search for the pattern in a string. It returns a Matcher\nobject which contains information about the search that was performed.</p><p>The <code class=\"w3-codespan\">find()</code> method returns true if the pattern was found in the string and false if it was not\nfound.</p><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Flags": "<p>Flags in the <code class=\"w3-codespan\">compile()</code> method change how the search is performed. Here are a few of\nthem:</p><ul>\n<li><code class=\"w3-codespan\">Pattern.CASE_INSENSITIVE</code> - The case of letters will be ignored when performing\na search.</li>\n<li><code class=\"w3-codespan\">Pattern.LITERAL</code> - Special characters in the pattern will not have any special\nmeaning and will be treated as ordinary characters when performing a search.</li>\n<li><code class=\"w3-codespan\">Pattern.UNICODE_CASE</code> - Use it together with the <code class=\"w3-codespan\">CASE_INSENSITIVE</code> flag to\nalso ignore the case of letters outside of the English alphabet</li>\n</ul><hr/>",
        "Regular Expression Patterns": "<p>The first parameter of the <code class=\"w3-codespan\">Pattern.compile()</code> method is the pattern. It describes what\nis being searched for.</p><p>Brackets are used to find a range of characters:</p><table class=\"ws-table-all notranslate\">\n<tr>\n<th style=\"width:22%\">Expression</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>[abc]</td>\n<td>Find one character from the options between the brackets</td>\n</tr>\n<tr>\n<td>[^abc]</td>\n<td>Find one character NOT between the brackets</td>\n</tr>\n<tr>\n<td>[0-9]</td>\n<td>Find one character from the range 0 to 9</td>\n</tr>\n</table>",
        "Metacharacters": "<p>Metacharacters are characters with a special meaning:</p><table class=\"ws-table-all notranslate\">\n<tr>\n<th style=\"width:22%\">Metacharacter</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>|</td>\n<td>Find a match for any one of the patterns separated by | as in: cat|dog|fish</td>\n</tr>\n<tr>\n<td>.</td>\n<td>Find just one instance of any character</td>\n</tr>\n<tr>\n<td>^</td>\n<td>Finds a match as the beginning of a string as in: ^Hello</td>\n</tr>\n<tr>\n<td>$</td>\n<td>Finds a match at the end of the string as in: World$</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td>Find a digit</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>Find a whitespace character</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>Find a match at the beginning of a word like this: \\bWORD, or at the end of a word like this: WORD\\b</td>\n</tr>\n<tr>\n<td>\\uxxxx</td>\n<td>Find the Unicode character specified by the hexadecimal number xxxx</td>\n</tr>\n</table>",
        "Quantifiers": "<p>Quantifiers define quantities:</p><table class=\"ws-table-all notranslate\">\n<tr>\n<th style=\"width:22%\">Quantifier</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>n+</td>\n<td>Matches any string that contains at least one <em>n</em></td>\n</tr>\n<tr>\n<td>n*</td>\n<td>Matches any string that contains zero or more occurrences of <em>n</em></td>\n</tr>\n<tr>\n<td>n?</td>\n<td>Matches any string that contains zero or one occurrences of <em>n</em></td>\n</tr>\n<tr>\n<td>n{x}</td>\n<td>Matches any string that contains a sequence of <i>X</i> <i>n</i>'s</td>\n</tr>\n<tr>\n<td>n{x,y}</td>\n<td>Matches any string that contains a sequence of X to Y <i>n</i>'s</td>\n</tr>\n<tr>\n<td>n{x,}</td>\n<td>Matches any string that contains a sequence of at least X <i>n</i>'s</td>\n</tr>\n</table><div class=\"w3-note w3-panel\">\n<p><strong>Note:</strong> If your expression needs to search for one of the special characters you can use a\nbackslash ( \\ ) to escape them. In Java, backslashes in strings need to be escaped\nthemselves, so two backslashes are needed to escape special characters.\nFor example, to search for one or more question marks you can use the following\nexpression: \"\\\\?\"</p>\n</div>\n<hr>\n<h2>Matches</h2>\n<p>A match is a part of the string which matches a pattern. After using the <code class=\"w3-codespan\">Matcher</code>'s\n<code class=\"w3-codespan\">find()</code> method, the <code class=\"w3-codespan\">group()</code> method will return the part of the string that was found.</p>\n\n<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class MyClass {\n  public static void main(String[] args) {\n    Pattern pattern = Pattern.compile(&quot;w3schools&quot;,\n    Pattern.CASE_INSENSITIVE);\n    Matcher matcher = pattern.matcher(&quot;Visit W3Schools!&quot;);\n    if(matcher.find()) {\n      String match = matcher.group();\n      System.out.println(match);\n    }\n  }\n}\n\n// Outputs W3Schools\n</code></pre>\n<p>\n<a target=\"_blank\" class=\"w3-btn\" href=\"tryjava.asp?filename=demo_regex_matches\">Try it Yourself &raquo;</a>\n</p>\n</div>\n<p>Each call to <code class=\"w3-codespan\">find()</code> will search for the next match in the string until no more matches are\nfound. This can be used to find all of the matches in a string and not just the first one.</p>\n\n<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use <code class=\"w3-codespan\">find()</code> and <code class=\"w3-codespan\">group()</code> to list all numbers found in a sentence.</p>\n<pre class=\"language-java w3-white\"><code>import java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class MyClass {\n  public static void main(String[] args) {\n    Pattern pattern = Pattern.compile(&quot;w3schools&quot;,\n    Pattern.CASE_INSENSITIVE);\n    Matcher matcher = pattern.matcher(&quot;Visit W3Schools!&quot;);\n    if(matcher.find()) {\n      String match = matcher.group();\n      System.out.println(match);\n    }\n  }\n}\n\n// Outputs W3Schools\n</code></pre>\n<p>\n<a target=\"_blank\" class=\"w3-btn\" href=\"tryjava.asp?filename=demo_regex_matches2\">Try it Yourself &raquo;</a>\n</p>\n</div>\n<hr>\n\n<h2>Groups</h2>\n\n<p>In regular expressions, groups are delimited by parentheses <code class=\"w3-codespan\">( )</code>. Groups can be used to\napply quantifiers to entire patterns and can be used to select part of a matched pattern.</p>\n<p>The <code class=\"w3-codespan\">Matcher</code> object's <code class=\"w3-codespan\">group()</code> method can be used to show only the part of the match\nwhich belongs to a group.</p>\n<p>Using 0 as a parameter in the <code class=\"w3-codespan\">group()</code> method returns a match of the whole pattern, while\n1, 2 and so on will return matches of the groups given by the order of their opening\nparentheses in the pattern.</p>\n\n<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use <code class=\"w3-codespan\">find()</code> and <code class=\"w3-codespan\">group()</code> to list all numbers found in a sentence.</p>\n<pre class=\"language-java w3-white\"><code>import java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class MyClass {\n  public static void main(String[] args) {\n    Pattern pattern = Pattern.compile(&quot;w3schools&quot;,\n    Pattern.CASE_INSENSITIVE);\n    Matcher matcher = pattern.matcher(&quot;Visit W3Schools!&quot;);\n    if(matcher.find()) {\n      String match = matcher.group();\n      System.out.println(match);\n    }\n  }\n}\n\n// Outputs W3Schools\n</code></pre>\n<p>\n<a target=\"_blank\" class=\"w3-btn\" href=\"tryjava.asp?filename=demo_regex_matches2\">Try it Yourself &raquo;</a>\n</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_try_catch.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_threads.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_regex.asp"
    },
    {
      "Java Threads": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Extend Syntax</h3>\n<pre class=\"language-java w3-white\"><code>public class Main extends Thread {\n  public void run() {\n    System.out.println(\"This code is running in a thread\");\n  </code>}<code>\n</code>}</pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Implement Syntax</h3>\n<pre class=\"language-java w3-white\"><code>public class Main implements Runnable {\n  public void run() {\n    System.out.println(\"This code is running in a thread\");\n  }\n}</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Extend Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main extends Thread {\n  public static void main(String[] args) {\n    Main thread = new Main();\n    thread.start();\n    System.out.println(\"This code is outside of the thread\");\n  }\n  public void run() {\n    System.out.println(\"This code is running in a thread\");\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_threads\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Implement Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main implements Runnable {\n  public static void main(String[] args) {\n    Main obj = new Main();\n    Thread thread = new Thread(obj);\n    thread.start();\n    System.out.println(\"This code is outside of the thread\");\n  }\n  public void run() {\n    System.out.println(\"This code is running in a thread\");\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_threads_runnable\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>A code example where the value of the variable <strong>amount</strong> is unpredictable:</p>\n<pre class=\"language-java w3-white\"><code>public class Main extends Thread {\n  public static int amount = 0;\n\n  public static void main(String[] args) {\n    Main thread = new Main();\n    thread.start();\n    System.out.println(amount);\n    amount++;\n    System.out.println(amount);\n  </code>}<code>\n\n  public void run() {\n    amount++;\n  </code>}<code>\n</code>}</pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_threads_concurrency\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use <code class=\"w3-codespan\">isAlive()</code> to prevent concurrency problems:</p>\n<pre class=\"language-java w3-white\"><code>public class Main extends Thread {\n  public static int amount = 0;\n\n  public static void main(String[] args) {\n    Main thread = new Main();\n    thread.start();\n    // Wait for the thread to finish\n    while(thread.isAlive()) {\n    System.out.println(\"Waiting...\");\n  </code>}<code>\n  // Update amount and print its value\n  System.out.println(\"Main: \" + amount);\n  amount++;\n  System.out.println(\"Main: \" + amount);\n  </code>}<code>\n  public void run() {\n    amount++;\n  </code>}<code>\n</code>}</pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_threads_concurrency2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Threads": "<p>Threads allows a program to operate more efficiently by doing multiple things at the same\ntime.</p><p>Threads can be used to perform complicated tasks in the background without interrupting\nthe main program.</p><hr/>",
        "Creating a Thread": "<p>There are two ways to create a thread.</p><p>It can be created by extending the <code class=\"w3-codespan\">Thread</code> class and overriding its <code class=\"w3-codespan\">run()</code> \nmethod:</p><div class=\"w3-example\">\n<h3>Extend Syntax</h3>\n<pre class=\"language-java w3-white\"><code>public class Main extends Thread {\n  public void run() {\n    System.out.println(\"This code is running in a thread\");\n  </code>}<code>\n</code>}</pre>\n</div><p>Another way to create a thread is to implement the <code class=\"w3-codespan\">Runnable</code> interface:</p><div class=\"w3-example\">\n<h3>Implement Syntax</h3>\n<pre class=\"language-java w3-white\"><code>public class Main implements Runnable {\n  public void run() {\n    System.out.println(\"This code is running in a thread\");\n  }\n}</code></pre>\n</div><hr/>",
        "Running Threads": "<p>If the class extends the <code class=\"w3-codespan\">Thread</code> class, the thread can be run by creating an instance of the\nclass and call its <code class=\"w3-codespan\">start()</code> method:</p><div class=\"w3-example\">\n<h3>Extend Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main extends Thread {\n  public static void main(String[] args) {\n    Main thread = new Main();\n    thread.start();\n    System.out.println(\"This code is outside of the thread\");\n  }\n  public void run() {\n    System.out.println(\"This code is running in a thread\");\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_threads\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>If the class implements the <code class=\"w3-codespan\">Runnable</code> interface, the thread can be run by passing an\ninstance of the class to a <code class=\"w3-codespan\">Thread</code> object's constructor and then calling the thread's\n<code class=\"w3-codespan\">start()</code> method:</p><div class=\"w3-example\">\n<h3>Implement Example</h3>\n<pre class=\"language-java w3-white\"><code>public class Main implements Runnable {\n  public static void main(String[] args) {\n    Main obj = new Main();\n    Thread thread = new Thread(obj);\n    thread.start();\n    System.out.println(\"This code is outside of the thread\");\n  }\n  public void run() {\n    System.out.println(\"This code is running in a thread\");\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_threads_runnable\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><div class=\"w3-note w3-panel\">\n<p><strong>Differences between \"extending\" and \"implementing\" Threads</strong></p>\n<p>The major difference is that when a class extends the Thread class, you cannot extend any other class, but by implementing the Runnable interface, \nit is possible to extend from another class as well, like: class <code class=\"w3-codespan\">MyClass extends OtherClass implements Runnable</code>.</p>\n</div><hr/>",
        "Concurrency Problems": "<p>Because threads run at the same time as other parts of the program, there is no way to\nknow in which order the code will run. When the threads and main program are reading\nand writing the same variables, the values are unpredictable. The problems that result\nfrom this are called concurrency problems.</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>A code example where the value of the variable <strong>amount</strong> is unpredictable:</p>\n<pre class=\"language-java w3-white\"><code>public class Main extends Thread {\n  public static int amount = 0;\n\n  public static void main(String[] args) {\n    Main thread = new Main();\n    thread.start();\n    System.out.println(amount);\n    amount++;\n    System.out.println(amount);\n  </code>}<code>\n\n  public void run() {\n    amount++;\n  </code>}<code>\n</code>}</pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_threads_concurrency\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>To avoid concurrency problems, it is best to share as few attributes between threads as\npossible. If attributes need to be shared, one possible solution is to use the <code class=\"w3-codespan\">isAlive()</code>\nmethod of the thread to check whether the thread has finished running before using any \nattributes that the thread can change.</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use <code class=\"w3-codespan\">isAlive()</code> to prevent concurrency problems:</p>\n<pre class=\"language-java w3-white\"><code>public class Main extends Thread {\n  public static int amount = 0;\n\n  public static void main(String[] args) {\n    Main thread = new Main();\n    thread.start();\n    // Wait for the thread to finish\n    while(thread.isAlive()) {\n    System.out.println(\"Waiting...\");\n  </code>}<code>\n  // Update amount and print its value\n  System.out.println(\"Main: \" + amount);\n  amount++;\n  System.out.println(\"Main: \" + amount);\n  </code>}<code>\n  public void run() {\n    amount++;\n  </code>}<code>\n</code>}</pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_threads_concurrency2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_regex.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_lambda.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_threads.asp"
    },
    {
      "Java Lambda": {
        "examples": [
          "<div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code><em>parameter</em> -&gt; <em>expression</em></code></pre>\n</div>",
          "<div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code><em>(parameter1, parameter2)</em> -&gt; <em>expression</em></code></pre>\n</div>",
          "<div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code><em>(parameter1, parameter2)</em> -&gt; { <em>code block</em> }</code></pre>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use a lambda expression in the <code class=\"w3-codespan\">ArrayList</code>'s <code class=\"w3-codespan\">forEach()</code> method to print\nevery item in the list:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;Integer&gt; numbers = new ArrayList&lt;Integer&gt;();\n    numbers.add(5);\n    numbers.add(9);\n    numbers.add(8);\n    numbers.add(1);\n    numbers.forEach( (n) -&gt; { System.out.println(n); } );\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_lambda\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use Java's <code class=\"w3-codespan\">Consumer</code> interface to store a lambda expression in a variable:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\nimport java.util.function.Consumer;\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;Integer&gt; numbers = new ArrayList&lt;Integer&gt;();\n    numbers.add(5);\n    numbers.add(9);\n    numbers.add(8);\n    numbers.add(1);\n    Consumer&lt;Integer&gt; method = (n) -&gt; { System.out.println(n); };\n    numbers.forEach( method );\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_lambda2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a method which takes a lambda expression as a parameter:</p>\n<pre class=\"language-java w3-white\"><code>interface StringFunction {\n  String run(String str);\n</code>}<code>\n\npublic class Main {\n  public static void main(String[] args) {\n    StringFunction exclaim = (s) -&gt; s + \"!\";\n    StringFunction ask = (s) -&gt; s + \"?\";\n    printFormatted(\"Hello\", exclaim);\n    printFormatted(\"Hello\", ask);\n  </code>}<code>\n  public static void printFormatted(String str, StringFunction format) {\n    String result = format.run(str);\n    System.out.println(result);\n  </code>}<code>\n</code>}</pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_lambda3\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div>"
        ],
        "Java Lambda Expressions": "<p>Lambda Expressions were added in Java 8.</p><p>A lambda expression is a short block of code which takes in parameters and returns a\nvalue. Lambda expressions are similar to methods, but they do not need a name and they\ncan be implemented right in the body of a method.</p><hr/>",
        "Syntax": "<p>The simplest lambda expression contains a single parameter and an expression:</p><div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code><em>parameter</em> -&gt; <em>expression</em></code></pre>\n</div><p>To use more than one parameter, wrap them in parentheses:</p><div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code><em>(parameter1, parameter2)</em> -&gt; <em>expression</em></code></pre>\n</div><p>Expressions are limited. They have to immediately return a value, and they cannot contain\nvariables, assignments or statements such as <code class=\"w3-codespan\">if</code> or <code class=\"w3-codespan\">for</code>. In order to do more complex\noperations, a code block can be used with curly braces. If the lambda expression needs to\nreturn a value, then the code block should have a <code class=\"w3-codespan\">return</code> statement.</p><div class=\"w3-example\">\n<pre class=\"language-java w3-white\"><code><em>(parameter1, parameter2)</em> -&gt; { <em>code block</em> }</code></pre>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Using Lambda Expressions": "<p>Lambda expressions are usually passed as parameters to a function:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use a lambda expression in the <code class=\"w3-codespan\">ArrayList</code>'s <code class=\"w3-codespan\">forEach()</code> method to print\nevery item in the list:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;Integer&gt; numbers = new ArrayList&lt;Integer&gt;();\n    numbers.add(5);\n    numbers.add(9);\n    numbers.add(8);\n    numbers.add(1);\n    numbers.forEach( (n) -&gt; { System.out.println(n); } );\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_lambda\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>Lambda expressions can be stored in variables if the variable's type is an interface which\nhas only one method. The lambda expression should have the same number of\nparameters and the same return type as that method. Java has many of these kinds of\ninterfaces built in, such as the <code class=\"w3-codespan\">Consumer</code> interface (found in the <code class=\"w3-codespan\">java.util</code> package) used by lists.</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Use Java's <code class=\"w3-codespan\">Consumer</code> interface to store a lambda expression in a variable:</p>\n<pre class=\"language-java w3-white\"><code>import java.util.ArrayList;\nimport java.util.function.Consumer;\n\npublic class Main {\n  public static void main(String[] args) {\n    ArrayList&lt;Integer&gt; numbers = new ArrayList&lt;Integer&gt;();\n    numbers.add(5);\n    numbers.add(9);\n    numbers.add(8);\n    numbers.add(1);\n    Consumer&lt;Integer&gt; method = (n) -&gt; { System.out.println(n); };\n    numbers.forEach( method );\n  }\n}</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_lambda2\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><p>To use a lambda expression in a method, the method should have a parameter with a\nsingle-method interface as its type. Calling the interface's method will run the lambda\nexpression:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<p>Create a method which takes a lambda expression as a parameter:</p>\n<pre class=\"language-java w3-white\"><code>interface StringFunction {\n  String run(String str);\n</code>}<code>\n\npublic class Main {\n  public static void main(String[] args) {\n    StringFunction exclaim = (s) -&gt; s + \"!\";\n    StringFunction ask = (s) -&gt; s + \"?\";\n    printFormatted(\"Hello\", exclaim);\n    printFormatted(\"Hello\", ask);\n  </code>}<code>\n  public static void printFormatted(String str, StringFunction format) {\n    String result = format.run(str);\n    System.out.println(result);\n  </code>}<code>\n</code>}</pre>\n<p>\n<a class=\"w3-btn\" href=\"tryjava.asp?filename=demo_lambda3\" target=\"_blank\">Try it Yourself \u00bb</a>\n</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_threads.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_files.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_lambda.asp"
    }
  ],
  "Java File Handling": [
    {
      "Java Files": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File;\u00a0 // Import the File class\n\nFile myObj = new File(\"filename.txt\");\u00a0// Specify the filename\n</code></pre>\n</div>"
        ],
        "Java File Handling": "<p>The <code class=\"w3-codespan\">File</code> class from the <code class=\"w3-codespan\">java.io</code> package, allows \nus to work with files.</p><p>To use the <code class=\"w3-codespan\">File</code> class, create an object of \nthe class, and specify the filename or directory name: \n\n<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File;\u00a0 // Import the File class\n\nFile myObj = new File(\"filename.txt\");\u00a0// Specify the filename\n</code></pre>\n</div>\n<div class=\"w3-note w3-panel\">\n<p>If you don't know what a package is, read our <a href=\"java_packages.asp\">Java Packages Tutorial</a>.</p>\n</div>\n<p>The <code class=\"w3-codespan\">File</code> class has many useful methods for creating and getting information \nabout files. \nFor example:</p>\n<div class=\"w3-responsive\" style=\"margin:-16px 0;\">\n<table class=\"ws-table-all notranslate\">\n<tbody>\n<tr>\n<th style=\"width:25%\">Method</th>\n<th style=\"width:15%\">Type</th>\n<th style=\"width:60%\">Description</th>\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">canRead()</code></td>\n<td>Boolean</td>\n<td>Tests whether the file is readable or not</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">canWrite()</code></td>\n<td>Boolean</td>\n<td>Tests whether the file is writable or not</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">createNewFile()</code></td>\n<td>Boolean</td>\n<td>Creates an empty file</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdate\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">delete()</code></td>\n<td>Boolean</td>\n<td>Deletes a file</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">exists()</code></td>\n<td>Boolean</td>\n<td>Tests whether the file exists</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">getName()</code></td>\n<td>String</td>\n<td>Returns the name of the file</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdate\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">getAbsolutePath()</code></td>\n<td>String</td>\n<td>Returns the absolute pathname of the file</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">length()</code></td>\n<td>Long</td>\n<td>Returns the size of the file in bytes</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">list()</code></td>\n<td>String[]</td>\n<td>Returns an array of the files in the directory</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n<tr>\n<td><code class=\"w3-codespan\">mkdir()</code></td>\n<td>Boolean</td>\n<td>Creates a directory</td>\n<!--<td><a target=\"_blank\" class=\"w3-btn btnsmall btnsmall\" href=\"tryjava.asp?filename=demo_date_localdatetime\">Try it &raquo;</a></td>-->\n</tr>\n</tbody>\n</table>\n</div>\n<p>You will learn how to create, write, read and delete files in the next chapters:</p>\n<div class=\"w3-bar-block ws-grey\">\n<a class=\"w3-bar-item w3-button w3-border-bottom\" href=\"java_files_create.asp\">Create/Write Files \u00bb</a>\n<a class=\"w3-bar-item w3-button w3-border-bottom\" href=\"java_files_read.asp\">Read Files \u00bb</a>\n<a class=\"w3-bar-item w3-button\" href=\"java_files_delete.asp\">Delete Files \u00bb</a>\n</div>\n<br/>\n<div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_lambda.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_files_create.asp\">Next \u276f</a>\n</div>\n<div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>\n</p>"
      },
      "url": "java_files.asp"
    },
    {
      "Java Create/Write Files": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File;\u00a0 // Import the File class\nimport java.io.IOException;\u00a0 // Import the IOException class to handle errors\n\npublic class CreateFile {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 try {\n\u00a0\u00a0\u00a0\u00a0\u00a0 File myObj = new File(\"filename.txt\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 if (myObj.createNewFile()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"File created: \" + myObj.getName());\n\u00a0\u00a0\u00a0\u00a0\u00a0 } else {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"File already exists.\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0 } catch (IOException e) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"An error occurred.\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 e.printStackTrace();\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>File created: filename.txt</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_create\" target=\"_blank\">Run Example \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>File myObj = new File(\"C:\\\\Users\\\\MyName\\\\filename.txt\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_files_create2\" target=\"_blank\">Run Example \u00bb</a>\n</p></div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.FileWriter;\u00a0\u00a0 // Import the FileWriter class\nimport java.io.IOException;\u00a0 // Import the IOException class to handle errors\n\npublic class WriteToFile {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 try {\n\u00a0\u00a0\u00a0\u00a0\u00a0 FileWriter myWriter = new FileWriter(\"filename.txt\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 myWriter.write(\"Files in Java might be tricky, but it is fun enough!\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 myWriter.close();\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Successfully wrote to the file.\");\n\u00a0\u00a0\u00a0 } catch (IOException e) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"An error occurred.\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 e.printStackTrace();\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>\nSuccessfully wrote to the file.\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_write\" target=\"_blank\">Run Example \u00bb</a>\n</div>"
        ],
        "Create a File": "<p>To create a file in Java, you can use the <code class=\"w3-codespan\">createNewFile()</code> method. This method returns a \nboolean value: <code class=\"w3-codespan\">true</code> if the file was successfully created, and <code class=\"w3-codespan\">false</code> if the file \nalready exists. Note that the method is enclosed in a <code class=\"w3-codespan\">try...catch</code> \nblock. This is necessary because it throws an <code class=\"w3-codespan\">IOException</code> if an error occurs (if the \nfile cannot be created for some reason):</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File;\u00a0 // Import the File class\nimport java.io.IOException;\u00a0 // Import the IOException class to handle errors\n\npublic class CreateFile {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 try {\n\u00a0\u00a0\u00a0\u00a0\u00a0 File myObj = new File(\"filename.txt\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 if (myObj.createNewFile()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"File created: \" + myObj.getName());\n\u00a0\u00a0\u00a0\u00a0\u00a0 } else {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"File already exists.\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0 } catch (IOException e) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"An error occurred.\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 e.printStackTrace();\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>File created: filename.txt</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_create\" target=\"_blank\">Run Example \u00bb</a>\n</div><p>To create a file in a specific directory (requires permission), specify the path of the file and use double backslashes to escape the \"<code class=\"w3-codespan\">\\</code>\" character (for Windows). On Mac and Linux you can just write the path, like: /Users/name/filename.txt</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>File myObj = new File(\"C:\\\\Users\\\\MyName\\\\filename.txt\");\n</code></pre>\n<p>\n<a class=\"w3-btn\" href=\"showjava.asp?filename=demo_files_create2\" target=\"_blank\">Run Example \u00bb</a>\n</p></div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Write To a File": "<p>In the \nfollowing example, we use the <code class=\"w3-codespan\">FileWriter</code> class together with its <code class=\"w3-codespan\">write()</code> method \nto write some text to the file we created in the example above. Note that when you are done writing to the file, \nyou should close it \nwith the <code class=\"w3-codespan\">close()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.FileWriter;\u00a0\u00a0 // Import the FileWriter class\nimport java.io.IOException;\u00a0 // Import the IOException class to handle errors\n\npublic class WriteToFile {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 try {\n\u00a0\u00a0\u00a0\u00a0\u00a0 FileWriter myWriter = new FileWriter(\"filename.txt\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 myWriter.write(\"Files in Java might be tricky, but it is fun enough!\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 myWriter.close();\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Successfully wrote to the file.\");\n\u00a0\u00a0\u00a0 } catch (IOException e) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"An error occurred.\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 e.printStackTrace();\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>\nSuccessfully wrote to the file.\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_write\" target=\"_blank\">Run Example \u00bb</a>\n</div><hr/><p>To read the file above, go to the <a href=\"java_files_read.asp\">Java Read Files</a> chapter.</p><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_files.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_files_read.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_files_create.asp"
    },
    {
      "Java Read Files": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File;\u00a0 // Import the File class\nimport java.io.FileNotFoundException;\u00a0 // Import this class to handle errors\nimport java.util.Scanner; // Import the Scanner class to read text files\n\npublic class ReadFile {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 try {\n\u00a0\u00a0\u00a0\u00a0\u00a0 File myObj = new File(\"filename.txt\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 Scanner myReader = new Scanner(myObj);\n\u00a0\u00a0\u00a0\u00a0\u00a0 while (myReader.hasNextLine()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String data = myReader.nextLine();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(data);\n\u00a0\u00a0\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0\u00a0\u00a0 myReader.close();\n\u00a0\u00a0\u00a0 } catch (FileNotFoundException e) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"An error occurred.\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 e.printStackTrace();\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>\nFiles in Java might be tricky, but it is fun enough!</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_read\" target=\"_blank\">Run Example \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File;\u00a0 // Import the File class\n\npublic class GetFileInfo { <br/>\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 File myObj = new File(\"filename.txt\");\n\u00a0\u00a0\u00a0 if (myObj.exists()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"File name: \" + myObj.getName());\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Absolute path: \" + myObj.getAbsolutePath());\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Writeable: \" + myObj.canWrite());\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Readable \" + myObj.canRead());\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"File size in bytes \" + myObj.length());\n\u00a0\u00a0\u00a0 } else {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"The file does not exist.\");\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>\nFile name: filename.txt<br/>\nAbsolute path: C:\\Users\\MyName\\filename.txt<br/>\nWriteable: true<br/>\nReadable: true<br/>\nFile size in bytes: 0\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_get\" target=\"_blank\">Run Example \u00bb</a>\n</div>"
        ],
        "Read a File": "<p>In the previous chapter, you learned how to create and write to a file.</p><p>In the \nfollowing example, we use the <code class=\"w3-codespan\">Scanner</code> class to read the contents of the text file we created in the previous chapter:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File;\u00a0 // Import the File class\nimport java.io.FileNotFoundException;\u00a0 // Import this class to handle errors\nimport java.util.Scanner; // Import the Scanner class to read text files\n\npublic class ReadFile {\n\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 try {\n\u00a0\u00a0\u00a0\u00a0\u00a0 File myObj = new File(\"filename.txt\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 Scanner myReader = new Scanner(myObj);\n\u00a0\u00a0\u00a0\u00a0\u00a0 while (myReader.hasNextLine()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String data = myReader.nextLine();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(data);\n\u00a0\u00a0\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0\u00a0\u00a0 myReader.close();\n\u00a0\u00a0\u00a0 } catch (FileNotFoundException e) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"An error occurred.\");\n\u00a0\u00a0\u00a0\u00a0\u00a0 e.printStackTrace();\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>\nFiles in Java might be tricky, but it is fun enough!</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_read\" target=\"_blank\">Run Example \u00bb</a>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"div-gpt-ad-1493883843099-0\" style=\"display: inline-block\">\n<script>\n    uic_r_g();\n    </script>\n</div>\n</div><hr/>",
        "Get File Information": "<p>To get more information about a file, use any of the <code class=\"w3-codespan\">File</code> methods:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File;\u00a0 // Import the File class\n\npublic class GetFileInfo { <br/>\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0 File myObj = new File(\"filename.txt\");\n\u00a0\u00a0\u00a0 if (myObj.exists()) {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"File name: \" + myObj.getName());\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Absolute path: \" + myObj.getAbsolutePath());\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Writeable: \" + myObj.canWrite());\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"Readable \" + myObj.canRead());\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"File size in bytes \" + myObj.length());\n\u00a0\u00a0\u00a0 } else {\n\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(\"The file does not exist.\");\n\u00a0\u00a0\u00a0 }\n\u00a0 }\n}\n</code></pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>\nFile name: filename.txt<br/>\nAbsolute path: C:\\Users\\MyName\\filename.txt<br/>\nWriteable: true<br/>\nReadable: true<br/>\nFile size in bytes: 0\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_get\" target=\"_blank\">Run Example \u00bb</a>\n</div><div class=\"w3-note w3-panel\">\n<p><strong>Note:</strong> There are many available classes in the Java API that can be used to read and write files in Java: <code class=\"w3-codespan\">FileReader, BufferedReader, Files, Scanner, FileInputStream, FileWriter, BufferedWriter, FileOutputStream</code>, etc. Which one to use depends on the Java version you're working with and whether you need to read bytes or characters, and the size of the file/lines etc.</p>\n<p><strong>Tip:</strong> To delete a file, read our <a href=\"java_files_delete.asp\">Java Delete Files</a> chapter.</p>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_files_create.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_files_delete.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_files_read.asp"
    },
    {
      "Java Delete Files": {
        "examples": [
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File;\u00a0 // Import the File class\n\npublic class DeleteFile {\n  public static void main(String[] args) { \n    File myObj = new File(\"filename.txt\"); \n    if (myObj.delete()) { \n      System.out.println(\"Deleted the file: \" + myObj.getName());\n    } else {\n      System.out.println(\"Failed to delete the file.\");\n    } \n  } \n}</code></pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>\nDeleted the file: filename.txt\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_delete\" target=\"_blank\">Run Example \u00bb</a>\n</div>",
          "<div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File; \n\npublic class DeleteFolder {\n  public static void main(String[] args) { \n    File myObj = new File(\"C:\\\\Users\\\\MyName\\\\Test\"); \n    if (myObj.delete()) { \n      System.out.println(\"Deleted the folder: \" + myObj.getName());\n    } else {\n      System.out.println(\"Failed to delete the folder.\");\n    } \n  } \n</code>}</pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>\nDeleted the folder: Test\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_delete_folder\" target=\"_blank\">Run Example \u00bb</a>\n</div>"
        ],
        "Delete a File": "<p>To delete a file in Java, use the <code class=\"w3-codespan\">delete()</code> method:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File;\u00a0 // Import the File class\n\npublic class DeleteFile {\n  public static void main(String[] args) { \n    File myObj = new File(\"filename.txt\"); \n    if (myObj.delete()) { \n      System.out.println(\"Deleted the file: \" + myObj.getName());\n    } else {\n      System.out.println(\"Failed to delete the file.\");\n    } \n  } \n}</code></pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>\nDeleted the file: filename.txt\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_delete\" target=\"_blank\">Run Example \u00bb</a>\n</div><hr/><div id=\"midcontentadcontainer\" style=\"overflow:auto;text-align:center\">\n<!-- MidContent -->\n<!-- <p class=\"adtext\">Advertisement</p> -->\n<div id=\"adngin-mid_content-0\"></div>\n</div><hr/>",
        "Delete a Folder": "<p>You can also delete a folder. However, it must be empty:</p><div class=\"w3-example\">\n<h3>Example</h3>\n<pre class=\"language-java w3-white\"><code>import java.io.File; \n\npublic class DeleteFolder {\n  public static void main(String[] args) { \n    File myObj = new File(\"C:\\\\Users\\\\MyName\\\\Test\"); \n    if (myObj.delete()) { \n      System.out.println(\"Deleted the folder: \" + myObj.getName());\n    } else {\n      System.out.println(\"Failed to delete the folder.\");\n    } \n  } \n</code>}</pre>\n<p>The output will be:</p>\n<div class=\"notranslate w3-black w3-padding\">\n<code>\nDeleted the folder: Test\n</code>\n</div>\n<a class=\"w3-btn w3-margin-bottom w3-margin-top\" href=\"showjava.asp?filename=demo_files_delete_folder\" target=\"_blank\">Run Example \u00bb</a>\n</div><br/><div class=\"w3-clear nextprev\">\n<a class=\"w3-left w3-btn\" href=\"java_files_read.asp\">\u276e Previous</a>\n<a class=\"w3-right w3-btn\" href=\"java_howto_add_two_numbers.asp\">Next \u276f</a>\n</div><div id=\"mypagediv2\" style=\"position:relative;text-align:center;margin-bottom:20px;clear:both;\"></div>"
      },
      "url": "java_files_delete.asp"
    }
  ]
}
